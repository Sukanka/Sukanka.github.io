<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux 系统安装 TeXLive 之后的事</title>
      <link href="/2020/05/17/texlive_postinstallation/"/>
      <url>/2020/05/17/texlive_postinstallation/</url>
      
        <content type="html"><![CDATA[<p>在回到学校隔离之后觉得十分无聊，又翻了翻刘海洋老师的 《LaTeX 入门》。发现我的 TeXLive 安装得并不完整，至少字体没有被系统用上。本文大部分内容摘自《LaTeX 入门》第8页至第9页。</p><p><strong>Windows 系统没有必要看本文！ </strong> 因为安装时应该已经配置好了。</p><h1 id="为-XeTeX-配置字体"><a href="#为-XeTeX-配置字体" class="headerlink" title="为 XeTeX 配置字体"></a>为 XeTeX 配置字体</h1><p>为 XeTeX 配置字体目的是让操作系统的 fontconfig 库能够找到 TeXLive 附带的大量字体。下面是具体步骤：</p><ol><li><p>将 <code>TEXMFSYSVAR/fonts/conf/texlive-fontconfig.conf</code> 链接到 <code>/etc/fonts/conf.d/09-texlive.conf</code>。 其中 <code>TEXMFSYSVAR</code> 是一个变量，在安装时指定，我使用的是 TeXLive 2020, 安装于 <code>/opt/texlive</code>.我使用的命令为</p><pre class="line-numbers language-lang-bash"><code class="language-lang-bash">sudo ln -s /opt/texlive/2020/texmf-var/fonts/conf/texlive-fontconfig.conf  /etc/fonts/conf.d/09-texlive.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>刷新字体缓存。</p><pre class="line-numbers language-lang-bash"><code class="language-lang-bash">sudo fc-cache -fsv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h1 id="让-XeTeX-能按字体文件名找到系统字体"><a href="#让-XeTeX-能按字体文件名找到系统字体" class="headerlink" title="让 XeTeX 能按字体文件名找到系统字体"></a>让 XeTeX 能按字体文件名找到系统字体</h1><p>有时候字体的名称和字体名并不相同，字体的名称并不容易看到。但是可以通过修改 TeXLive 安装目录下的 <code>texmf.cnf</code>, 在里面修改 <code>OSFONTDIR</code> 的值， 如</p><pre><code>OSFONTDIR = /usr/share/fonts//</code></pre>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TeXLive </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Oracle免费VPS 搭建Aria2+Caddy+Filebrowser 文件下载器</title>
      <link href="/2020/05/07/ariaandcaddy/"/>
      <url>/2020/05/07/ariaandcaddy/</url>
      
        <content type="html"><![CDATA[<p>本文介绍利用甲骨文的免费VPS 搭建 Aria2+Caddy+filebrowser 的下载平台。给自己留一个备份。等到<a href="https://github.com/helloxz/ccaa" target="_blank" rel="noopener">ccaa2.0</a>版本支持caddy 也许本文就没有必要了。</p><h1 id="获取免费服务器"><a href="#获取免费服务器" class="headerlink" title="获取免费服务器"></a>获取免费服务器</h1><p>甲骨文(Oracle) 公司提供免费服务器，需要外币卡（信用卡储蓄卡均可），如 Visa, MasterCard, JCB, AE 等，单标银联卡不行。具体见 <a href="https://51.ruyo.net/14138.html" target="_blank" rel="noopener">申请Oracle Cloud永久免费服务+300美元试用额度</a>.</p><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>以下我们假定域名为 <strong>example.com</strong>, 用于 ariaNg面板的域名为 <strong>aria.example.com</strong>, 用于 filebrowser 的域名为 <strong>file.example.com</strong>. 假设服务器ip地址为 <strong>132.145.123.159</strong>。</p><p>首先在域名提供商处将域名解析到对应的ip 地址 （A记录）。</p><h1 id="搭建下载平台"><a href="#搭建下载平台" class="headerlink" title="搭建下载平台"></a>搭建下载平台</h1><p>在获取到免费服务器后，用 ssh 登录上去，准备安装 Aria2 等。</p><p>这部分根据 <a href="https://github.com/helloxz/ccaa" target="_blank" rel="noopener">https://github.com/helloxz/ccaa</a> 改编。</p><p>由于2.0版本去除了caddy, 本文使用的是1.0版本的脚本。</p><p>注意：FileBrowser 2.1.0 版本有 Bug, 无法编辑文件，建议使用 2.0.16版本。</p><pre class="line-numbers language-lang-bash"><code class="language-lang-bash">#!/bin/bash#####    一键安装Caddy + Aria2 + AriaNg        ##########    作者：xiaoz.me                        ##########    更新时间：2019-05-15                ######导入环境变量PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/bin:/sbinexport PATHaria_ver=1.35.0caddy_ver=2.0.0ariang_ver=1.1.6#安装之前的准备function setout(){    if [ -e "/usr/bin/yum" ]    then        yum -y install curl gcc gcc+ make bzip2    else        #更新软件，否则可能make命令无法安装        sudo apt-get update        sudo apt-get install -y curl make    fi}#安装Aria2function install_aria2(){    #yum -y update    #安装aria2静态编译版本，来源于https://github.com/q3aql/aria2-static-builds/    wget -c https://github.com/q3aql/aria2-static-builds/releases/download/v${aria_ver}/aria2-${aria_ver}-linux-gnu-64bit-build1.tar.bz2    tar jxvf aria2-${aria_ver}-linux-gnu-64bit-build1.tar.bz2    cd aria2-${aria_ver}-linux-gnu-64bit-build1    make install    cd ..}#安装caddyfunction install_caddy(){    #一键安装https://caddyserver.com/download/linux/amd64?plugins=http.filemanager&license=personal&telemetry=off    #curl https://getcaddy.com | bash -s personal http.filemanager    #安装caddy    wget https://github.com/caddyserver/caddy/releases/download/v${caddy_ver}/caddy_${caddy_ver}_linux_amd64.tar.gz -O caddy.tar.gz    tar -zxvf caddy.tar.gz    mv caddy /usr/sbin/    chmod +x /usr/sbin/caddy    #添加服务    #mv init/linux-systemd/caddy.service /lib/systemd/system    #chmod +x /lib/systemd/system/caddy.service    #开机启动    #systemctl enable caddy.service}function install_file_browser(){    #下载File Browser    wget https://github.com/filebrowser/filebrowser/releases/download/v2.0.16/linux-amd64-filebrowser.tar.gz    #解压    tar -zxvf linux-amd64-filebrowser.tar.gz    #移动位置    mv filebrowser /usr/sbin    cd}#处理配置文件function dealconf(){    #创建目录和文件    mkdir -p /etc/ccaa/    touch /etc/ccaa/aria2.session    touch /etc/ccaa/aria2.log    touch /etc/ccaa/caddy.log    cp aria2.conf /etc/ccaa/    cp caddy.conf /etc/ccaa/    cp upbt.sh /etc/ccaa/    chmod +x /etc/ccaa/upbt.sh    chmod +x ccaa    cp ccaa /usr/sbin}#自动放行端口function chk_firewall(){    if [ -e "/etc/sysconfig/iptables" ]    then        iptables -I INPUT -p tcp --dport 6080 -j ACCEPT        iptables -I INPUT -p tcp --dport 6800 -j ACCEPT        iptables -I INPUT -p tcp --dport 6998 -j ACCEPT        iptables -I INPUT -p tcp --dport 51413 -j ACCEPT        service iptables save        service iptables restart    elif [ -e "/etc/firewalld/zones/public.xml" ]    then        firewall-cmd --zone=public --add-port=6080/tcp --permanent        firewall-cmd --zone=public --add-port=6800/tcp --permanent        firewall-cmd --zone=public --add-port=6998/tcp --permanent        firewall-cmd --zone=public --add-port=51413/tcp --permanent        firewall-cmd --reload    elif [ -e "/etc/ufw/before.rules" ]    then        sudo ufw allow 6080/tcp        sudo ufw allow 6800/tcp        sudo ufw allow 6998/tcp        sudo ufw allow 51413/tcp    fi}#删除端口function del_post() {    if [ -e "/etc/sysconfig/iptables" ]    then        sed -i '/^.*6080.*/'d /etc/sysconfig/iptables        sed -i '/^.*6800.*/'d /etc/sysconfig/iptables        sed -i '/^.*6998.*/'d /etc/sysconfig/iptables        sed -i '/^.*51413.*/'d /etc/sysconfig/iptables        service iptables save        service iptables restart    elif [ -e "/etc/firewalld/zones/public.xml" ]    then        firewall-cmd --zone=public --remove-port=6080/tcp --permanent        firewall-cmd --zone=public --remove-port=6800/tcp --permanent        firewall-cmd --zone=public --remove-port=6998/tcp --permanent        firewall-cmd --zone=public --remove-port=51413/tcp --permanent        firewall-cmd --reload    elif [ -e "/etc/ufw/before.rules" ]    then        sudo ufw delete 6080/tcp        sudo ufw delete 6800/tcp        sudo ufw delete 6998/tcp        sudo ufw delete 51413/tcp    fi}#设置账号密码function setting(){    echo '-------------------------------------------------------------'    read -p "设置下载路径（请填写绝对地址，默认/data/ccaaDown）:" downpath    read -p "Aria2 RPC 密钥:(字母或数字组合，不要含有特殊字符):" secret    #如果Aria2密钥为空    while [ -z "${secret}" ]    do        read -p "Aria2 RPC 密钥:(字母或数字组合，不要含有特殊字符):" secret    done#     read -p "设置Caddy用户名:" caddyuser#     while [ -z "${caddyuser}" ]#     do#         read -p "设置Caddy用户名:" caddyuser#     done#     #     read -p "设置Caddy密码:" caddypass#     while [ -z "${caddypass}" ]#     do#         read -p "设置Caddy密码:" caddypass#     done    read -p "Filebrowser 域名地址：(filebrowser.example.com):" filebrowser_domain    while [ -z "${filebrowser_domain}" ]    do         read -p "Filebrowser 域名地址：(filebrowser.example.com):" filebrowser_domain    done    read -p "AriaNg 面板域名地址：(aria.example.com):" ariang_domain    while [ -z "${ariang_domain}" ]    do        read -p "AriaNg 面板域名地址：(aria.example.com):" ariang_domain    done    #如果下载路径为空，设置默认下载路径    if [ -z "${downpath}" ]    then        downpath='/data/ccaaDown'    fi    #执行替换操作    mkdir -p ${downpath}    sed -i "s%dir=%dir=${downpath}%g" /etc/ccaa/aria2.conf    sed -i "s/rpc-secret=/rpc-secret=${secret}/g" /etc/ccaa/aria2.conf#     sed -i "s/username/${caddyuser}/g" /etc/ccaa/caddy.conf#     sed -i "s/password/${caddypass}/g" /etc/ccaa/caddy.conf#     sed -i "s%/home%${downpath}%g" /etc/ccaa/caddy.conf#     sed -i "s%/admin%/admin ${downpath}%g" /etc/ccaa/caddy.conf    #更新tracker    bash ./upbt.sh    #安装AriaNg    wget -O AriaNg.zip https://github.com/mayswind/AriaNg/releases/download/${ariang_ver}/AriaNg-${ariang_ver}.zip    unzip AriaNg.zip    sed -i 's|</ul></section></aside>|<li><a class="toolbar" title="文件管理" href="https://_filebrowser.example.com" target="_blank"><i class="fa fa-folder-o"></i> 文件管理</a></li>&|' AriaNg/index.html    sed -i "s/_filebrowser.example.com/${filebrowser_domain}/g"  AriaNg/index.html    cp -a AriaNg /etc/ccaa    #启动服务    nohup aria2c --conf-path=/etc/ccaa/aria2.conf > /etc/ccaa/aria2.log 2>&1 &    nohup caddy -conf="/etc/ccaa/caddy.conf" > /etc/ccaa/caddy.log 2>&1 &    #获取ip    osip=$(curl -4s https://api.ip.sb/ip)    echo '-------------------------------------------------------------'    echo "大功告成，请访问: http://${osip}:6080/"    echo '用户名:' ${caddyuser}    echo '密码:' ${caddypass}    echo 'Aria2 RPC 密钥:' ${secret}    echo '帮助文档: https://dwz.ovh/ccaa （必看）'     echo '-------------------------------------------------------------'}#清理工作function cleanup(){    rm -rf *.zip    rm -rf *.gz    rm -rf *.txt    rm -rf aria2-1.3*    #rm -rf *.conf    rm -rf init}#卸载function uninstall(){    #停止所有服务    kill -9 $(pgrep 'aria2c')    kill -9 $(pgrep 'caddy')    #删除服务    #systemctl disable caddy.service    #rm -rf /lib/systemd/system/caddy.service    #删除文件    rm -rf /etc/ccaa    rm -rf /usr/sbin/caddy    rm -rf /usr/sbin/ccaa    rm -rf /usr/bin/aria2c    rm -rf aria2-1.*    rm -rf AriaNg*    rm -rf /usr/share/man/man1/aria2c.1    rm -rf /etc/ssl/certs/ca-certificates.crt    #删除端口    del_post    echo "------------------------------------------------"    echo '卸载完成！'    echo "------------------------------------------------"}#选择安装方式echo "------------------------------------------------"echo "Linux + Caddy + Aria2 + AriaNg一键安装脚本(CCAA)"echo "1) 安装CCAA"echo "2) 卸载CCAA"echo "3) 更新bt-tracker"echo "q) 退出！"read -p ":" istypecase $istype in    1)         setout        install_aria2 && \        install_caddy && \        dealconf && \        chk_firewall && \        setting && \        cleanup    ;;    2)         uninstall    ;;    3)         bash ./upbt.sh    ;;    q)         exit    ;;    *) echo '参数错误！'esac<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p>下载 <a href="https://github.com/helloxz/ccaa/archive/v1.0.zip，" target="_blank" rel="noopener">https://github.com/helloxz/ccaa/archive/v1.0.zip，</a> 然后解压，将<code>ccaa.sh</code> 的内容修改为上述内容。 </p><pre class="line-numbers language-lang-bash"><code class="language-lang-bash">sudo su # 切换为rootwget https://github.com/helloxz/ccaa/archive/v1.0.zipunzip v1.0.zip# 然后修改 ccaa.sh 的内容并加上执行权限。# 然后运行 ccaa.sh选择安装<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装完 ccaa 之后， 我们需要手动配置 <code>filebrowser</code></p><pre><code>touch /etc/ccaa/filebrowser.dbchmod 0777 -R /etc/ccaa/ # 用于解决权限问题</code></pre><h3 id="配置-filebrowser"><a href="#配置-filebrowser" class="headerlink" title="配置 filebrowser"></a>配置 filebrowser</h3><pre><code>#创建并初始化数据库filebrowser -d /etc/ccaa/filebrowser.db config init#设置filebrowser监听地址filebrowser -d /etc/ccaa/filebrowser.db config set --address 0.0.0.0#设置filebrowser监听端口,自己改(8099)filebrowser -d /etc/ccaa/filebrowser.db config set --port 8099#设置filebrowser语言环境filebrowser -d /etc/ccaa/filebrowser.db config set --locale zh-cn#设置filebrowser日志文件位置filebrowser -d /etc/ccaa/filebrowser.db config set --log /var/log/filebrowser.log#设置filebrowser Web控制台界面账号和密码 (root, 123456)filebrowser -d /etc/ccaa/filebrowser.db users add root 123456 --perm.admin</code></pre><h3 id="修改网站配置"><a href="#修改网站配置" class="headerlink" title="修改网站配置"></a>修改网站配置</h3><p>如果你有域名，可以配置 https 访问。</p><pre><code>vim /etc/ccaa/caddy.conf</code></pre><pre><code>aria.example.com { # 你的 ariaNg 控制面板的域名        root /etc/ccaa/AriaNg        gzip        #超时时间        timeouts 0        #访问口令        tls your_email@example.com # 你的邮件地址}filebrowser.example.com { # filebrowser 管理界面域名        gzip        tls your_email@example.com # 你的邮件地址        proxy / http://127.0.0.1:8099 # 注意端口号改成之前设置的 filebrowser 的端口号}</code></pre><p>配置好之后，输入 </p><pre><code>/sbin/caddy -log stdout -agree=true -conf=/etc/ccaa/caddy.conf -root=/var/tmp -quic</code></pre><p>查看 输出，会给你一个类似于 <code>https://acme-v02.api.letsencrypt.org/acme/authz-v3/440733xxx</code>的地址。复制里面的 <code>token</code> 的内容（不含引号），添加到域名的txt 记录里面,如</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200507034356.png" alt></p><p>其中，我的ariang 面板域名是 <code>aria.mydomain.suffix</code></p><p>再次运行 </p><pre><code>/sbin/caddy -log stdout -agree=true -conf=/etc/ccaa/caddy.conf -root=/var/tmp -quic</code></pre><p>看是否正常运行。</p><h3 id="修改-AriaNg-面板"><a href="#修改-AriaNg-面板" class="headerlink" title="修改 AriaNg 面板"></a>修改 AriaNg 面板</h3><pre><code>sed -i &#39;s|http://server_ip:6081/|https://prefix.yourdomain.suffix|g&#39; etc/ccaa/AriaNg/index.html # 注意修改域名</code></pre><h4 id="filebrowser-自启动文件"><a href="#filebrowser-自启动文件" class="headerlink" title="filebrowser 自启动文件"></a>filebrowser 自启动文件</h4><pre class="line-numbers language-lang-bash"><code class="language-lang-bash">vim /etc/systemd/system/filebrowser.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入以下内容</p><pre><code>[Unit]Description=FilebrowserAfter=network.target[Service]ExecStart=/usr/sbin/filebrowser -d /etc/ccaa/filebrowser.db[Install]WantedBy=multi-user.target</code></pre><h3 id="caddy-自启动"><a href="#caddy-自启动" class="headerlink" title="caddy 自启动"></a>caddy 自启动</h3><pre><code>vim /etc/systemd/system/filebrowser.service</code></pre><pre><code>[Unit]Description=Caddy HTTP/2 web serverDocumentation=https://caddyserver.com/docsAfter=network-online.targetWants=network-online.target systemd-networkd-wait-online.service[Service]Restart=on-abnormal; User and group the process will run as.User=caddyGroup=caddy; Letsencrypt-issued certificates will be written to this directory.Environment=CADDYPATH=/etc/ssl/caddy; Always set &quot;-root&quot; to something safe in case it gets forgotten in the Caddyfile.ExecStart=/sbin/caddy -log stdout -agree=true -conf=/etc/ccaa/caddy.conf -root=/var/tmp -quic; Use graceful shutdown with a reasonable timeoutKillMode=mixedKillSignal=SIGQUITTimeoutStopSec=5s; Limit the number of file descriptors; see `man systemd.exec` for more limit settings.LimitNOFILE=1048576; Unmodified caddy is not expected to use more than that.LimitNPROC=512; Use private /tmp and /var/tmp, which are discarded after caddy stops.PrivateTmp=true; Use a minimal /devPrivateDevices=true; Hide /home, /root, and /run/user. Nobody will steal your SSH-keys.ProtectHome=true; Make /usr, /boot, /etc and possibly some more folders read-only.ProtectSystem=full; … except /etc/ssl/caddy, because we want Letsencrypt-certificates there.;   This merely retains r/w access rights, it does not add any new. Must still be writable on the host!ReadWriteDirectories=/etc/ssl/caddy; The following additional security directives only work with systemd v229 or later.; They further retrict privileges that can be gained by caddy. Uncomment if you like.; Note that you may have to add capabilities required by any plugins in use.CapabilityBoundingSet=CAP_NET_BIND_SERVICEAmbientCapabilities=CAP_NET_BIND_SERVICENoNewPrivileges=true[Install]WantedBy=multi-user.target</code></pre><h4 id="aria2-自启动"><a href="#aria2-自启动" class="headerlink" title="aria2 自启动"></a>aria2 自启动</h4><pre><code>vim /etc/systemd/system/aria2.service</code></pre><pre><code>Description=aria2After=network.target[Service]ExecStart=/usr/bin/aria2c --conf-path=/etc/ccaa/aria2.conf[Install]WantedBy=multi-user.target</code></pre><h3 id="加载自启动文件"><a href="#加载自启动文件" class="headerlink" title="加载自启动文件"></a>加载自启动文件</h3><pre><code>systemctl daemon-reload systemctl start aria2.servicesystemctl start caddy.servicesystemctl start filebrowser.servicesystemctl enable aria2.servicesystemctl enable caddy.servicesystemctl enable filebrowser.service</code></pre><p> 可以使用 <code>systemctl status aria2</code>来查看 aria2 的运行状态。</p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="我的aria2-conf"><a href="#我的aria2-conf" class="headerlink" title="我的aria2.conf"></a>我的<code>aria2.conf</code></h2><pre><code>## Manjaro## &#39;#&#39;开头为注释内容, 选项都有相应的注释说明, 根据需要修改 #### 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  #### 文件保存相关 ### 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置dir=/Downloads# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16Mdisk-cache=32M# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc# 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc# falloc和trunc则需要文件系统和内核支持# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项file-allocation=trunc# 断点续传continue=true#日志位置log=stdoutlog-level=warn## 下载连接相关 ### 最大同时下载任务数, 运行时可修改, 默认:5max-concurrent-downloads=10# 同一服务器连接数, 添加时可指定, 默认:1max-connection-per-server=16# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载min-split-size=20M# 单个任务最大线程数, 添加时可指定, 默认:5split=16# 整体下载速度限制, 运行时可修改, 默认:0#max-overall-download-limit=0# 单个任务下载速度限制, 默认:0#max-download-limit=0# 整体上传速度限制, 运行时可修改, 默认:0#max-overall-upload-limit=1024K# 单个任务上传速度限制, 默认:0#max-upload-limit=0# 禁用IPv6, 默认:false#disable-ipv6=truecheck-certificate=false#自动重命名#auto-file-renaming# 连接超时时间, 默认:60#timeout=60# 最大重试次数, 设置为0表示不限制重试次数, 默认:5#max-tries=5# 设置重试等待的秒数, 默认:0#retry-wait=0#HTTP 代理服务器#http-proxy=http://127.0.0.1:12333#HTTPS 代理服务器#https-proxy=http://127.0.0.1:12333## 进度保存相关 ### 从会话文件中读取下载任务input-file=/etc/ccaa/aria2.sessionsave-session=/etc/ccaa/aria2.session# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0save-session-interval=30## RPC相关设置 ### 启用RPC, 默认:falseenable-rpc=true# 允许所有来源, 默认:falserpc-allow-origin-all=true# 允许非外部访问, 默认:falserpc-listen-all=true# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同#event-poll=select# RPC监听端口, 端口被占用时可以修改, 默认:6800rpc-listen-port=6800# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项rpc-secret=mypassword# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项#rpc-user=&lt;USER&gt;# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项#rpc-passwd=&lt;PASSWD&gt;# 是否启用 RPC 服务的 SSL/TLS 加密,# 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接rpc-secure=true# 在 RPC 服务中启用 SSL/TLS 加密时的证书文件,# 使用 PEM 格式时，您必须通过 --rpc-private-key 指定私钥rpc-certificate=/root/.caddy/acme/acme-v02.api.letsencrypt.org/sites/aria.example.com/aria.example.com.crt# 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件rpc-private-key=/root/.caddy/acme/acme-v02.api.letsencrypt.org/sites/aria.example.com/aria.example.com.key## BT/PT下载相关 ### 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:truefollow-torrent=true# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999listen-port=51413#强制加密, 防迅雷必备bt-require-crypto=true# 单个种子最大连接数, 默认:55bt-max-peers=110# 打开DHT功能, PT需要禁用, 默认:trueenable-dht=true# 打开IPv6 DHT功能, PT需要禁用enable-dht6=true# DHT网络监听端口, 默认:6881-6999dht-listen-port=6881-6999# 本地节点查找, PT需要禁用, 默认:falsebt-enable-lpd=true# 种子交换, PT需要禁用, 默认:trueenable-peer-exchange=true# 每个种子限速, 对少种的PT很有用, 默认:50K#bt-request-peer-speed-limit=50K# 客户端伪装, PT需要peer-id-prefix=-TR2770-user-agent=Transmission/2.77# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0seed-ratio=0#分离做种，做种的时候不算在任务里bt-detach-seed-only=true#下载完自动删除.aria2文件#on-download-complete=&quot;rm -f &quot;$3.aria2&quot;# 强制保存会话, 即使任务已经完成, 默认:false# 较新的版本开启后会在任务完成后依然保留.aria2文件force-save=false# BT校验相关, 默认:true#bt-hash-check-seed=true# 继续之前的BT任务时, 无需再次校验, 默认:false#bt-seed-unverified=true# 保存磁力链接元数据为种子文件(.torrent文件), 默认:falsebt-save-metadata=true# trackersbt-tracker=udp://93.158.213.92:1337/announce,http://93.158.213.92:1337/announce,udp://188.241.58.209:6969/announce,udp://62.210.97.59:1337/announce,http://62.210.97.59:1337/announce,udp://151.80.120.114:2710/announce,udp://151.80.120.115:2710/announce,udp://208.83.20.20:6969/announce,udp://185.181.60.67:80/announce,udp://194.182.165.153:6969/announce,udp://37.235.174.46:2710/announce,udp://5.206.13.166:6969/announce,udp://89.234.156.205:451/announce,udp://92.223.105.178:6969/announce,udp://176.113.71.60:6961/announce,http://176.113.71.60:6961/announce,udp://207.241.226.111:6969/announce,udp://51.15.40.114:80/announce,udp://207.241.231.226:6969/announce,udp://184.105.151.164:6969/announce,http://184.105.151.164:6969/announce,udp://212.47.227.58:6969/announce,udp://31.210.170.169:2710/announce,udp://46.148.18.250:2710/announce,udp://51.15.55.204:1337/announce,udp://91.149.192.31:6969/announce,udp://5.226.148.20:6969/announce,udp://217.76.183.53:80/announce,udp://51.81.46.170:6969/announce,udp://46.148.18.254:2710/announce,http://51.15.55.204:1337/announce,http://51.81.46.170:6969/announce,udp://207.246.121.172:2000/announce,udp://62.171.179.41:80/announce,udp://212.1.226.176:2710/announce,udp://173.82.240.104:6969/announce,http://95.107.48.115:80/announce,udp://94.224.67.24:6969/announce,udp://51.158.23.91:6969/announce,udp://78.46.225.225:2710/announce,udp://194.26.183.158:6969/announce,udp://159.89.208.145:8866/announce,http://78.46.225.225:2710/announce,http://159.89.208.145:8866/announce,udp://103.196.36.31:6969/announce,udp://167.179.77.133:1/announce,udp://165.227.0.51:6969/announce,udp://222.84.65.27:6969/announce,udp://49.12.75.231:6969/announce,udp://78.30.254.12:2710/announce,udp://218.5.41.129:2710/announce,udp://80.211.26.119:9696/announce,http://122.116.144.108:80/announce,http://165.227.0.51:6969/announce,http://149.129.63.70:6969/announce,http://222.84.65.27:6969/announce,http://116.203.120.203:6969/announce,http://177.139.10.157:6969/announce,http://51.38.230.101:80/announce,http://54.39.179.91:6699/announce,http://78.30.254.12:2710/announce,http://51.79.71.167:80/announce,udp://182.150.53.61:8080/announce,udp://163.172.209.40:2710/announce,udp://176.113.68.67:6961/announce,udp://75.127.14.224:2710/announce,udp://52.58.128.163:6969/announce,udp://51.15.3.74:6969/announce,udp://139.99.100.97:8080/announce,http://182.150.53.61:8080/announce,http://176.113.68.67:6961/announce,http://54.37.106.164:80/announce</code></pre><p>使用 https 时注意以下几行</p><pre><code># 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接rpc-secure=true# 在 RPC 服务中启用 SSL/TLS 加密时的证书文件,# 使用 PEM 格式时，您必须通过 --rpc-private-key 指定私钥rpc-certificate=/root/.caddy/acme/acme-v02.api.letsencrypt.org/sites/aria.example.com/aria.example.com.crt# 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件rpc-private-key=/root/.caddy/acme/acme-v02.api.letsencrypt.org/sites/aria.example.com/aria.example.com.key</code></pre><p>这几行是 aria2 的口令</p><pre><code># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项rpc-secret=mypassword</code></pre>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aria2 </tag>
            
            <tag> caddy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人日记，行人止步！</title>
      <link href="/2020/04/29/pedestrians_stop/"/>
      <url>/2020/04/29/pedestrians_stop/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">既然点进来了，就猜一下密码吧！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="dcfd05e69ac62a98c884e333909a2e4a5c3e780183967f86e7fecc57184df4c9">71f3a0ed30b665f4b0a4aa9907be8bb1eb7b2bdf98ade34f2061b022055bc4d8c1b65466d6427755acbe74119d08002258c817531bb8f6afe8f98a144af78ae5913c85c943e6ba7b05df615176a225dff16eb2c9c6d4ef6e91142c9a3f043d61ce08625e5d5a62ee506fdcd7b0562b4b421645b5605000aa9957c3a10256602150efe17977205d039d6aa591e2bc95329a9c4f67adf9176ef5fd2fcb08e8927ab377374603bcd59629ac28915fcaa70c524ac09993c01d39a1d28d88fa45a76b427943f4487ea58a94451bab0c0092998977183a066153b82a965ef49070f64c683fb7f15b35691457771e9b18adb4d7bb43b4fa4478939b578b9259e4110b6b3d0dc0eab8162cdc10a81bbc445d6ac49a67cbf0b03285e70f2cf3148cb46d955ce1e612f75d6bd8427a9447c263460e92a43f480ca35a74c08501bcb1a81fac09a12cfd6bd7bafe1724d8b539c6164fe575252326406d1858ab26ce1082de3683f64dd1414741a0da3f157e1a100ea65755b39491006c2869c5681a4b3211b7c8214738606a89451b4593843fa310d64a14f0b644e4f7461d75c51b622f9e302859441cc30497efad3f9f66e0f51e70c037d23e44e996cc94fc938dc525134130a180fae18210acc147404ea1c07a0c7551e51af3ec290bfcae64f11233fc9614bcb314c20a31ea9d52fee1fc1589c6f2d544b1110f487a19db14265236f7c0c5ea0662746f4602e16f8e92ecc06dc75f4195aa032436169619bc63064989e2a41ddd2902fa729551993de381033a8bc650bacfac614f3de715afbc0a82b811ea4435b8806cb63dbda7340d33233e47f59efe3b9eec6dfb7a1f6bcd95a2829456f235477217eb9a8882d1ab7284a4a390fcab50c6de249fb22507d2bb668d07c54672af2997219b96bc9b58508a9e88835626b48b37522e898a0b8cc6bf3ea5b3adcf86003100e69a72f872d165c3ddb20205a20bd03e145fd1a9d68ebdb2011934a3f06bc3c2b14c5a0f75c3d27c69459bee8637069fea90e9aadaab6f4005761b09b41fce92f44e8ce02a32136fae0aea72d0e1014dd18d965be7d3384e1435b436ffb200693962dced6d635b3bb2eed323753610d67240fee24a368857cb5b6dffbe91d9b15561431dbe091d77162062c425b9963ab84da55d66f039094cc2c0312f5d2979ae05c4bcb92611ed1b35360f37aa721fb50e6bd671dec8ac1c14ae10b245d7b233e1cdd3cd14b278eb6de135176e45c0908b70484187b9739a1e83fa0805854da392ac60f42a55f42ca5d1796119a73ddc9832f0f42127c81f4402ebded99c5879b8e6c881de3b6bb3118a24c3f2bcccaee427066ddc46c619e34ecd6f583235fc758d43a03fc9304ddef2750c73d2c2cd6583b30eb0fab59d3da75e3274a8d06cd4c2e8f8dc029c46954f2249882e3819d6b271e1712de1179621f84db5d3f85e61f8bd11373406b0bb8eb4b62e116b492f4df79c5000e6a668ab3e36a0b61640e6cc9fe0e730cb155d444ad66c29f1e7dabc2ba083894599220f62281d46ef1997b3d79e9ddf412f1cdfedf958f293c3f3c96fd5aa19bd1224d0b6eaa85c13cf0a0820052f7f175517e4cb3b5dc6c2d6d1d8e6bd045e4e4d774d4be3ccfcadd4dc63c4f51c053e0a64b7354778ecc0444584b518ddfdb86b90e01e843fb756d1a208a8527752113f1db1b65da2f81696da8b8b2295b2db21e8858ffa701e459870657eede7245bbb56642fdf8fbaaad61bcd103a97f3877d9450545a41580aabc4724c870c66161833d79a4d0e19257d9b23eef365f875780ffc88362a9a239c3cc45e9ec7dd909e30cc684e6b8bd0a0f293fb0a14f08cdb1baf994fddd27821e7f9dc2877df00b9d01c45f041a945db474f14da777b48313d2664cdf7f81d6e87e50547f1396531047e178a15125f4fca8bdfcf787b6b86c02c26a437e7d91045daf36a5ee7dd11e0993c413c5e2ae5c4e1c3f9150d34bae3741d97a6f742dd0d78680a85c7f660</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>华硕天选R7-4800H+RTX2060 安装 ArchLinux</title>
      <link href="/2020/04/28/archlinux_installation/"/>
      <url>/2020/04/28/archlinux_installation/</url>
      
        <content type="html"><![CDATA[<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>更新： 现在 Manjaro 已经可以进入图形界面，并且一切正常。但是 Arch 真香！</p><p>我有幸以6599返100E卡抢到了一台4800H+2060的天选，之前想要安装 Manjaro, 但是LiveCD始终进入不了图形界面，因而放弃，转而选择了ArchLinux. 详细配置如下</p><pre><code>$ neofetch   --------------------------------------------------------------------------------------                   -`                    sukanka@asustx                   .o+`                   --------------                  `ooo/                   OS: Arch Linux x86_64                 `+oooo:                  Host: TUF Gaming FA506IV_FA506IV 1.0                `+oooooo:                 Kernel: 5.6.7-arch1-1                -+oooooo+:                Uptime: 2 hours, 10 mins              `/:-:++oooo+:               Packages: 970 (pacman)             `/++++/+++++++:              Shell: zsh 5.8            `/++++++++++++++:             Resolution: 1920x1080           `/+++ooooooooooooo/`           DE: Plasma          ./ooosssso++osssssso+`          WM: KWin         .oossssso-````/ossssss+`         WM Theme: 微风        -osssssso.      :ssssssso.        Theme: Breeze [Plasma], Breeze [GTK2/3]       :osssssss/        osssso+++.       Icons: breeze [Plasma], breeze [GTK2/3]      /ossssssss/        +ssssooo/-       Terminal: yakuake    `/ossssso+/:-        -:/+osssso+-     CPU: AMD Ryzen 7 4800H with Radeon Graphics (16) @ 2.900GHz   `+sso+:-`                 `.-/+oso:    GPU: AMD ATI 06:00.0 Renoir  `++:.                           `-/+/   GPU: NVIDIA 01:00.0 NVIDIA Corporation Device 1f15  .`                                 `/   Memory: 2492MiB / 31594MiB</code></pre><p>首先我参考了<a href="https://www.viseator.com/2017/05/17/arch_install/" target="_blank" rel="noopener">以官方Wiki的方式安装ArchLinux</a></p><p>安装上了 ArchLinux, 需要注意的是，天选是 nvme的固态硬盘，因而没有<code>/dev/sda</code> 之类的，而是 <code>/dev/nvme0n1</code></p><h1 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h1><p>参照 <a href="https://www.viseator.com/2017/05/19/arch_setup/" target="_blank" rel="noopener">ArchLinux安装后的必须配置与图形界面安装教程</a></p><h2 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h2><p>这部分记录自己常用的软件。其中 <code>texlive</code> 实际安装的是从<a href="https://tug.org/" target="_blank" rel="noopener">TeX Users Group</a> 下载的最新版本，之后安装<code>texlive-dummy</code>让 Arch 认为 <code>texlive</code> 已经安装。</p><pre><code>$ yay  -Qqe-----------------------------------------------------------------------------------amd-ucode anaconda android-sdk android-sdk-platform-tools archlinuxcn-keyring aria2 ark autoconf automake base bbswitch-ati-dkms-git bind-tools binutils bison ca-certificates clash cuda dialog dmidecode dnsmasq dolphin  efibootmgr fakeroot fcitx-baidupinyin fcitx-cloudpinyin file filelight findutils flameshot flex flutter-beta freerdp gawk gcc gettext gimp gnome-keyring google-chrome grep groff grub gwenview gzip inetutils inkscape inxi iptables-nft julia  kamoso kate kcm-fcitx kcron   kdeconnect  kdenlive  krdc krfb  ksystemlog  latte-dock libdbusmenu-glib   libtool linux linux-firmware m4 make mathpix-snipping-tool  mpv namcap neofetch net-tools netease-cloud-music network-manager-applet networkmanager nodejs-lts-erbium npm ntfs-3g nvidia okular opencc optimus-manager-amd-git os-prober  p7zip pacman pamac-aur pandoc pandoc-citeproc pandoc-crossref patch peek perl-tk picgo-appimage pkgconf plasma  proxychains-ng qemu qq-linux qt5-imageformats r samba  sed spectacle strace sudo systemd-kcm systemd-shutdown-diagnose  texinfo texlive-dummy tk typora unrar  vim virt-manager visual-studio-code-bin wget which wpa_supplicant wps-office-cn  xf86-video-amdgpu xf86-video-fbdev xorg yakuake yay zotero zsh</code></pre><h2 id="双显卡方案"><a href="#双显卡方案" class="headerlink" title="双显卡方案"></a>双显卡方案</h2><p>我以前用的 <code>Bumblebee</code> 但是听说性能不行，后来换了 <code>optimus-manager</code> 由于是 AMD处理器，应该使用 <code>optimus-manager-amd-git</code>$^{\text{AUR}}$ ，同时该包依赖的 <code>bbswitch</code> 也需要换成 <code>bbswitch-ati-git</code>$^{\text{AUR}}$</p><p>具体配置可以看 <a href="https://blog.edward-p.xyz/optimus-manager/" target="_blank" rel="noopener">使用 optimus-manager 来管理显卡切换</a>。</p><h2 id="屏幕撕裂问题"><a href="#屏幕撕裂问题" class="headerlink" title="屏幕撕裂问题"></a>屏幕撕裂问题</h2><p>我的各种驱动装好后，开机过了一会儿之后，屏幕左下角会出现闪屏，在设置里面将屏幕刷新率设置成60Hz 之后就好了。实际上并没有解决这个问题。</p>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AMD </tag>
            
            <tag> KDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word 论文写作小技巧</title>
      <link href="/2020/04/18/my_word_academic_suite/"/>
      <url>/2020/04/18/my_word_academic_suite/</url>
      
        <content type="html"><![CDATA[<p>本文主要介绍使用在 Windows 系统中 MS Word 配合 Citavi 进行论文写作和文献管理的小技巧。</p><h2 id="图表的交叉引用"><a href="#图表的交叉引用" class="headerlink" title="图表的交叉引用"></a>图表的交叉引用</h2><p>对于 Word 中插入的图表，在正文写作时可能需要对图表进行交叉引用，比如“由图 1 知”、“由表 2 可得”。此时，我们可以运用 Word 主菜单栏「引用」中的「插入题注」功能。在写作完成后，我们只需要选中相应区域，点击更新域（或者按快捷键「F9」），图表的编号会自动更新。如果想要对所有域进行更新，可以先按「Ctrl + A」，再按「F9」。</p><p><img src="https://github.com/sukanka/sukanka.github.io/blob/master/2020/04/18/my_word_academic_suite/202020200418185109.gif?raw=true" alt></p><h2 id="公式编号及交叉引用"><a href="#公式编号及交叉引用" class="headerlink" title="公式编号及交叉引用"></a>公式编号及交叉引用</h2><p>除了图表，我们往往还需要对公式进行交叉引用。对于公式的编号及交叉引用，「MathType」或「AxMath」等插件非常好用，但如果你的合作者没有下载相应的软件，则对方可能无法编辑，并且有些情况下（比如部分学校的毕业论文）要求你必须使用 Word 自带公式编辑器，此时外部插件就不香了。因此，这里主要介绍如何使用 Word 自带公式编辑器进行公式编号及交叉引用。</p><p>网上有许多关于公式编号及交叉引用的方法，不过要同时实现<strong>编号右对齐</strong>、<strong>自动更新编号</strong>、<strong>方便交叉引用</strong>三种功能，个人更习惯使用以下方式。</p><p>Word 的公式编辑器可以选择「Unicode」和「LaTeX」两种方式，下面的例子使用后者进行公式编写，具体步骤如下：</p><ol><li><p>使用快捷键「Alt + =」，进入公式编辑状态；</p></li><li><p>输入公式后，在公示编辑框內输入「#()」，将光标停留在括号中，点击主菜单栏「插入」中「文档部件」下拉菜单的「域」，选择「AutoNum」，格式为「1,2,3,…」，点击「确定」，此时「#()」中自动生成了数字「1」，其他公式的编号自动更新（若未更新，可选中相应区域，按快捷键「F9」更新域）；</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200418185250.png" alt></p></li><li><p>选中生成的数字「1」，点击主菜单栏「插入」中的「书签」，在「书签名」中输入公式的标签（如 “Eq1”），点击「添加」；</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200418185329.png" alt></p></li><li><p>使用快捷键「Ctrl + =」，将线性公式转换为专业格式；</p></li><li><p>在正文需要引用公式的位置，点击主菜单栏「插入」中的「交叉引用」，在「引用类型」下拉菜单中选择「书签」，再选择对应的公式标签即可；</p></li><li><p>在写作完成后，类似地，选中相应区域，点击更新域（或者按快捷键「F9」），公式的编号会自动更新。</p></li></ol><p><img src="https://github.com/sukanka/sukanka.github.io/blob/master/2020/04/18/my_word_academic_suite/202020200418185403.gif?raw=true" alt></p><h2 id="文献管理软件：Citavi-6"><a href="#文献管理软件：Citavi-6" class="headerlink" title="文献管理软件：Citavi 6"></a>文献管理软件：Citavi 6</h2><p>市面上常用文献管理软件的对比可以参考<a href="https://www.softhead-citavi.com/blog/2314" target="_blank" rel="noopener">此链接</a>。每个软件都有其自身的优点，每个用户都有自身的使用习惯，适合自己的才是最好的。本人亲身使用过 <strong>EndNote X9</strong> 和 <strong>Citavi 6</strong> 两款文献管理软件进行过论文写作，同时了解对比过若干个其他文献管理软件，不得不承认 <strong>Citavi 6</strong> 的确是文献管理软件中的战斗机，其<a href="https://www.softhead-citavi.com/features" target="_blank" rel="noopener">主要特点</a>参见官网。个人最终选择了 <strong>Citavi 6</strong> 作为主要的文献管理工具，主要有以下几个原因：</p><ul><li>基础功能完善，拓展功能强大，兼具完备性和灵活性；</li><li>可以选择将项目保存在本地或云端（德国本地服务器，数据安全性有保障）；</li><li>社区用户活跃，<a href="http://forum.softhead-citavi.com/" target="_blank" rel="noopener">官方论坛</a>能够解决 90% 以上的软件使用问题，并且能在客户服务 QQ 群向管理员提问，亲测服务态度贼棒。</li></ul><p>当然，<strong>Citavi 6</strong> 也有一些缺陷，个人认为主要有以下几点：</p><ul><li>初期学习成本较大（相对于其他文献管理软件而言），但学会之后显著提高科研效率；</li><li>启动程序较慢（成功启动之后运行流畅）；</li><li>个别情况下遇到云端服务器维护时，无法打开云端项目让人崩溃（鉴于教训，本人将最近正在写作的论文项目存放在了本地，已完成或者不紧急的项目放在云端，云端和本地项目可以相互转换）；</li><li>个别用户的在 Word 中不显示 Citavi 插件（可以在<a href="http://forum.softhead-citavi.com/t/159?ip=1" target="_blank" rel="noopener">官方论坛</a>或者客服服务 QQ 群寻求帮助，但也存在用户的 Word 本身有问题的情况）。</li></ul><p>如果大家对 <strong>Citavi 6</strong> 比较陌生，可以参考 <a href="https://www.softhead-citavi.com/citavi6_user_guide" target="_blank" rel="noopener"><strong>Citavi 6 入门指南</strong></a>进行学习，下面主要介绍几个常用的 <strong>Citavi 6</strong> 小技巧</p><h3 id="导入文献"><a href="#导入文献" class="headerlink" title="导入文献"></a>导入文献</h3><p><strong>Citavi 6</strong> 提供了若干种导入文献的方法，根据个人使用经验，最常用的主要有以下三种：</p><ul><li><p>利用 <strong>Citavi Picker</strong> 插件：Citavi Picker 是 Chrome，Firefox 和 Internet Explorer 的免费扩展浏览器插件，它能在网页上标识 ISBN 和 DOI 号，并将参考信息发送到用户的项目，也可以发送网页和网页内容到用户项目，<a href="http://forum.softhead-citavi.com/t/205?ip=2" target="_blank" rel="noopener">该链接以谷歌学术文献搜索为例</a>；</p></li><li><p>利用 <strong>ISBN, DOI, other ID</strong> 功能：点击菜单栏「ISBN, DOI, other ID」选项，输入文献的识别码（ISBN, DOI, or PubMed ID），在线搜索成功后，点击「Add to project」即可；</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200418185432.png" alt></p></li><li><p>利用<strong>多种格式文件</strong>导入：<strong>Citavi</strong> 具有良好的兼容性，能够以 RIS，BibTeX 和 ENW 等格式导入参考文献，当我们从谷歌学术或者百度学术下载相应格式的文件后，可以直接拖动该文件到 <strong>Citavi</strong> 相应区域。</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200418185454.gif" alt></p></li></ul><h3 id="文內引用"><a href="#文內引用" class="headerlink" title="文內引用"></a>文內引用</h3><p>在理工科领域，文內引用（in-text citation）多使用数字编号，而在社科领域，文內引用（in-text citation）常常要求丰富的格式变换，比如“张三(2020)”、“(张三, 2020)”、“张三”等格式。该功能在 Word 中使用 Citavi 插件可以轻松实现。</p><p><img src="https://github.com/sukanka/sukanka.github.io/blob/master/2020/04/18/my_word_academic_suite/202020200418185521.gif?raw=true" alt></p><h3 id="参考文献格式"><a href="#参考文献格式" class="headerlink" title="参考文献格式"></a>参考文献格式</h3><p><strong>Citavi</strong> 目前提供几乎所有的英文期刊参考文献格式。如果搜索不到某些期刊要求的参考文献格式，可以给工作人员发邮件，工作人员会为你制作相应的期刊论文格式。</p><p>但由于 <strong>Citavi</strong> 开发人员目前只支持德语和英语，所以中文期刊只能自己制作或改编现有参考文献格式的 ccs 文件。比如，<strong>Citavi</strong> 提供了 GB/T 7714-2015 格式，绝大多数中文期刊格式可以在此基础上进行微小改动，这也体现了 <strong>Citavi</strong> 的灵活性，具体实现方法可以参照客服服务 QQ 群中的相关帮助文档。</p><p>据我所知，大多数文献管理软件并不能同时较好地管理中文和英文的参考文献：比如有时候要求中英文的参考文献格式相互独立；再如许多现有的文献格式英文在前，中文在后，而学位论文、中文期刊要求中文在前，英文在后。而 <strong>Citavi</strong> 可以完美地解决上述问题，下图展示了本人在 GB/T 7714-2015 的基础上进行参考文献格式修改，以满足本校本科生毕业论文的参考文献格式的全部要求。在修改时，各个修改成分的修改效果可以在最右边的方框中动态呈现。</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200418185541.png" alt></p><h3 id="Word-导航窗格-Citavi-Pane-协同写作"><a href="#Word-导航窗格-Citavi-Pane-协同写作" class="headerlink" title="Word 导航窗格 + Citavi Pane 协同写作"></a>Word 导航窗格 + Citavi Pane 协同写作</h3><p>在 <strong>Citavi</strong> 导入文献时，将文献进行分类，会为后续写作节省很多时间。在进行论文写作时，同时打开 Word 的导航窗格和 Citavi Pane，会使得写作思路更加清晰。尤其是在写作引言、文献综述和结论时，这些部分涉及的文献较多，如果没有事先的文献分类和清晰的写作框架，学者常常会因为在寻找合适的文内引用上耗费宝贵的时间，并且写作思路也容易被打乱。Word 导航窗格 + Citavi Pane 协同写作能够较好地解决这个问题，让我们更加专注于写作本身。</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200418185557.png" alt></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文到这里就结束了，如果大家对 Word 论文写作和文献管理有什么心得，欢迎一起讨论。</p>]]></content>
      
      
      <categories>
          
          <category> Office </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文写作 </tag>
            
            <tag> 文献管理 </tag>
            
            <tag> Word </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的LaTeX学术套装</title>
      <link href="/2020/04/07/my_academic_suite/"/>
      <url>/2020/04/07/my_academic_suite/</url>
      
        <content type="html"><![CDATA[<p>在平时的论文写作中，如果能够事先将工具配置好能够节省非常多的精力。本文介绍 $\LaTeX$ 配合 VSCode 和 Zotero 进行论文写作和文献管理。</p><h1 id="TeX-套装配置"><a href="#TeX-套装配置" class="headerlink" title="$\TeX$ 套装配置"></a>$\TeX$ 套装配置</h1><h2 id="套装选择"><a href="#套装选择" class="headerlink" title="套装选择"></a>套装选择</h2><p>Windows 和 Linux 推荐使用 TeXLive, 截至目前，最新的 TeXLive 2020版已于 4月10日发布。Mac 推荐使用MacTeX。 都推荐安装完整版，这样不用每次都去下载需要的包。安装教程可以看<a href="https://www.tug.org/texlive/doc/texlive-zh-cn/texlive-zh-cn.pdf" target="_blank" rel="noopener">$\TeX$ <em>Live</em> 指南—2020</a>。</p><h2 id="VSCode-LaTeX-配置"><a href="#VSCode-LaTeX-配置" class="headerlink" title="VSCode LaTeX 配置"></a>VSCode LaTeX 配置</h2><h3 id="LaTeXWorkshop-插件"><a href="#LaTeXWorkshop-插件" class="headerlink" title="LaTeXWorkshop 插件"></a>LaTeXWorkshop 插件</h3><p>编辑器个人推荐使用 VSCode, VSCode 是一款便捷强大的编辑器，界面也十分美观，它的 <a href="https://github.com/James-Yu/LaTeX-Workshop" target="_blank" rel="noopener">$\LaTeX$-WorkShop</a> 插件提供了 $\LaTeX$ 支持，它提供了代码高亮、自动补全、自定义代码片段、编译链、正向跳转、逆向跳转等功能。</p><p>VSCode 还可以为不同的工作区应用不同的设置，因此在写 $\LaTeX$ 时，我们可以为工作区禁用 Python、CodeRunner 等不需要的插件。</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200407234822.gif" alt></p><p>编译链配置可以参考 <a href="https://zhuanlan.zhihu.com/p/38178015" target="_blank" rel="noopener">使用VSCode编写LaTeX</a>。</p><p>在实际中经常用到的编译工具主要有编译文档的pdflatex, xelatex 和编译bib文件的 bibtex 和bier。 如果把各种常用情形都考虑在内至少需要6种编译链。实际上，在tex 文档设置好了编译工具之后，可以通过快捷键编译而不需要手动选择编译链。</p><p>在你的 $\TeX$ 主文件的最开头设置好编译工具，如下面的命令指定了使用 xelatex 来编译文档，biber 来编译bib文件，然后在 tex 文档中使用 快捷键调起 <code>TeXMagicProgramWithArgs</code> 就可以编译。</p><pre class="line-numbers language-lang-latex"><code class="language-lang-latex">%!TEX program = xelatex%!BIB program = biber<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200408000033.png" alt></p><p>下面是我常用的一些快捷方式</p><ul><li>使用<code>TeXMagicProgramWithArgs</code>编译： Ctrl+Alt+B</li><li>正向跳转：Ctrl+Alt+J</li><li>逆向跳转（pdf 到 tex): Ctrl+Click</li></ul><p>$\LaTeX$-WorkShop 插件还提供了各种各样的代码片段，例如可以使用 <code>\equation</code> 产生</p><pre class="line-numbers language-lang-latex"><code class="language-lang-latex">\begin{equation}\end{equation}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>此外还有 <code>\figure</code> 等代码片段用于插入图片。插入表格虽然有 <code>\table</code> 代码片段但是仍然比较麻烦，推荐先在 Excel 做好表格，然后使用 <a href="https://github.com/krlmlr/Excel2LaTeX" target="_blank" rel="noopener">Excel2LaTeX</a> 或者 <a href="https://www.tablesgenerator.com/latex_tables" target="_blank" rel="noopener">LaTeX Tables Generator 网站</a>将Excel 表格转换成 $\LaTeX$ 表格并粘贴。</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200408000432.gif" alt></p><h3 id="其他插件"><a href="#其他插件" class="headerlink" title="其他插件"></a>其他插件</h3><ul><li><a href="https://github.com/tecosaur/LaTeX-Utilities" target="_blank" rel="noopener">LaTeX Utilities</a>: 提供字数统计、zotero交互等功能</li><li><a href="https://github.com/valentjn/vscode-ltex" target="_blank" rel="noopener">LTeX</a> : 为$\LaTeX$ 和 Markdown 提供拼写检查、语法检查等功能, 需要与 LTeX - Chinese support 、LTeX - English support 等语言扩展一起使用。</li></ul><h1 id="Zotero"><a href="#Zotero" class="headerlink" title="Zotero"></a>Zotero</h1><p><strong>Zotero</strong> <a href="https://zh.wikipedia.org/wiki/Help:英語國際音標" target="_blank" rel="noopener">/zoʊˈtɛroʊ/</a>是一款<a href="https://zh.wikipedia.org/wiki/自由及开放源代码软件" target="_blank" rel="noopener">自由及开放源代码</a>的<a href="https://zh.wikipedia.org/wiki/文献管理软件" target="_blank" rel="noopener">文献管理软件</a>，管理书目信息（如作者、标题、出版社、摘要、阅读笔记等）及相关材料（如<a href="https://zh.wikipedia.org/wiki/PDF" target="_blank" rel="noopener">PDF</a>文件等)。其最著名的特性是作为浏览器插件、在线同步、与文档编辑软件如<a href="https://zh.wikipedia.org/wiki/Microsoft_Word" target="_blank" rel="noopener">Microsoft Word</a>、<a href="https://zh.wikipedia.org/wiki/LibreOffice" target="_blank" rel="noopener">LibreOffice</a>、<a href="https://zh.wikipedia.org/wiki/OpenOffice.org_Writer" target="_blank" rel="noopener">OpenOffice.org Writer</a>、<a href="https://zh.wikipedia.org/wiki/NeoOffice" target="_blank" rel="noopener">NeoOffice</a>等集成，可生成<a href="https://zh.wikipedia.org/w/index.php?title=文内引用&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener">文内引用</a>、生成页面脚注或文后的参考文献（bibliographies）。</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200408002300.png" alt="Zotero"></p><p>Zotero 可以与浏览器集成实现自动抓取文献，如果你有下载权限还会自动下载pdf。</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200408004156.gif" alt></p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200408004255.png" alt="此处pdf 还未下载好"></p><h2 id="Zotero-插件"><a href="#Zotero-插件" class="headerlink" title="Zotero 插件"></a>Zotero 插件</h2><p>zotero 最大的特点是可以使用各种各样的插件来满足你的需要，以下是我使用的一些插件。</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200408002518.png" alt></p><ul><li><a href="http://retorque.re/zotero-better-bibtex/" target="_blank" rel="noopener">Better BibTeX</a> : 将 zotero 的文献导出为bib 文件。</li><li><a href="https://github.com/fei0810/markdownhere4zotero" target="_blank" rel="noopener">Markdown Here</a>: 在 Zotero 中使用 Markdown 做笔记。</li><li><a href="https://github.com/bwiernik/zotero-shortdoi" target="_blank" rel="noopener">Zotero DOI Manager</a> 为参考文献查找、检验doi。</li><li><a href="https://github.com/retorquere/zotero-report-customizer" target="_blank" rel="noopener">Zotero Report Customizer</a> : 才装上，暂时没发现有什么用处</li><li><a href="https://github.com/ethanwillis/zotero-scihub" target="_blank" rel="noopener">Zotero Scihub</a> 为有DOI 信息的文献自动从 Scihub下载pdf</li><li><a href="http://zotfile.com/" target="_blank" rel="noopener">ZotFile</a> : zotero pdf文件管理器。</li></ul><p>zotero 也有 Word 插件，可以在Word 中插入参考文献，但是由于我不怎么使用word, 此处不再介绍。</p><h1 id="公式输入"><a href="#公式输入" class="headerlink" title="公式输入"></a>公式输入</h1><p>如果需要将其他地方的公式输入到自己的 TeX 文件中，自己动手打一遍固然好，但是如果能够直接把别人的公式粘贴过来岂不美哉！ <a href="https://mathpix.com/" target="_blank" rel="noopener">Mathpix</a> 就是这样一个工具，它可以将截图中的公式转换成 $\LaTeX$ 代码。省去手动敲代码的时间。下面是其官网的一个例子。</p><p><img src="https://mathpix.com/images/mathpix-page/snip_new_mac.png" alt></p><h1 id="用-Git-进行版本管理"><a href="#用-Git-进行版本管理" class="headerlink" title="用 Git 进行版本管理"></a>用 Git 进行版本管理</h1><p>由于 $\LaTeX$ 是纯文本文档，因此可以很方便的用git 进行版本管理。配合 git 还可以实现多人协作，批注修改等功能。在此不再赘述，git 教程可见 <a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener">Git Book</a> 。</p><p>但是，由于git 是以行为最小修改单位，而 $\LaTeX$ 的换行需要空一行，因此可以在写 tex文件时，每写一句话就换一行。这样通过git 可以很方便的看到每次修改了哪些地方。</p><p>当你需要给一个不会用git 的人看你相比于某次修改了什么内容时，可以使用 <a href="https://gitlab.com/git-latexdiff/git-latexdiff" target="_blank" rel="noopener">git-latexdiff</a>, 它会产生一个包含修改的 $\LaTeX$ 文档，对其进行编译即可生成修改内容的pdf. 它本质上是对 git 和 <a href="https://github.com/ftilmann/latexdiff/" target="_blank" rel="noopener">latexdiff</a> 的一个包装。</p><p>latexdiff 能够将两个文件进行比较，然后得到一个新的可编译的tex文件，编译之后可以在pdf中查看文章的改动。</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200408010014.png" alt></p><h1 id="LaTeX-转-Word"><a href="#LaTeX-转-Word" class="headerlink" title="$\LaTeX$ 转 Word"></a>$\LaTeX$ 转 Word</h1><p>目前 $\LaTeX$ 转 word 主要有两种比较好的方式，但是都不完美，一种是使用 pandoc 转换，一个简单的教程见<a href="https://www.jianshu.com/p/dc62b915920e" target="_blank" rel="noopener">怎么用Pandoc把Latex转换成MS Word文档</a> 优点是公式、表格都转换的比较好，缺点是参考文献部分会转换失败。也可以使用 Acrobat 将 生成的pdf 转换成 word, 这个各个方面都不错，就是公式转换的不好。两者可以互为补充。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>本文到这里就结束了，如果你也有想要分享的技巧或者插件，可以在下方留言。后面预计会找一位使用Word写论文的大佬分享他的写作和管理参考文献的经验。 </p><p>最后是私货时间，欢迎大家使用<a href="https://github.com/sukanka/LaTeX-SWUFE-Bachelor-Thesis" target="_blank" rel="noopener">西财的 $\LaTeX$ 本科毕业论文模板</a>, 另外，我也想寻找几位同学接手模板的后续维护工作。</p>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> Zotero </tag>
            
            <tag> VSCode </tag>
            
            <tag> 论文写作 </tag>
            
            <tag> 文献管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NFC刷公交、地铁、门禁</title>
      <link href="/2018/11/06/nfc_shua_men_jin/"/>
      <url>/2018/11/06/nfc_shua_men_jin/</url>
      
        <content type="html"><![CDATA[<p>前两天从锦江区坐公交回来,没有零钱,还是跟路人换零钱才回来的。之所以不办天府通是因为我之前掉过好几次公交卡了，不敢再办了，而且公交坐的不多，基本都是地铁，而地铁可以用微信。之后又在网上看到天府通开始支持NFC刷卡了。遂有了开卡的想法。还顺便搞了NFC模拟校园卡刷门禁，从此出宿舍不用带卡！<br><a id="more"></a></p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ol><li><p>一部有NFC功能的Android 手机；</p></li><li><p>电信卡或者移动卡。必须是NFC-sim 卡，不是的可以去营业厅换，有的收钱，有的不收，不超过20块。 </p></li></ol><h1 id="电信用户"><a href="#电信用户" class="headerlink" title="电信用户"></a>电信用户</h1><p>电信用户下载天府通手机app,根据提示注册应该就可以了。（PS:我不是电信用户，所以不太清楚，捂脸）</p><h1 id="移动用户"><a href="#移动用户" class="headerlink" title="移动用户"></a>移动用户</h1><p>移动用户无法使用天府通app,需要使用移动的和包支付，没有注册过和包支付的新用户可以先参加充10元得20的活动</p><ol><li><p>微信搜索公众号  和包， 关注第一个， 中国移动和包<img src="/2018/11/06/nfc_shua_men_jin/5C1541517684715.png" alt="1541517684715"></p></li><li><p>选择“热门活动”， 点击“领10元话费”<img src="/2018/11/06/nfc_shua_men_jin/5C1541517667475.png" alt="1541517667475"></p></li><li><p>输入手机号和验证码领优惠</p><p><img src="/2018/11/06/nfc_shua_men_jin/5C1541517629872.png" alt="1541517629872"></p></li><li><p>下载和包支付，注册和包</p></li><li>绑定银行卡或者信用卡，</li></ol><p><img src="/2018/11/06/nfc_shua_men_jin/5C1541517815595.png" alt="1541517815595"></p><ol><li>点击首页的充话费，金额自定义输入20，如果领取成功的话就是10元充20话费。</li></ol><h2 id="NFC天府通"><a href="#NFC天府通" class="headerlink" title="NFC天府通"></a>NFC天府通</h2><h3 id="Android-7-1及之前"><a href="#Android-7-1及之前" class="headerlink" title="Android 7.1及之前"></a>Android 7.1及之前</h3><p>如果你是Android 7.1及以前的操作系统（4.4~7.1），那么可以直接在<strong>“生活-我的卡券包-NFC卡”</strong>下面查看，app会提示空中开卡，确认就是，之后选择<strong>添加新卡</strong> </p><p><img src="/2018/11/06/nfc_shua_men_jin/5C1541518395813.png" alt="1541518395813"></p><p>选择<strong>公交卡</strong> ，然后选择<strong>成都移动天府通</strong> 直接下载，然后开卡，开卡是不收开卡费的</p><p><img src="/2018/11/06/nfc_shua_men_jin/5C1541518546855.png" alt="1541518546855"></p><p>此后就可以用手机NFC刷公交地铁了，手机关机也可以刷（我还没试过）。</p><h3 id="Android-8-0-及8-1"><a href="#Android-8-0-及8-1" class="headerlink" title="Android 8.0 及8.1"></a>Android 8.0 及8.1</h3><p>最简单的方法，去移动营业厅找一个android 7.1及以前版本的带NFC的手机，插卡，开通天府通，取卡，把卡插回自己手机，修复天府通，一气呵成。</p><p>其实只需要找一个8.0以前的支持NFC的手机就可以了，把卡插上去，按照上面的步骤开卡，再把卡换回去，再在和包里面下载一次公交卡就可以了。</p><p>有的8.0手机还有个问题，比如和包获取不到NFC权限，那么我们需要<strong>手动授权和包</strong> (<strong>需要Root权限</strong>） ，我用的是<strong>OnePlus NFC</strong> (因为我用的op3)<img src="/2018/11/06/nfc_shua_men_jin/5C1541519313057.png" alt="1541519313057"></p><p>授权后发现和包支付的权限多了一个其他权限</p><p><img src="/2018/11/06/nfc_shua_men_jin/5C1541519383919.png" alt="1541519383919"></p><p><img src="/2018/11/06/nfc_shua_men_jin/5C1541519397375.png" alt="1541519397375"></p><p>之后进入和包正常操作就可以了。如果你没有Android8.0 以前的支持NFC的手机，可以看看<a href="https://www.coolapk.com/feed/8535898" target="_blank" rel="noopener">https://www.coolapk.com/feed/8535898</a> 。我根据那个教程没有成功，最后还是换手机搞定的。</p><h1 id="NFC-模拟校园卡刷门禁"><a href="#NFC-模拟校园卡刷门禁" class="headerlink" title="NFC 模拟校园卡刷门禁"></a>NFC 模拟校园卡刷门禁</h1><p><strong>Warning： 不建议使用此功能来薅社会主义羊毛!</strong>  需要ROOT 权限</p><p>使用switch NFC 或者其他软件,读取校园卡,然后卡模拟</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日常生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Jupyterlab 上使用Julia</title>
      <link href="/2018/08/20/about_julia/"/>
      <url>/2018/08/20/about_julia/</url>
      
        <content type="html"><![CDATA[<p>昨天偶然看见了Julia 的一篇介绍,介绍中有一段话使我开始对Julia 感兴趣起来</p><blockquote><p>一群拥有各种语言丰富编程经验的Matlab高级用户，对现有的科学计算编程工具感到不满——这些软件对自己专长的领域表现得非常棒，但在其它领域却非常糟糕。他们想要的是一个开源的软件，它要像C语言一般快速而有拥有如同Ruby的动态性；要具有Lisp般真正的同像性而又有Matlab般熟悉的数学记号；要像Python般通用、像R般在统计分析上得心应手、像Perl般自然地处理字符串、像Matlab般具有强大的线性代数运算能力、像shell般胶水语言的能力，易于学习而又不让真正的黑客感到无聊；还有，它应该是交互式的，同时又是编译型的……<br><a id="more"></a><br>2018-11-10 更新: 增加Julia 安装PyCall而不自动装Miniconda. bilibili 有个讲julia 的<a href="https://www.bilibili.com/video/av28178443/" target="_blank" rel="noopener">视频</a>讲得挺好的,可惜没出第二期. </p></blockquote><p>Julia 的快速、通用、还有强大的线性代数运算能力，以及熟悉的数学符号 吸引了我. （<del>其实我以前只接触过 Matlab, Python, 还有C++, 每个还都只是半吊子</del>）</p><p>因此我马上就去下载了Julia 的安装软件(最新的1.0.0稳定版），安装完毕之后当然是要让我最常用的Jupyter 支持Julia了.于是谷歌之，还发现了Jupyter名字的来源:   Julia, Python, R</p><blockquote><p>While Jupyter’s roots are in Python (it evolved from IPython Notebooks), it is now multi-lingual. The name itself comes from three languages: Ju(lia) + Py(thon) + (e)R.</p></blockquote><p>然后找到了<a href="https://github.com/JuliaLang/IJulia.jl" target="_blank" rel="noopener">IJulia</a>, 根据说明文档来一步步安装Ijulia. 由于我已经安装了Anaconda, 自然是不想再多装一个jupyter.因此我的步骤是:</p><ol><li>打开 anaconda prompt, 输入 <code>where jupyter</code> 查询下我的jupyter 安装在哪了，得到<code>C:\ProgramData\Anaconda3\Scripts\jupyter.exe</code></li><li>复制得到的路径，先粘贴到记事本备用，将<code>\</code>改为<code>\\</code>，得到<code>`C:\\ProgramData\\Anaconda3\\Scripts\\jupyter.exe</code>（<del>我用的是notepad++</del>）</li><li>打开 Julia,输入以下代码</li></ol><pre class="line-numbers language-lang-Julia"><code class="language-lang-Julia">import Pkg #Julia 下的包管理器，类似于python的pipENV["JUPYTER"]="C:\\ProgramData\\Anaconda3\\Scripts\\jupyter" # 刚刚得到的jupyter 路径，注意是\\,注意没有.exe# 如果你将jupyter 加入到了系统路径，那么输入 ENV["JUPYTER"]="jupyter" 也可以Pkg.add("IJulia")Pkg.build("IJulia")using IJulianotebook()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我按照上面的步骤弄好之后，进入到了jupyter 界面，新建一个Julia文档， 然后输入一个简单的计算<code>1+1</code> 结果一直没有反馈。当然，用jupyter lab 也不行，即使是kernel idle 状态也不能。</p><p><img src="/2018/08/20/about_julia/ju.png" alt="jupyter notebook"></p><p>本着不服输的精神，我又开始疯狂搜索相关的提问，终于在Ijulia 的 issue里面找到了解决方案，原链接在<a href="https://github.com/JuliaLang/IJulia.jl/issues/693" target="_blank" rel="noopener">这里</a> </p><p>具体的做法是：</p><pre class="line-numbers language-lang-Julia"><code class="language-lang-Julia">julia> import Pkg(v1.0) pkg> add IJuliajulia> ENV["IJULIA_DEBUG"] = true (v1.0) pkg> dev IJulia (v1.0) pkg> build IJulia<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，在julia 的console 里面按<code>]</code>即可切换到 <code>(v1.0) pkg&gt;</code>,再按backspace 键即可切换回 <code>julia&gt;</code></p><p>最后输入</p><pre class="line-numbers language-lang-Julia"><code class="language-lang-Julia">using IJulianotebook()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>即可， 此后就可以通过powershell 直接输入 <code>jupyter lab</code> 打开jupyterlab 了, 并且可以正常使用julia 的功能。</p><p><img src="/2018/08/20/about_julia/ju2.png" alt="julia in jupyterlab"></p><p>Julia 还可以调用Python, 这可以通过PyCall 库来实现,如果直接</p><pre class="line-numbers language-lang-Julia"><code class="language-lang-Julia">using PkgPkg.add("PyCall")Pkg.build("PyCall")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>会安装一个MiniConda, 但是我已经有Anaconda 了,不需要miniconda</p><p>因此只需要事先指定python的路径就好了,查询python 路径得方法和查询jupyter 得方法是一样的.</p><pre class="line-numbers language-lang-Julia"><code class="language-lang-Julia">ENV["PYTHON"]="C:\\ProgramData\\Anaconda3\\python"using PkgPkg.add("PyCall")Pkg.build("PyCall")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这样就不会安装miniconda了.</p><p>最后，希望我能 <del>学好Julia</del> 坚持学得久一点</p>]]></content>
      
      
      <categories>
          
          <category> Julia </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IJulia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fisher信息量学习笔记</title>
      <link href="/2018/04/20/fisher_and_mle/"/>
      <url>/2018/04/20/fisher_and_mle/</url>
      
        <content type="html"><![CDATA[<p>本文记录了Fisher 信息量的两种等价计算方式.<br><a id="more"></a></p><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>本文积分以$\int$表示$\int_{-\infty}^{+\infty}$ (主要原因是懒,请谅解.)</p><h1 id="Fisher-信息量"><a href="#Fisher-信息量" class="headerlink" title="Fisher 信息量"></a>Fisher 信息量</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>设总体概率密度函数$p(x;\theta),\theta \in \mathbb{\Theta}$满足下列条件:</p><ol><li>参数空间$\Theta$是直线上的一个开区间;</li><li>支撑$S={x|p(x;\theta)}$与$\theta$无关;</li><li>导数$\dfrac{\partial }{\partial \theta}p(x;\theta)$对一切$\theta \in \Theta$都存在;</li><li>对$p(x;\theta)$,积分与微分可以交换顺序,即:</li></ol><script type="math/tex; mode=display">\dfrac{\partial}{\partial \theta}\int p(x;\theta)\,\mathrm{d}x=\int \dfrac{\partial}{\partial \theta}p(x;\theta)\,\mathrm{d}x</script><ol><li>期望$E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]^2$存在.</li></ol><p>则称</p><script type="math/tex; mode=display">I(\theta)=E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]^2</script><p>为总体分布的Fisher 信息量.</p><h2 id="另一种表示法"><a href="#另一种表示法" class="headerlink" title="另一种表示法"></a>另一种表示法</h2><p>Fisher信息量$I(\theta)$也可以表示为</p><script type="math/tex; mode=display">I(\theta)=-E\left[\dfrac{\partial ^2}{\partial \theta ^2}\ln p(x;\theta)\right]</script><p>有时候这种计算方法更加方便</p><p><strong>证明</strong></p><p>首先,有:</p><script type="math/tex; mode=display">\begin{equation}E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]=0\end{equation}</script><p>这是因为:</p><script type="math/tex; mode=display">\begin{aligned}&E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]\\ =&\int \dfrac{\partial \ln p(x;\theta)}{\partial \theta} p(x;\theta)\, \mathrm{d}x \\=&\int \dfrac{1}{p(x;\theta)}\dfrac{\partial p(x;\theta)}{\partial \theta} p(x;\theta)\, \mathrm{d}x\\=&\int \dfrac{\partial p(x;\theta)}{\partial \theta} \, \mathrm{d}x\\=&\dfrac{\partial }{\partial \theta}\int p(x;\theta)\, \mathrm{d}x\\=&0\end{aligned}</script><p>然后,有</p><script type="math/tex; mode=display">\begin{equation}\dfrac{\partial }{\partial \theta}E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]=0\end{equation}</script><p>又因为:</p><script type="math/tex; mode=display">\dfrac{\partial \ln p(x;\theta)}{\partial \theta}=\frac{1}{p(x;\theta)}\frac{\partial p(x;\theta)}{\partial \theta}</script><p>所以</p><script type="math/tex; mode=display">\begin{equation}\frac{\partial p(x;\theta)}{\partial \theta}=p(x;\theta) \dfrac{\partial \ln p(x;\theta)}{\partial \theta}\end{equation}</script><p>故,有:</p><script type="math/tex; mode=display">\begin{aligned}&\dfrac{\partial }{\partial \theta}E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]\\=& \dfrac{\partial }{\partial \theta}\int \dfrac{\partial \ln p(x;\theta)}{\partial \theta} p(x;\theta) \, \mathrm{d}x\\=& \int \dfrac{\partial }{\partial \theta}\left(\dfrac{\partial \ln p(x;\theta)}{\partial \theta} p(x;\theta)\right) \, \mathrm{d}x\\=& \int \left(\dfrac{\partial p(x;\theta) }{\partial \theta}\dfrac{\partial \ln p(x;\theta)}{\partial \theta}+ p(x;\theta)\dfrac{\partial^2 \ln p(x;\theta)}{\partial \theta^2}\right)  \, \mathrm{d}x\\=& \int p(x;\theta) \left(\dfrac{\partial \ln p(x;\theta)}{\partial \theta}\right)^2\, \mathrm{d}x %+ \int p(x;\theta) \dfrac{\partial^2 \ln p(x;\theta)}{\partial \theta^2}\,\mathrm{d}x\\=&E\left[\left(\dfrac{\partial \ln p(x;\theta)}{\partial \theta}\right)^2\right]+E\left[\dfrac{\partial^2 \ln p(x;\theta)}{\partial \theta^2}\right]\\=&0\end{aligned}</script><p>所以</p><script type="math/tex; mode=display">E\left[\left(\dfrac{\partial \ln p(x;\theta)}{\partial \theta}\right)^2\right]=-E\left[\dfrac{\partial^2 \ln p(x;\theta)}{\partial \theta^2}\right]</script><p>即:</p><script type="math/tex; mode=display">I(\theta)=-E\left[\dfrac{\partial^2 \ln p(x;\theta)}{\partial \theta^2}\right]</script>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数理统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一个LINGO程序</title>
      <link href="/2018/04/19/my_first_lingo_program/"/>
      <url>/2018/04/19/my_first_lingo_program/</url>
      
        <content type="html"><![CDATA[<p>背景:班主任下周要开一个一对一见面会,要根据同学们的时间安排先后顺序.<br><a id="more"></a></p><h1 id="收集数据"><a href="#收集数据" class="headerlink" title="收集数据"></a>收集数据</h1><ul><li>首先建一个excel表格,将93个候选时间排成一行,38个同学按学号排成一列,得到一个38$\times$93的矩阵.</li><li>将表格共享,每个同学在自己有空的时间填1,无空的时间填0.</li><li>回收表格.将得到的38$\times$93矩阵在Excel中命名为<code>data</code></li></ul><h1 id="建立模型"><a href="#建立模型" class="headerlink" title="建立模型"></a>建立模型</h1><p>本模型只有约束条件,无目标函数.最终的安排也为一个38$\times$93矩阵</p><ul><li>每个同学只去一次,也必须去一次.</li><li>每个时间最多只有一个同学去.</li><li>每个同学只在自己有空的时间去.</li><li>去或不去是0,1变量,1表示去,0表示不去.</li><li>(目标函数)期望同学们尽早去见面会.</li></ul><h1 id="数学化表达"><a href="#数学化表达" class="headerlink" title="数学化表达"></a>数学化表达</h1><h2 id="符号约定"><a href="#符号约定" class="headerlink" title="符号约定"></a>符号约定</h2><ul><li>$\mathbf{C}=(c_{ij})_{38\times93}$ 表示收集到的数据,其中$c_{ij}\in {0,1}$</li><li>$\mathbf{X}=(x_{ij})_{38\times93}$ 表示最终的安排,其中$x_{ij}\in {0,1}$</li></ul><h2 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h2><ul><li><p>每个人只去一次,也必须去一次:</p><script type="math/tex; mode=display">\sum\_{j=1}^{93}x\_{ij}=1</script></li><li><p>每个时间最多只有一个同学去:</p><script type="math/tex; mode=display">\sum\_{i=1}^{38}x\_{ij}\leqslant 1</script></li><li><p>每个同学只在自己有空的时间去:</p><script type="math/tex; mode=display">x\_{ij}\leqslant c\_{ij}</script></li><li><p>目标函数,尽量早去</p><script type="math/tex; mode=display">\min \sum\_{i,j}x\_{ij}*j</script></li></ul><h2 id="一些说明"><a href="#一些说明" class="headerlink" title="一些说明"></a>一些说明</h2><ul><li>LINGO不区分大小写</li><li>LINGO 不区分&lt;和&lt;=,不区分&gt;和&gt;=,都视为包含等号.</li><li>我事前把矩阵$\mathbf{C}$对应的区域在EXCEL中取名为<code>data</code></li><li>同时将另一个空白的38行,93列的区域命名为<code>data2</code> ,用于导出结果$\mathbf{X}$</li></ul><h2 id="LINGO-代码"><a href="#LINGO-代码" class="headerlink" title="LINGO 代码"></a>LINGO 代码</h2><pre class="line-numbers language-lang-LINGO"><code class="language-lang-LINGO">!模型:见面会安排;sets:time/1..93/;student/1..38/;!Student 为行,time为列;timetable(student,time):c,x;endsetsdata:!导入数据将data的数据传输给C;c=@ole('D:\Users\ASUS\Desktop\data.xlsx','data');!输出结果输出X到data2;@ole('D:\Users\ASUS\Desktop\data.xlsx','data2')=x;enddata!期望尽早安排完;min= @sum(timetable(i,j):j*x(i,j));!只在有空的时间去;@for(timetable(i,j):x(i,j)<= c(i,j));!每个人只去一次;@for(student(i):@sum(time(j):x(i,j))=1);!每个时间最多有一个人;@for(time(j):@sum(student(i):x(i,j))<=1);!去或不去为0,1变量;@for(timetable(i,j):@bin(x(i,j)));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> LINGO学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LINGO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教育优惠</title>
      <link href="/2018/03/07/students_resources/"/>
      <url>/2018/03/07/students_resources/</url>
      
        <content type="html"><![CDATA[<p>当你成为大学生，拿到@edu.cn邮箱或者拿到学生证的时候，你就能享受到许多的教育优惠。当然高校老师也能享受很多优惠。<br><a id="more"></a><br><img src="https://raw.githubusercontent.com/ivmm/Student-resources/master/Student-resources-min.png" alt="cover"></p><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>本文转自 <a href="https://github.com/ivmm/Student-resources" target="_blank" rel="noopener">https://github.com/ivmm/Student-resources</a> 并基于其进行了修改。</p><h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><ul><li>一切官方的助学资金等，请咨询学校领导、辅导员、班主任，请勿向陌生账户转账！</li><li>校园借贷风险极高，请谨慎尝试。</li><li>对需要出示身份证、手持身份证的资源请保持谨慎。</li><li>保管好自己的学生证、身份证，不要随意丢弃。</li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>高考已经过去，你们也将迎来不同于以往的大学生活，大学或许对之前的12年管制式生活来说是解放了，不过你也知道的，解放后面是什么，脱离了父母和老师的管束以及适当的财务自主，你的生活并不会就无比精彩。</p><p>让自己的大学生活过得积极而精彩：</p><ol><li>多参加校级、省级、国家级的比赛，你的比较对象就不会是同班同学了而是同龄人，视野更大。</li><li>多上台讲讲，第一次第二次第三次可能会小心脏砰砰跳，后面真的就见怪不怪了，会自信很多。</li><li>不要再默默无闻了，让老师们注意到你，都大学了上课还不敢举个手？</li><li>做点义工，为社会做点贡献，工作了就真没时间了。</li><li>做人做事记得留个证据，留个发票，留个单子。</li><li>多向长辈们问候问候，偶尔放个长假了就去看看。</li></ol><p>那么就期待着9月开启你的上当受骗之旅吧，不过可能在6月买电脑买手机的时候就已经上当受骗。（逃～）</p><h1 id="学生包"><a href="#学生包" class="headerlink" title="学生包"></a>学生包</h1><p>各类学生优惠项目经过许多年的发展，很多学生包已经不单单只通过 edu 邮箱验证身份了，而且使用 @edu.cn 反而会降低申请成功率。 建议使用学生证、入学通知书等有学院官方标志和日期的工具来证明自己的身份。</p><ul><li><strong><a href="https://education.github.com/pack" target="_blank" rel="noopener">Github 学生包</a></strong>，高质量的开发工具集合，并提供 DIgitalocean 的 50美元代金券，免费域名一枚。</li><li><strong><a href="https://azure.microsoft.com/zh-cn/free/students/" target="_blank" rel="noopener">Microsoft Azure 学生包</a></strong>，免费使用微软的开发软件，包括 Windows Server 系统，以及 Azure 学生订阅。</li><li><strong><a href="https://aws.amazon.com/cn/education/awseducate/" target="_blank" rel="noopener">AWS 学生包</a></strong>，亚马逊云计算的学生包，可以获得至少 $40 的优惠和教育培训。</li><li><strong><a href="http://www.autodesk.com.cn/education/home" target="_blank" rel="noopener">Autodesk 学生包</a></strong>，旗下 AutoCAD , 3DMAX , Maya 等软件，其（教育版）免费试用期可延长至三年。此优惠不需要学生证或者@edu.cn邮箱。</li><li><strong><a href="https://www.jetbrains.com/student/" target="_blank" rel="noopener">JetBrains 学生包</a></strong>，免费使用各类开发工具和集成工具。</li><li><strong><a href="https://edu.google.com/products/productivity-tools/" target="_blank" rel="noopener">G Suite for Education</a></strong>，为教育用户提供的谷歌生产力工具套件（大陆不在申请区之内）。</li><li><strong><a href="http://www.lindo.com/index.php?option=com_content&amp;view=article&amp;id=120&amp;Itemid=45" target="_blank" rel="noopener">LINGO Educational Research License</a></strong>, LINGO 教育授权，著名线性与非线性求解器，求解优化模型的最佳选择，数学建模必备。</li></ul><h1 id="教育优惠"><a href="#教育优惠" class="headerlink" title="教育优惠"></a>教育优惠</h1><ul><li><strong><a href="http://shop.edu.cn/" target="_blank" rel="noopener">赛尔校园先锋</a></strong>，以绝对优惠的价格获得 Adobe 软件、Win、Office 正版授权。</li><li><strong><a href="https://products.office.com/en-us/student?tab=students" target="_blank" rel="noopener">Office in Education</a></strong>，微软家提供的免费 Office 365 教育优惠，中国大多数学校无缘申请。</li><li><strong><a href="https://promotion.aliyun.com/ntms/campus2017.html" target="_blank" rel="noopener">阿里云 云翼计划</a></strong>，118元/年，阿里云ECS+OSS+域名+机器学习API+Clouder认证。</li><li><strong><a href="https://www.qcloud.com/act/campus" target="_blank" rel="noopener">腾讯云+校园计划</a></strong>，10元一个月的云服务器租用，免费域名、云储存，需要抢购。</li><li><strong><a href="https://www.mtyun.com/activity-school" target="_blank" rel="noopener">美团云 云帆校园</a></strong>，8.8元，1C1G1M + 50数据盘。<br><del><ul><li><strong><a href="https://www.jcloud.com/activity/leapCloud" target="_blank" rel="noopener">京东云 跃云计划</a></strong>，8.8元，1C2G1M + 30数据盘，年付送 com 域名。</li></ul></del></li><li><strong><a href="http://www.apple.com/cn-k12/shop" target="_blank" rel="noopener">苹果教育商店</a></strong>，苹果设备优惠，Music和 Pro APP 优惠，暑假还会有学生优惠大促销。</li><li><strong><a href="https://www.microsoftstore.com.cn/student?Icid=StoreNavi_EDU" target="_blank" rel="noopener">微软教育商店</a></strong>，9折购买微软旗下的各种硬件设备。</li><li><strong><a href="http://www.onthehub.com/" target="_blank" rel="noopener">OnTheHub 教育商店</a></strong>，PD 和 VMware 的虚拟机优惠，以及更多软件优惠。</li><li><strong><a href="https://www.siteground.com/student-hosting.htm" target="_blank" rel="noopener">SiteGroud 学生计划</a></strong>，WP 官方推荐的主机托管商提供 $1.99/月 高性能 CP 托管。</li><li><strong><a href="https://www.spotify.com/hk-zh/student/" target="_blank" rel="noopener">Spotify 学生优惠</a></strong>，Spotify Premium学生订阅半价优惠。</li><li><strong><a href="https://pantheon.io/edu" target="_blank" rel="noopener">Pantheon 学生版</a></strong>，专业高性能网站托管的学生优惠。</li><li><strong><a href="http://coupon.dji.com/cn/edu" target="_blank" rel="noopener">大疆教育优惠</a></strong>，大疆产品的教育折扣。</li><li><strong><a href="http://cn.mikecrm.com/BrUWPMy" target="_blank" rel="noopener">幕布笔记教育优惠</a></strong>，幕布面向学生、公益组织和教育机构推出的专属优惠措施，高级版八折优惠。</li><li><strong>[SPSS]，(<a href="https://www.ibm.com/us-en/marketplace/spss-statistics-gradpack/details" target="_blank" rel="noopener">https://www.ibm.com/us-en/marketplace/spss-statistics-gradpack/details</a>)</strong>实用统计软件,最新版premium 99美元一年。</li></ul><h1 id="实用干货"><a href="#实用干货" class="headerlink" title="实用干货"></a>实用干货</h1><ul><li><strong><a href="https://creativemarket.com/free-goods" target="_blank" rel="noopener">CreativeMarket Free Goods</a></strong>，每周免费六款设计资源，电商、前端必备。</li><li><strong><a href="https://www.axure.com/edu" target="_blank" rel="noopener">Axure</a></strong>， 原型设计工具，产品、运营必备，学生、教师免费。</li><li><strong><a href="http://education.minecraft.net/get-started" target="_blank" rel="noopener">Minecraft</a></strong>， 我的世界教育免费版 ，仅支持邮箱。</li><li><strong><a href="http://www.wolfram.com/mathematica/pricing/students-individuals.php" target="_blank" rel="noopener">Mathematica</a></strong>， 现代科学计算软件，3折优惠 50刀，添加购物车后显示。</li><li><strong><a href="https://www.tableau.com/zh-cn/academic" target="_blank" rel="noopener">Tableau</a></strong>， 数据可视化分析软件，对学生、教室以及教育组织提供免费使用。（只能使用学生证申请）</li></ul><h1 id="推荐软件"><a href="#推荐软件" class="headerlink" title="推荐软件"></a>推荐软件</h1><ul><li><strong><a href="https://cloudconvert.com/" target="_blank" rel="noopener">CloudConvert</a></strong>，转码神器，格式齐全的在线转码利器。</li><li><strong><a href="https://smallpdf.com/" target="_blank" rel="noopener">Smallpdf</a></strong>，专业文档转PDF，PDF转文档神器。</li></ul><h1 id="相关推荐"><a href="#相关推荐" class="headerlink" title="相关推荐"></a>相关推荐</h1><p><strong>买电脑：</strong>《<a href="http://www.toutiao.com/i6430265970773721602/" target="_blank" rel="noopener">或许是最详细的学生购买笔记本购买参考</a>》</p><p><strong>如何科学提问：</strong>《<a href="http://git.oschina.net/mifar/How-To-Ask-Questions-The-Smart-Way" target="_blank" rel="noopener">提问的智慧</a>》</p><p><strong>搜索引擎：</strong> 为了你的身体健康、事业有成，请尽量<strong>减少使用百度</strong>的频率。</p><p><strong>PPT 制作：</strong>《<a href="https://www.mf8.biz/ppt-tips/" target="_blank" rel="noopener">放 PPT 之前，请你注意这一些！</a>》<br>作者博客：<a href="https://www.mf8.biz/" target="_blank" rel="noopener">https://www.mf8.biz/</a></p>]]></content>
      
      
      <categories>
          
          <category> 优惠信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学生 </tag>
            
            <tag> 教师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idm注册机</title>
      <link href="/2018/02/28/idm/"/>
      <url>/2018/02/28/idm/</url>
      
        <content type="html"><![CDATA[<p>Internet Download Manager（简称IDM）是一个用于Windows系统的下载管理器.<br><a id="more"></a><br>IDM 是共享软件，免费试用期为30天，但是每月均有一段时间优惠。IDM可以让用户自动下载某些类型的文件，它可将文件划分为多个下载点以更快下载，并列出最近的下载，方便访问文件。相对于其它下载管理器，它具有独特的动态档案分区技术。<br>它的出色之处在于，能分析下载地址中的实际地址，但若地址无效时则跳换成失效网页，当地址重新有效而无法恢复成原来的地址。<br>它的不足之处在于，必须设置分段的临时文件存放的磁盘位置，下载完成后再自动合并成一个完整的文件，同时删除临时文件（这种做法不同于其他下载软件预先分配一整块磁盘空间）。所以，下载的如果是机密文件，就容易被数据恢复软件恢复，造成安全隐患。</p><p>IDM可被调用于Internet Explorer、Safari、Google Chrome、Opera、Netscape Navigator以及Mozilla Firefox（火狐）浏览器中。<br>具体破解方法见落尘之木的<a href="https://www.luochenzhimu.com/archives/1476.html" target="_blank" rel="noopener">博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 下载器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Winrar 去广告</title>
      <link href="/2018/02/28/winrar/"/>
      <url>/2018/02/28/winrar/</url>
      
        <content type="html"><![CDATA[<p>Winrar 注册码<br><a id="more"></a><br>18年7月更新:<br>现在国外官网下载的简体中文版也有广告了,最新版是5.6,现在可以去以下链接下载,注册后无广告.</p><blockquote><p>简体中文64位：<a href="http://www.win-rar.com/fileadmin/winrar-versions/sc20170830/wrr/winrar-x64-550sc.exe" target="_blank" rel="noopener">http://www.win-rar.com/fileadmin/winrar-versions/sc20170830/wrr/winrar-x64-550sc.exe</a><br>简体中文32位：<a href="http://www.win-rar.com/fileadmin/winrar-versions/sc20170830/wrr/wrar550sc.exe" target="_blank" rel="noopener">http://www.win-rar.com/fileadmin/winrar-versions/sc20170830/wrr/wrar550sc.exe</a><br>这连接下的无广告，域名是官网，应该没问题。</p></blockquote><p>作者：第92號元素<br>链接：<a href="https://www.zhihu.com/question/56160762/answer/376992753" target="_blank" rel="noopener">https://www.zhihu.com/question/56160762/answer/376992753</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><p>软件下载请去国外官网下载最新版的 Chinese Simplified (32 bit, 64 bit)。 64位电脑建议选择64位。<br><a href="https://www.rarlab.com/" target="_blank" rel="noopener">国外官网</a><br>不要去下载国内的版本，国内版本即使激活了也会弹出广告。</p><h1 id="软件注册"><a href="#软件注册" class="headerlink" title="软件注册"></a>软件注册</h1><p>复制粘贴下列代码（建议不要使用Windows记事本），保存为 rarreg.key 文件，然后将该文件复制到 <code>C:\Users\你的用户\AppData\Roaming\WinRAR</code>，重启 WinRAR就可以了,以后WinRAR就没有广告了，并且<em>关于</em>里面显示<em>已注册</em>。</p><pre><code>RAR registration dataVIPUnlimited Company LicenseUID=5b717c9f9202afe6fcd06412212250fcd07556c26853de15f5fff458cf288d43270e566986274e45035896bc8be51860fce6cb5ffde62890079861be576387177131ced835ed65cc743d9777f2ea71a8e32c7e593cf66794343565b41bcf56929486b8bcdac33d50ecf7739960f2bf6c894e40fd71e8cda62bbe8ed82dfd9e211e40336def4143660924152fdfc9a485b231f8beb11acb6786bb22573c061826b15b9ccaf04398b3c8606c823c6f2fe22da60740bbd11552e796c007d8f4993e7f651735357995</code></pre><p><img src="/2018/02/28/winrar/rar.png" alt="路径"><br><img src="/2018/02/28/winrar/reg.png" alt="注册"></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注册码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MathType 注册码</title>
      <link href="/2018/02/28/mathtype/"/>
      <url>/2018/02/28/mathtype/</url>
      
        <content type="html"><![CDATA[<p>MathType 注册码<br><a id="more"></a><br>2018年11月10日更新: mathtype7.0及以后按年收费,不再推荐使用mathtype, 推荐国产软件<a href="http://www.amyxun.com/" target="_blank" rel="noopener">axmath</a>免费版本和注册版本,免费版本仅仅是功能限制,注册版一次性付费,价格36元.</p><h2 id="2018年7月17日更新-以下注册码仅适用于6-9及以下版本-不适用于最新的7-0版本"><a href="#2018年7月17日更新-以下注册码仅适用于6-9及以下版本-不适用于最新的7-0版本" class="headerlink" title="2018年7月17日更新:以下注册码仅适用于6.9及以下版本,不适用于最新的7.0版本"></a>2018年7月17日更新:以下注册码仅适用于6.9及以下版本,不适用于最新的7.0版本</h2><h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><p>下载软件建议去国外<a href="http://www.mathtype.com/en/" target="_blank" rel="noopener">官网</a> 选择<code>Free Downloads</code> 下的 <code>MathType 30-day</code>,然后下载、安装，此处下载的是最新的版本，现在应该为6.9d. 不建议去国内网站下载中文版，原因主要有：</p><ul><li>版本落后，国内中文版最新版本为6.9b,其对office 2016的支持不好。</li><li>锁激活，安装完成后只能试用，没办法激活。<br>再补充一个国内汉化的版本，该版本基于6.9d版本仅进行了汉化。同时感谢<strong><a href="https://www.luochenzhimu.com/" target="_blank" rel="noopener">落尘之木</a> </strong>的汉化工作！<br>博客原文见<a href="https://www.luochenzhimu.com/archives/2277.html" target="_blank" rel="noopener">此处</a><h1 id="注册码"><a href="#注册码" class="headerlink" title="注册码"></a>注册码</h1>以下任意一个都可以使用，如果不能，换一个试试。<br>除了注册码之外的信息都可以随便输入。<pre><code>MTWE697-002030-M5SKHMTWE697-002317-ET4R5MTWE697-006448-NDWFGMTWE697-008590-A2A9BMTWE697-001678-F7DIJMTWE697-006773-P7NJLMTWE697-006486-TW9FDMTWE697-003843-DRAPWMTWE697-001498-A8RLWMTWE697-000655-7KVCUMTWE697-007142-XVIX9MTWE697-011712-K6XCVMTWE697-010786-P9S03MTWE697-004319-A7UFLMTWE697-006238-A7MD6MTWE697-002912-7KPQ8MTWE697-010201-A5OFQMTWE697-001811-A6SVRMTWE697-004033-P8UTRMTWE697-003857-PDR95MTWE691-011016-c8xn5MTWE691-011772-stfe9MTWE691-011876-qf14dMTWE691-011704-e3fyrMTWE691-011152-33007</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注册码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mathematica 激活指北</title>
      <link href="/2018/02/10/mma/"/>
      <url>/2018/02/10/mma/</url>
      
        <content type="html"><![CDATA[<p>Wolfram Mathematica （简称：Mathematica）是一款符号计算软件，有时候也被称为计算机代数系统，广泛使用于科学、工程、数学、计算等领域。本文主要介绍如何获取正版和激活盗版 Mathematica.<br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><strong>本文根据<a href="https://tiebamma.github.io/InstallTutorial/" target="_blank" rel="noopener">Mathematica激活指南</a>修改而来</strong>  </p><p>Mathematica 是由英国科学家斯蒂芬·沃尔夫勒姆提出构想，并且由他所领导的沃尔夫勒姆研究公司（位于美国伊利诺伊州香槟市）开发的一款广泛使用的科学计算软件。它拥有强大的数值计算和符号运算能力，是目前为止使用最广泛的数学软件之一。</p><h1 id="获取正版-Mathematica"><a href="#获取正版-Mathematica" class="headerlink" title="获取正版 Mathematica"></a>获取正版 Mathematica</h1><p>用盗版是迫不得已，有能力的还是去支持一下正版吧，需要 VISA 或者 MasterCard 卡。购买链接在<a href="https://www.wolfram.com/mathematica/pricing/" target="_blank" rel="noopener">这里</a> 根据自己所在的行业选择不同的版本。另外 Wolfram 公司为学生和老师提供教育版软件。其中学生版低至3折，售价 $50。<br>虽然点进 Students 栏，显示的是标准版 $155, 但是点击 BUY NOW 之后，你会发现售价已经变成 $50 了。<br><img src="/2018/02/10/mma/mma1.png" alt="mma"><br><img src="/2018/02/10/mma/mma2.png" alt="mma2"><br>此处的 Mathematica 有中文版和英文版和日语版，日英文版有 Windows, Macintosh, Linux 3个版本，中文版仅有 Windows 和 Macintosh 版本。</p><h1 id="激活盗版-Mathematica"><a href="#激活盗版-Mathematica" class="headerlink" title="激活盗版 Mathematica"></a>激活盗版 Mathematica</h1><p>再次呼吁，用盗版只是迫不得已，有能力还是请支持正版！</p><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p>本博客只提供最新版（11.2.0）下载。</p><h3 id="官方下载地址（需要科学上网）"><a href="#官方下载地址（需要科学上网）" class="headerlink" title="官方下载地址（需要科学上网）"></a>官方下载地址（需要科学上网）</h3><p>此处只有仅提供中文版<br>中文 Windows 版地址: <a href="http://dl.wolframcdn.com/0036F4/Mathematica/11.2.0.0/Mathematica_11.2.0_Chinese_WIN.zip?4ae6ee529e4e0d5967853f9864b23dfec2504d5a385cf83e11359956ad95cb469f36b126eb76be9628d7f9c232f442a8b647e3794cceabc0473bcae71c7451a0f9d3cfc9886343cab97a766a6062b954a849dd790839034e6defe3fcc31a116cde8ef402f6728196ec9d4cecaced8a.zip" target="_blank" rel="noopener">Mathematica</a><br>md5: 282fe2e587c7e48414cc8cdd79e8647d<br>中文 Mac 版地址: <a href="http://dl.wolframcdn.com/0036F4/Mathematica/11.2.0.0/Mathematica_11.2.0_Chinese_MAC.dmg?4ae6ee529e4e0d5967853f9864b23dfec2504d5a385cf83e11359956ad95cb441d92b9d94ba4820c0596a0eb6f43ddb278f28fea3385dbfb6d71d8084246ba8c6225f15588f8b3744cadb1e9c290f7146e3fe993981d7e2c41d63781f4f6fb18d2763ab3759c603487db69d60c2af0.dmg" target="_blank" rel="noopener">Mathematica</a><br>md5: b55381e5eb58a81bcf8f5e5ddf991b69<br><img src="/2018/02/10/mma/mmacn.png" alt="mmacn"><br><img src="/2018/02/10/mma/mmamac.png" alt="mmamac"></p><h3 id="百度网盘"><a href="#百度网盘" class="headerlink" title="百度网盘"></a>百度网盘</h3><p>英文 Mac, Linux, Win 版：<a href="https://pan.baidu.com/s/1eUfG6em" target="_blank" rel="noopener">百度网盘</a><br>中文 Windows, Mac 版: <a href="https://pan.baidu.com/s/1o9DFSim" target="_blank" rel="noopener">百度网盘</a><br><strong>注意，英文版也是可以调出中文提示的，但是它没有中文帮助，只有带了中文帮助的才叫中文版！）</strong>中文版来源是官网，不信可以对比MD5,我核对过，是一致的。</p><h2 id="软件注册"><a href="#软件注册" class="headerlink" title="软件注册"></a>软件注册</h2><h3 id="下载安装软件和注册机"><a href="#下载安装软件和注册机" class="headerlink" title="下载安装软件和注册机"></a>下载安装软件和注册机</h3><p>注册机可能会报毒，但是我用 Windows Defender 扫过，并没有报毒，可放心下载。<br><a href="https://pan.baidu.com/s/1o9g5T94" target="_blank" rel="noopener">11.2注册机</a><br>安装 Mathematica 软件，安装完成会弹出激活对话窗口：<br><img src="/2018/02/10/mma/mma3.png" alt="mma3"><br>这里要选择下方的<strong>其他方式激活</strong>，然后选择<strong>手动激活</strong><br><img src="/2018/02/10/mma/mma4.png" alt="mma4"><br>然后记下出现的<strong> Math ID</strong><br><img src="/2018/02/10/mma/mma5.png" alt="mma5"><br><strong>注意，是把你电脑上那串数复制下来，不是上图里的数!</strong><br>此时不要关闭弹出的激活界面，打开注册机（注册机的扩展名是.exe，别去点那个again.nfo！），将MathID复制进注册机第一个输入框中，然后回车，或者点击注册机下方 Save mathpass得到Activation Key和Password。如图：<br><img src="/2018/02/10/mma/key.png" alt="key"><br>注意：图中所示的是老版注册机的界面，它的Activation Key的格式是4位数字-4位数字-5位字母或者里面有::1。使用新版注册机算出来的Activation Key是4-4-6的形式。这里强烈不推荐使用新版注册机注册版本9和版本10，因为已经证实在许多计算机上，新版注册机无法完全注册版本9和版本10。老注册机在注册版本9时可能要多点步骤，下详。<br>还有，以上截图是版本8、9注册机的截图，版本10及以后的专属注册机只有那个黑乎乎的命令行界面，但使用方法和这个注册机没什么不同，不要大惊小怪！</p><h2 id="填写-Activation-和-Password"><a href="#填写-Activation-和-Password" class="headerlink" title="填写 Activation 和 Password"></a>填写 Activation 和 Password</h2><p>算出Activation Key和Password后，复制粘贴，填入Mathematica激活界面对应输入框即可。（注意：如果你使用了老版注册机或者版本10英文版的新注册机，那么，不要忘了把Password中的“ ::1 ”也给一起复制了！那也是密码的一部分·！）（如果你要手抄的话，注意这两个冒号都是英文冒号！）<br>注册完毕，享受盗版吧！最后再呼吁一句，有能力还是请尽量支持正版！</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看自己的 edu 邮箱</title>
      <link href="/2018/02/08/edu_email/"/>
      <url>/2018/02/08/edu_email/</url>
      
        <content type="html"><![CDATA[<p>国内绝大部分高校都为学生和教职工配备了 edu 邮箱，但是很多学生不知道、不会用自己的 edu 邮箱，如果你也是这样。那么你应该好好的看一下这篇博客。<br><a id="more"></a></p><h1 id="四川大学部分"><a href="#四川大学部分" class="headerlink" title="四川大学部分"></a>四川大学部分</h1><p>川大作为川内的老牌高校，自然是有 edu 邮箱的。下面是川大官方说明的一部分，全部内容的 word 文档在<a href="http://imc.scu.edu.cn/nic/lib/xsyjyhxz.doc" target="_blank" rel="noopener">这里</a> ：</p><blockquote><p>我校所有全日制在校学生邮箱账号在新生入学时，由信息管理中心根据学号统一建立，不需要学生持证件到现场办理。学生邮箱账号为学号，邮箱后缀为@stu.scu.edu.cn，登录邮箱后可以自己设置别名。</p></blockquote><p>知道了自己的 edu 邮箱后可在学校官网右上角登录。<br><img src="/2018/02/08/edu_email/scu.png" alt="scu"></p><h1 id="西南财经大学部分"><a href="#西南财经大学部分" class="headerlink" title="西南财经大学部分"></a>西南财经大学部分</h1><p>西南财大作为知名财经类高校，也有 edu 邮箱。西财学生可以直接在学校官网左下角点击<strong>学生邮箱</strong>使用统一身份认证登录。<br><img src="/2018/02/08/edu_email/swufe.png" alt="swufe"></p><h1 id="四川农业大学部分"><a href="#四川农业大学部分" class="headerlink" title="四川农业大学部分"></a>四川农业大学部分</h1><p>川农虽然是名字带有农业，其实确是一所综合性大学，同时也是 ”211 工程”大学，也有 edu 邮箱(强势回击以前某同学说川农没有 edu 邮箱😜)<br><img src="/2018/02/08/edu_email/sicau.png" alt="sicau"><br>在右下角选择<strong> 学生</strong> 然后输入学生账号就可以了，<strong>邮箱可能需要先激活</strong>。</p><h1 id="其他学校"><a href="#其他学校" class="headerlink" title="其他学校"></a>其他学校</h1><p>我不可能把所有学校的情况一一说明。一般情况下，只要贵校的老师有 edu 邮箱，那么学生也有。具体可以看贵校官网有没有邮箱登录和贵校的信息技术中心。</p>]]></content>
      
      
      <categories>
          
          <category> 学生邮箱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> edu 邮箱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教育邮箱获取正版 LINGO</title>
      <link href="/2018/02/08/lingo/"/>
      <url>/2018/02/08/lingo/</url>
      
        <content type="html"><![CDATA[<p>LINGO 是一款由美国 Lindo System 公司推出的”交互式的线性和通用优化求解器”，可以用来求解线性和非线性规划，也可以用于一些线性和非线性方程组的求解，功能十分强大，是数学建模必不可少的软件之一。<br><a id="more"></a><br>18年7月更新: 许可证一个账号只能申请一次</p><p>我在6月份的时候更换了固态硬盘,原本的许可证失效了,然后想重新申请一个许可证.但是今天接到lindo公司中国专员的店话,告知<strong>一个账号只能申请一次</strong>.<br>之后还收到一条短信,原文如下:</p><blockquote><p>XXX同学，请记下我的联系方式，因为总部系统已经默认您申请过，以后都会直接转给我处理。所以，与其您绕弯不如直接找我，而且关于lingo软件试用的政策，有可能还会改变，以后试用的时间和机会会越来短，但是一个账号只能申请一次是肯定的了，所以如果以后学校有采购计划，可以直接联系我。另外，可能下半年开始，我们会分析申请试用的数据，如果一个学校多人申请，但是总是不够买，这种情况有可能以后影响再次申请，即使您的账户从未申请过。祝使用愉快，我任何问题请随时联系我，薛钰，xueyu@lindochina.com</p></blockquote><hr><h1 id="为什么不推荐使用破解版"><a href="#为什么不推荐使用破解版" class="headerlink" title="为什么不推荐使用破解版"></a>为什么不推荐使用破解版</h1><p>由于全国大学生数学建模竞赛和美国大学生数学建模竞赛， LINGO 在国内高校的知名度并不算低。但是国内学生甚至教师，很多都在用过时的破解版或者绿化版 LINGO。比如 LINGO 11, 12, 当然也有 17.但是：</p><ol><li>破解版软件可能带有病毒；</li><li>老版本软件可能功能受损；<br>例如目前流行比较广泛的 LINGO 11 在运算速度和运算结果上都存在误差。<h1 id="获取正版-LINGO"><a href="#获取正版-LINGO" class="headerlink" title="获取正版 LINGO"></a>获取正版 LINGO</h1>其实 Lindo 公司免费为学校老师和学生提供教育版 LINGO 软件，官方说明可以看<a href="https://www.lindo.com/index.php?option=com_content&amp;view=article&amp;id=120&amp;Itemid=45" target="_blank" rel="noopener">这里</a><blockquote><p>We can supply <strong>six-month renewable educational research licenses</strong> for the unrestricted capacity version of LINGO with all options to qualifying <strong>students and professors free</strong> of charge. To request an educational research license, start by downloading and installing LINGO 17.</p></blockquote></li></ol><p>简单来说就是 Lindo 公司可以为学生和教师免费提供有效期半年、可重复申请的教育版 LINGO 许可证，而且这个版本没有任何限制。<br>下面我们来说说如何申请教育版许可证。<strong>需要 EDU 邮箱！！</strong> 如果你还不知道自己的 edu 邮箱账号，可以看<strong><a href="http://sukanka.xyz/2018/02/08/edu-email/" target="_blank" rel="noopener">查看自己的 edu 邮箱</a><br>首先去 LINGO 官网，下载自己想下载的版本,点击<a href="https://www.lindo.com/index.php/ls-downloads/try-lingo" target="_blank" rel="noopener">这里</a> 跳转.推荐下载最新版，64位电脑推荐64 bit.</strong>  </p><h1 id="填写邮箱"><a href="#填写邮箱" class="headerlink" title="填写邮箱"></a>填写邮箱</h1><p><img src="/2018/02/08/lingo/l1.jpg" alt="email"><br>选择了适合自己电脑版本的 LINGO 之后点击下载，会看到这样一个界面，大家按照规格用<strong>英文</strong>填写自己的基本信息。（First Name 是名， Last Name  是姓。）邮箱用学校分配的邮箱，一定要是带 <strong>edu</strong> 的邮箱。<br>然后选择提交。提交之后，有一个下载链接，下载后解压安装。</p><h1 id="生成-userinfo文件"><a href="#生成-userinfo文件" class="headerlink" title="生成 userinfo文件"></a>生成 userinfo文件</h1><p>打开安装好的 LINGO 软件，先选择使用 Demo 版本，然后会提示是否生成 userinfo 文件，点击生成之后就可以在 LINGO 安装的文件夹下找到，<br>如果打开后没有提示可以通过 <strong>File —&gt; Lisense</strong>手动打开该界面。 下图是一个流程：<br><img src="/2018/02/08/lingo/Demo.png" alt="demo"><br><img src="/2018/02/08/lingo/cr.png" alt="create"><br><img src="/2018/02/08/lingo/userinfo.png" alt="userinfo"></p><h1 id="获取许可证"><a href="#获取许可证" class="headerlink" title="获取许可证"></a>获取许可证</h1><p>通过自己学校分配的邮箱给 sales@lindo.com 发邮件，把 userinfo.txt 文件作为附件一起发送过去，标题一定要写，内容随便写点什么，但是最好不要留空，免得让人以为是垃圾邮件。<br><img src="/2018/02/08/lingo/mail.png" alt="mail"><br>然后发送即可。</p><h1 id="激活正版-LINGO"><a href="#激活正版-LINGO" class="headerlink" title="激活正版 LINGO"></a>激活正版 LINGO</h1><p>发送之后就是漫长的等待，一般是72小时答复，我等了3,4天的样子，第一封发了之后，过来两天又发了一封，最后可算是收到回信了，内容如下：</p><blockquote><p>Dear Sir/Madam,</p><p>Thank you for your request. Below is a temporary educational research license key for LINGO 17.0. It is authorized for use exclusively for educational research and instruction on the machine from which you sent the user information.</p><p>From the LINGO menu select File|License to display the LINGO password dialog box. Cut the license key below and paste it in the window of the dialog box and click OK.</p><p>If at the end of the evaluation period you need to extend the period simply send the user information file (userinfo.txt) and we will issue a new license key.</p><p>Please contact me if you have any questions or I can be of service.</p><p>Kind Regards,</p><p>Jane Rees</p><hr><p>Jane Rees</p><p>Lindo Systems Inc.</p><p>1415 N Dayton Street</p><p>Chicago, IL 60642 USA</p><p>312-988-7422 Tel | 312-988-9065 Fax</p><p>jrees@lindo.com</p><p>www.lindo.com</p><hr><p>LINGO Extended 17.00</p><p>Max Users: 1</p><p>Node Locked: Yes</p><p>Expiration Date: 07/21/2018</p><p>Enabled Solvers:  Linear  Nonlinear  Global  Barrier  Mip  Stochastic  Conic </p><p>Usage: Educational </p><p>Machine Class: Win64 AMD/EMT</p><p>Serial#: 此处隐私，手动替换之</p><p>Dongle Required: No</p><p>License key:</p><pre><code>Ma%i-b*j9-*9f#-79Sk-WtuK-ZVVb-Who2-c8kY-9a7A-5p$%-*SrZ-XbES-iqeE-9reW-*b@K-9Tvm-6gfY-$jHB-gi6u-x9fg-6yy2-&amp;oQZ-PNan-T565-&amp;VgJ-K4Sk-FaUy-Zt8y-TG9&amp;-4A6P-t@b&amp;-*XuR-eoTs-C8ak-&amp;pBv-CYMo-ieJP-JZ8z-eDK8-kxdd-Esif-R6YT-iqHe-GEyr-ipUy-EJWi-fHjc-Why*-xFdf-@Ay5-d@Wr-gUcf-%na3-F?Pz-bQ89-uxF6-@Syj-7%jN-BsbF-yTRn-j89F-PBhd-Ju@L-D9ue-93cv-zV4P-qvuP-s&amp;Wi-kAGW-NLKS-3fkQ-iUUL-T5zR-ieeV-KV69-amxw-5RJj-BD6N-7CL%-aMsk-YpyR-nVzG-FPka-b5&amp;E-vQg9-GMS</code></pre><p>这是我收到的回复邮件，涉及隐私的地方已经手动处理了，另外，注意，获得的许可证有效期6个月，到期后可再次申请，许可证绑定机器，最多一人使用，因此，上述许可证大家可以不用尝试了,我修改了某个地方，所以它是无效的。另外我自己也试过，在其他机器上确实无法激活。</p><h1 id="激活-LINGO"><a href="#激活-LINGO" class="headerlink" title="激活 LINGO"></a>激活 LINGO</h1><p>获得了许可证之后，我们激动地打开 LINGO ，通过 <strong>File —&gt; Lisense</strong> 找到之前的界面，输入许可证，然后选择<strong>OK</strong>即可激活<br><img src="/2018/02/08/lingo/lic.png" alt="license"><br><img src="/2018/02/08/lingo/edu.png" alt="ok"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux 折腾记之安装 Hexo</title>
      <link href="/2018/01/30/termux/"/>
      <url>/2018/01/30/termux/</url>
      
        <content type="html"><![CDATA[<p>我在 Windows 上成功部署了 Hexo, 并把本地文件也推送到了 GitHub ，突然想到通过 Termux, 在手机上也可以写博客。本文是我在手机上部署 Hexo 遇到的问题及解决办法。<br><a id="more"></a></p><h1 id="安装-Termux"><a href="#安装-Termux" class="headerlink" title="安装 Termux"></a>安装 Termux</h1><h2 id="何为-Termux"><a href="#何为-Termux" class="headerlink" title="何为 Termux"></a>何为 Termux</h2><p>Termux 是一款开源且不需要 root，运行在 Android 终端的极其强大的 Linux 模拟器，支持 apt 和 pkg 管理软件包，完美支持 python,ruby,go,nodejs,git 等软件。</p><blockquote><p>Termux is an Android terminal emulator and Linux environment app that works directly with no rooting or setup required. A minimal base system is installed automatically - additional packages are available using the APT package manager.</p></blockquote><p><a href="https://github.com/termux" target="_blank" rel="noopener">开源地址</a>            <a href="https://termux.com/" target="_blank" rel="noopener">Termux 官网</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Termux 官方推荐使用 Google Play 和 F-Driod 两个下载地址, 我选择了 Google Play 的<a href="https://play.google.com/store/apps/details?id=com.termux" target="_blank" rel="noopener">下载地址</a>(Google 大法好hhh),同时提供 F-Driod 的<a href="https://f-droid.org/packages/com.termux/" target="_blank" rel="noopener">下载地址</a>.<br>下载完成之后正常安装打开，会进行初始化，下载一些必要组件。如果初始化不成功，请自行百度解决办法，本文暂不赘述(其实是我没有遇到过😉).安装成功之后我们会看到这样的界面：</p><p><img src="/2018/01/30/termux/01.jpg" alt="init"></p><p>现在 Termux 就已经安装好了</p><h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><h2 id="安装-ohmyzsh-主题"><a href="#安装-ohmyzsh-主题" class="headerlink" title="安装 ohmyzsh 主题"></a>安装 ohmyzsh 主题</h2><p>我们输入 <code>apt update &amp;&amp; apt upgrade</code> 来更新下软件列表。速度慢请自行魔法上网或者更换清华的软件源(不推荐).但是我们发现它好像有点单调啊，而且什么提示都没有，比如我们连目前在那个文件夹下都不知道！不高兴☹。于是我们打算安装 ohmyzsh 主题来美化一下。<br>首先输入 <code>apt install curl</code> 安装组件 <code>curl</code> ,然后输入<br><code>sh -c &quot;$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&quot;</code><br>安装 <code>ohmyzsh</code>安装完成之后就会让我们选择彩色样式和字体颜色，彩色样式我选择的是 <code>33) tango.colors</code>,于是输入 <code>33</code>。字体颜色我选择的是 <code>12] Ubuntu Mono derivative Powerline.ttf</code> ,于是输入 <code>12</code>。然后重启一下 Termux 我们就能看到变化了，嗯，多了一个蓝色的箭头了，还不错。可以开始干正事了。</p><h2 id="Node-js-安装-Hexo"><a href="#Node-js-安装-Hexo" class="headerlink" title="Node.js 安装 Hexo"></a>Node.js 安装 Hexo</h2><p>Node.js 是 Hexo 必不可少的依赖包。我们输入 <code>apt install nodejs</code> 来安装它，然后输入 <code>npm install hexo-cli -g</code> 来安装 Hexo. 如果安装成功了，你就可以看下一节了，可惜，由于 Android 8.0(Oreo)的缘故，我安装出错了。（吐血）错误信息显示如下:  </p><pre><code>npm ERR! Cannot read property &#39;length&#39; of undefinednpm ERR! A complete log of this run can be found in:npm ERR!     /data/data/com.termux/files/home/.npm/_logs/2018-01-30T14_19_17_572Z-debug.log</code></pre><p>发现日志被写入到了 <em>/data/data/com.termux/files/home/.npm/_logs/2018-01-30T14_19_17_572Z-debug.log</em> 文件（不同手机可能显示不一样，以实际显示的为准）</p><h3 id="解决错误"><a href="#解决错误" class="headerlink" title="解决错误"></a>解决错误</h3><p><strong>注意：以下操作需要 root 权限！</strong><br>我们进入到上述文件夹，打开log文件</p><pre><code>0 info it worked if it ends with ok1 verbose cli [ &#39;/data/data/com.termux/files/usr/bin/node&#39;,1 verbose cli   &#39;/data/data/com.termux/files/usr/bin/npm&#39;,1 verbose cli   &#39;install&#39;,1 verbose cli   &#39;hexo-cli&#39;,1 verbose cli   &#39;-g&#39; ]2 info using npm@5.6.03 info using node@v8.9.44 verbose npm-session feefd70188bcf1ec5 verbose stack TypeError: Cannot read property &#39;length&#39; of undefined5 verbose stack     at Object.&lt;anonymous&gt; (/data/data/com.termux/files/usr/lib/node_modules/npm/node_modules/worker-farm/lib/farm.js:5:61)5 verbose stack     at Module._compile (module.js:643:30)5 verbose stack     at Object.Module._extensions..js (module.js:654:10)5 verbose stack     at Module.load (module.js:556:32)5 verbose stack     at tryModuleLoad (module.js:499:12)5 verbose stack     at Function.Module._load (module.js:491:3)5 verbose stack     at Module.require (module.js:587:17)5 verbose stack     at require (internal/module.js:11:18)5 verbose stack     at Object.&lt;anonymous&gt; (/data/data/com.termux/files/usr/lib/node_modules/npm/node_modules/worker-farm/lib/index.js:3:14)5 verbose stack     at Module._compile (module.js:643:30)5 verbose stack     at Object.Module._extensions..js (module.js:654:10)5 verbose stack     at Module.load (module.js:556:32)5 verbose stack     at tryModuleLoad (module.js:499:12)5 verbose stack     at Function.Module._load (module.js:491:3)5 verbose stack     at Module.require (module.js:587:17)5 verbose stack     at require (internal/module.js:11:18)6 verbose cwd /data/data/com.termux/files/home7 verbose Linux 3.18.66-blu_spark-OOS-OREO8 verbose argv &quot;/data/data/com.termux/files/usr/bin/node&quot; &quot;/data/data/com.termux/files/usr/bin/npm&quot; &quot;install&quot; &quot;hexo-cli&quot; &quot;-g&quot;9 verbose node v8.9.410 verbose npm  v5.6.011 error Cannot read property &#39;length&#39; of undefined12 verbose exit [ 1, true ]</code></pre><p>看到第一个出错的地方是位于<em>/data/data/com.termux/files/usr/lib/node_modules/npm/node_modules/worker-farm/lib</em> 的<em>farm.js</em> 文件。同时也知道了错误类型。我经过一番搜索后，发现了错误的原因是 nodejs中有一个函数 os.cpus() 返回值为 undefined 导致出现错误。<br>进一步研究后找到了解决办法：打开<em>/data/data/com.termux/files/usr/lib/node_modules/npm/node_modules/worker-farm/lib</em>文件夹 ，把farm.js文件的</p><pre><code>use strict&#39;const DEFAULT_OPTIONS = {maxCallsPerWorker : Infinity, maxConcurrentWorkers : require(&#39;os&#39;).cpus().length</code></pre><p>改成</p><pre><code>use strict&#39;const DEFAULT_OPTIONS = {maxCallsPerWorker : Infinity, maxConcurrentWorkers : (require(&#39;os&#39;).cpus()||{ length:1}).length</code></pre><p>原理是让<em>maxConcurrentWokers</em>不会返回无效值，而是会返回1,注意<strong>括号</strong>。<br>返回 Termux 输入 <code>npm install -g hexo-cli</code><br>你就会发现 Hexo-cli 已经正常安装了。</p><p><strong>注意，我们添加的内容是<code>||{ length:1}</code> (其实还有括号),最后就只能使用一个核心，你也可以把<em>1</em> 改成其他值，但是不要超过 CPU 核心的数量。</strong></p><h2 id="安装-Hexo-的组件"><a href="#安装-Hexo-的组件" class="headerlink" title="安装 Hexo 的组件"></a>安装 Hexo 的组件</h2><p>安装 Hexo 之后，我们开始安装一些杂七杂八的组件之所以说”杂七杂八“，是因为有的我也不知道他们有什么用。代码如下:  </p><pre><code>    npm install hexo --save            #安装 Hexo, 不知道和 Hexo-cli 有什么区别    apt install git            #安装 git    npm install hexo-deployer-git --save            #部署到 GitHub 的组件</code></pre><p>安装完 Hexo 之后就是连接到 GitHub 部署线上博客了，首先需要注册一个 GitHub 账号，可以点击<a href="https://github.com/" target="_blank" rel="noopener">这里</a> 进行注册。注册完毕之后，我们打开 Termux, 输入 user.name 和 user.email信息：</p><pre><code>git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot;</code></pre><p>然后生成 SSH 文件密钥:</p><pre><code>ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</code></pre><p>默认不需要密码，直接三个回车。<br>如果出现</p><pre><code>The program &#39;ssh-keygen&#39; is not installed. Install it by executing: pkg install openssh</code></pre><p>则说明我们没有安装 openssh, 输入 <code>pkg install openssh</code> 来进行安装，安装好了再次输入 <code>ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</code>之后看到这样一段文字:</p><pre><code>Generating public/private rsa key pair.Enter file in which to save the key (/data/data/com.termux/files/home/.ssh/id_rsa):</code></pre><p>进入 <code>/data/data/com.termux/files/home/.ssh</code> 文件夹(需要 root)，下面有三个文件,其中 <code>id_rsa.pub</code>是公钥文件，我们以文本方式打开它，复制内容（不用复制最后的邮箱）。然后进入 GitHub 点击自己的头像，选择 Settings, 再选择 SSH and GPG keys. 点击 new SSH key. 其中 Title 栏随便输（不要留空），Key 栏把刚刚复制的内容粘贴进去，然后点击 Add SSH key 保存。<br><img src="/2018/01/30/termux/set.jpg" alt="set"><br>暂时更新到这里。以后有时间再更新。</p>]]></content>
      
      
      <categories>
          
          <category> Andriod </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Termux </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决PC百度云限速</title>
      <link href="/2018/01/29/crack_baiduyun/"/>
      <url>/2018/01/29/crack_baiduyun/</url>
      
        <content type="html"><![CDATA[<p>百度网盘很早就开始限速了，虽然有百度云转外链的方法，但是，如果下载时间过长，可能会还没下完外链就失效了。本文提供了一个解决百度云PC5.7.1及以前版本客户端限速的办法。</p><a id="more"></a><p><strong>2018.11.10 更新:</strong> 方法已无法使用,推荐使用<a href="https://pandownload.com/" target="_blank" rel="noopener">pandownload</a>或者其他工具<br><strong>2018.3.4更新：</strong>好像没用了，虽然显示剩余时间还很长，但是下载速度很慢，和未加速一样。</p><h1 id="安装百度云"><a href="#安装百度云" class="headerlink" title="安装百度云"></a>安装百度云</h1><p>此方法仅对百度网盘<strong>5.7.1及以前的版本有效</strong>，对最新的5.7.2无效！如果您已经安装了之后版本的百度云，请先卸载。查看百度云的版本方式如下：</p><p><img src="/2018/01/29/crack_baiduyun/查看版本.png" alt="check_version"></p><p>首先，我们要找到一个5.7.1版本的百度云网盘，按照我的想法，我是<em>尽量去官网下载软件</em>，第三方下载的可能被修改过。百度云的官方网站只提供最新版本5.7.2，不提供历史版本下载。但是我还是找到了<strong>官方的下载链接</strong>：点击<a href="http://issuecdn.baidupcs.com/issue/netdisk/yunguanjia/BaiduNetdisk_5.7.1.exe" target="_blank" rel="noopener">这里</a>进行下载。注：本文对<strong>百度云</strong>和<strong>百度网盘</strong>不加区分。</p><p>正常下载之后进行安装，把安装的文件夹记下来。</p><p><img src="/2018/01/29/crack_baiduyun/安装.png" alt="安装文件夹"></p><p>安装完成之后，我们进入百度网盘安装的文件夹，<strong>删除掉AutoUpdate文件夹</strong>(我的是<em>D:\Programs\BaiduNetdisk</em>).之后打开百度云网盘，登陆账号，并<strong>关闭自动升级</strong>。</p><p><img src="/2018/01/29/crack_baiduyun/取消升级.png" alt="关闭升级"></p><p>注：<strong>删除AutoUpdate文件夹步骤不可省略，否则即使关闭了自动升级，百度云还是会自动升级。</strong></p><p>到这里百度云我们就设置好了。</p><h1 id="安装Cheat-Engine"><a href="#安装Cheat-Engine" class="headerlink" title="安装Cheat Engine"></a>安装Cheat Engine</h1><p>Cheat Engine 是一个修改本地内存数据来达到作弊的效果的软件。我们可以用它来把百度云本来只有300秒的加速时间修改成很长的时间，从而一直使用加速。可以点击<strong><a href="http://www.cheatengine.org/" target="_blank" rel="noopener">这里</a></strong>去官网下载安装.</p><h1 id="无限试用加速"><a href="#无限试用加速" class="headerlink" title="无限试用加速"></a>无限试用加速</h1><p>安装完成后，先打开百度云，下载你要下载的文件，等到出现<em>免费试用</em>的提示的时候，(要下载一个超过200MB的文件才会出现试用加速)<br>打开Cheat Engine, 点击那个颜色渐变的一闪一闪的按钮</p><p><img src="/2018/01/29/crack_baiduyun/ch1.png" alt="button"></p><p>选择<strong>百度云</strong>，并点击<strong>OPEN</strong></p><p><img src="/2018/01/29/crack_baiduyun/ch2.png" alt="click"></p><p>应该会看见这样一个界面(290是我输入的)</p><p><img src="/2018/01/29/crack_baiduyun/ch3.png" alt="screen"></p><p>然后在我输入的那个地方输入290（其实可以是0-300之间的任意整数），然后切到百度云，点击<strong>免费试用</strong>并迅速切换到Cheat Engine，看到剩余时间还有290秒的时候，点下Cheat Engine上的<strong>First Scan</strong>,<br><img src="/2018/01/29/crack_baiduyun/ch4.png" alt="first"></p><p>再把290改成<strong>280</strong>，等到试用时间还剩280秒的时候点击<strong>Next Scan</strong> ，(由于要写博客，我改的是250）</p><p><img src="/2018/01/29/crack_baiduyun/ch5.png" alt="sec"></p><p>应该就能确定唯一一个值，并且它每秒钟减少1，我们先双击一下左边找出来的那条数据，在下面会添加一条记录出来.然后我们点击一下<strong>Active下面的方框</strong>，发现数值已经不再减少了。（其实到这里就可以了）</p><p><img src="/2018/01/29/crack_baiduyun/ch6.png" alt="stop"></p><p>​但是我们仍然不放心，于是我们双击Value下面的那个数值，把它改成一个很大的数值，比如999999999（建议不要超过10位）。</p><p><img src="/2018/01/29/crack_baiduyun/ch7.png" alt="改数值"></p><p>​最后我们发现百度云的超级会员加速试用也变成999999999了。(实际可能会相差1，原因不明）</p><p><img src="/2018/01/29/crack_baiduyun/ch8.png" alt="result"></p><p>百度云会员加速<strong>一天可以试用两次</strong>，如果你第一次失败了，可以关掉取消下载，并关掉百度云和Cheat Engine 再试一次。</p><p>​我们的教程到这里就结束了。本博客暂未开通评论功能，如有任何问题，可以给我发邮件。</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度云 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
