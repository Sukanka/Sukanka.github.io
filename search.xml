<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>高级微观总结：从支出函数到效用函数</title>
      <link href="2021/01/07/adv_micro/"/>
      <url>2021/01/07/adv_micro/</url>
      
        <content type="html"><![CDATA[<p>这学期在学高级微观经济学，学了如何由效用函数出发得到支出函数，但一直不会反过来计算。直到期末考试复习的时候看到了如何由成本函数推导生产函数。</p><h1 id="从成本函数到生产函数">从成本函数到生产函数</h1><p>假设有生产函数 <span class="math inline">\(f(\mathbf{x}),\mathbf{x}\in \mathbb{R}^n_+\)</span>,要素价格是 <span class="math inline">\(\mathbf{w}\in \mathbb{R}^n_+, \mathbb{w}\gg 0\)</span>, 要求成本函数 <span class="math inline">\(C(\mathbf{w}, y)\)</span>, 是如下求解 <span class="math display">\[\max C(\mathbf{w}, y)=\mathbf{w}&#39; \mathbf{x}\\s.t. \quad f(\mathbf{x}) \geq y\]</span> 反过来，假设我们已经有成本函数 <span class="math inline">\(C(\mathbf{w}, y)\)</span> 了，要求生产函数 <span class="math inline">\(f(\mathbf{x})\)</span>, 按如下步骤进行： <span class="math display">\[f(\mathbf{x}) \equiv \max \{q \geq 0 \mid \mathbf{w} \cdot \mathbf{x} \geq c(\mathbf{w}, q), \forall \mathbf{w} \gg 0\}\]</span></p><ol type="1"><li><p>计算生产可行性集合 PPS, <span class="math display">\[\mathbf{Y}_{\mathbf{w}, \mathbf{x}} \equiv\{q: c(\mathbf{w}, q) \leq \mathbf{w} \cdot \mathbf{x}\}\]</span></p></li><li><p>计算所有生产可能性集合的交集（关于价格 <span class="math inline">\(\mathrm{w}\)</span> 取交集）</p></li></ol><p><span class="math display">\[\mathbf{Y}_{\mathbf{x}} \equiv \bigcap_{\mathbf{w}} \mathbf{Y}_{\mathbf{w}, \mathbf{x}}\]</span></p><ol start="3" type="1"><li>找到其中最大的元素 <span class="math display">\[f(\mathbf{x})=q=\max \mathbf{Y}_{\mathbf{x}}\]</span></li></ol><p>这样我们就从成本函数推导出了生产函数。</p><h1 id="从支出函数到效用函数">从支出函数到效用函数</h1><p>从效用函数到支出函数很容易，从支出函数 <span class="math inline">\(e(\mathbf{p},u)\)</span> 到效用函数 <span class="math inline">\(u(\mathbf{x})\)</span> 的过程就和上述过程差不多，具体如下 <span class="math display">\[u({\bf x})\equiv \max \{v\geq 0| {\bf p}&#39;{\bf x} \geq  e(\mathbf{p},v)\}\]</span></p><ol type="1"><li>计算可行的集合</li></ol><p><span class="math display">\[{\bf U_{p,x}}=\{v|{\bf p &#39;x} \geq  e(\mathbf{p},v) \}\]</span></p><ol start="2" type="1"><li><p>计算所有可能性集合的交集 （关于价格 <span class="math inline">\(\mathbf{p}\)</span> 取交集） <span class="math display">\[{\bf U_x}=\bigcap_{\mathbf{p}} {\bf U_{p,x}}\]</span></p></li><li><p>找到其中最大的元素 <span class="math display">\[u(\mathbf{x})=\max {\bf U_x}\]</span></p></li><li></li></ol><h2 id="例子">例子</h2><p>例子来源于 JR 5.16, 题目如下： <span class="math display">\[e(\mathbf{p}, u)=\left\{\begin{array}{ll}\frac{1}{3}\left(p_{1}+p_{2}\right) u &amp; \text { for } p_{2} / 2&lt;p_{1}&lt;2 p_{2} \\u p_{2} &amp; \text { for } p_{1} \geq 2 p_{2} \\u p_{1} &amp; \text { for } p_{1} \leq p_{2} / 2\end{array}\right.\]</span> 这里的支出函数是分段的，就很不好看出效用函数。我们按照上面的方法，再进行分类讨论。</p><ol type="1"><li>$ p_{2} / 2&lt;p_{1}&lt;2 p_{2}$ 时，我们有 <span class="math display">\[   e(\mathbf{p}, u)=\frac{1}{3}(p_1+p_2)u \leq p_1x_1+p_2x_2.   \]</span> 也就是 <span class="math display">\[   u\leq \frac{3(p_1x_1+p_2x_2)}{p_1+p_2}   \]</span> 令 <span class="math inline">\(t=p_1/p_2\)</span>, 则 <span class="math inline">\(\frac12 \leq t \leq 2\)</span>, 从而 <span class="math display">\[   u\leq \frac{3(tx_1+x_2)}{t+1}=3x_1+\frac{3(x_2-x_1)}{t+1}, \quad \forall t \in [0.5,2]   \]</span></li></ol><ul><li>当 <span class="math inline">\(x_2-x_1&gt;0\)</span> 时，有</li></ul><p><span class="math display">\[   u \leq 3x_1+x_2-x_1=2x_1+x_2   \]</span></p><ul><li>当 <span class="math inline">\(x_2-x_1&lt;0\)</span>时，有 <span class="math display">\[u\leq 3x_1+2(x_2-x_1)=x_1+2x_2\]</span> 综合上述两种情况，有 <span class="math display">\[u\leq x_1+x_2+\min\{x_1,x_2\}\]</span></li></ul><ol start="2" type="1"><li><p>当 <span class="math inline">\(p_1&gt;2p_2\)</span> 时， 有 <span class="math display">\[up_2 \leq p_1x_1+p_2x_2\]</span> 也就是 <span class="math display">\[u \leq \frac{p_1}{p_2}x_1+x_2,\quad  \forall \frac{p_1}{p_2}&gt;2\]</span> 从而，对<span class="math inline">\(\mathbf{p}\)</span>取交集下确界之后有 <span class="math display">\[u \leq 2x_1+x_2\]</span></p></li><li><p>当 <span class="math inline">\(p_1&lt;p_2/2\)</span> 时，有 <span class="math display">\[up_1\leq p_1x_1+p_2x_2\]</span> 从而 <span class="math display">\[u \leq x_1+\frac{p_2}{p_1}x_2,\quad  \forall \frac{p_1}{p_2}&lt;\frac12.\]</span> 因此， <span class="math display">\[u\leq x_1+2x_2\]</span></p></li></ol><p>综合1，2与3， 有 <span class="math display">\[u \leq x_1+x_2+\min\{x_1, x_2\}.\]</span> 再取最大值，有 <span class="math display">\[u(\mathbf{x})=x_1+x_2+\min\{x_1, x_2\}=\max\{x_1,x_2\}+2\min\{x_1,x_2\}\]</span> 聪明的你，是否学会了呢？</p>]]></content>
      
      
      <categories>
          
          <category> 经济学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高级微观经济学 </tag>
            
            <tag> 效用函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fix-kdeconnect</title>
      <link href="2020/10/23/fix_kdeconnect/"/>
      <url>2020/10/23/fix_kdeconnect/</url>
      
        <content type="html"><![CDATA[<p>本文记录了使用 <code>cgproxy</code> 配合 <code>qv2ray</code> 进行透明代理时导致的 <code>kdeconnect</code> 无法传输文件的问题的解决方案。</p><h1 id="系统信息">系统信息</h1><pre class="line-numbers language-none"><code class="language-none">OS: Arch Linux x86_64 Host: TUF Gaming FA506IV_FA506IV 1.0 Kernel: 5.9.1-arch1-1 Uptime: 3 hours, 51 mins Packages: 1372 (pacman) Shell: zsh 5.8 Resolution: 1920x1080 DE: Plasma WM: KWin WM Theme: Breeze Theme: Breeze [Plasma], Breeze [GTK2&#x2F;3] Icons: [Plasma], breeze [GTK2&#x2F;3] Terminal: yakuake CPU: AMD Ryzen 7 4800H with Radeon Graphics (16) @ 2.900GHz GPU: AMD ATI 06:00.0 Renoir <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>qv2ray 版本： 2.6.3:5841 cgproxy 版本：cgproxy-git v0.19.r3.gaaa628a-1</p><h1 id="具体描述">具体描述</h1><p>使用手机的 kdeconnect 传文件给电脑时，进度一直是0，传输速度大概在 10B/s 左右。剪贴板，媒体控制正常。</p><figure><img src="/2020/10/23/fix_kdeconnect/kdeconnect.png" alt="image"><figcaption aria-hidden="true">image</figcaption></figure><p>关闭 <code>cgproxy.service</code> 后 <code>kdeconnect</code> 传输文件正常。尝试过将</p><p><code>kdeconnect-app kdeconnect-cli kdeconnect-handler kdeconnect-indicator kdeconnect-settings kdeconnect-sms kdecp5</code></p><p>全部加入到 <code>program_noproxy</code> 里面，重启 <code>cgproxy</code>, 仍然无法传输文件。</p><p>也尝试过将上图的 <code>kdeconnectd</code> 加入到<code>program_noproxy</code>里面， 仍然无效， 也尝试过以 <code>cgnoproxy kdeconnect</code> 运行，发现仍然无效。</p><p>在提交 issue 的前一刻，我想到了路径的问题， 所以尝试了 <code>/usr/lib/kdeconnectd</code>， 结果成功了。</p><p>顺便，我把 aria2 也添加到不走代理了，免得跑完流量</p><h1 id="配置文件">配置文件</h1><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"comment"</span><span class="token operator">:</span><span class="token string">"For usage, see https://github.com/springzfx/cgproxy"</span><span class="token punctuation">,</span>    <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">12345</span><span class="token punctuation">,</span>    <span class="token property">"program_noproxy"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"v2ray"</span><span class="token punctuation">,</span> <span class="token string">"qv2ray"</span><span class="token punctuation">,</span> <span class="token string">"clash"</span>，<span class="token string">"/usr/lib/kdeconnectd"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"program_proxy"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"cgroup_noproxy"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"/system.slice/v2ray.service"</span><span class="token punctuation">,</span><span class="token string">"/system.slice/system-clash.slice/clash@sukanka.service"</span><span class="token punctuation">,</span><span class="token string">"/system.slice/aria2c.service"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"cgroup_proxy"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"/"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"enable_gateway"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"enable_dns"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"enable_udp"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"enable_tcp"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"enable_ipv4"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"enable_ipv6"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"table"</span><span class="token operator">:</span> <span class="token number">10007</span><span class="token punctuation">,</span>    <span class="token property">"fwmark"</span><span class="token operator">:</span> <span class="token number">39283</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> kdeconnect </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华硕天选使用 qemu 安装 Windows 10</title>
      <link href="2020/08/04/qemu_kvm/"/>
      <url>2020/08/04/qemu_kvm/</url>
      
        <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>我想要在 archlinux 上装一个 windows 虚拟机，并且希望虚拟机性能比较好。以前尝试过 vmware， 但是感觉图形性能不行。因此考虑了qemu。本文主要涉及以下几点：</p><ol type="1"><li>cpu: host-passthrough</li><li>gpu: 透传</li><li>virtio</li></ol><h2 id="机器配置">机器配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">➜  ~ neofetch --offsukanka@asustx -------------- OS: Arch Linux x86_64 Host: TUF Gaming FA506IV_FA506IV <span class="token number">1.0</span> Kernel: <span class="token number">5.7</span>.12-arch1-1 Uptime: <span class="token number">7</span> hours, <span class="token number">2</span> mins Packages: <span class="token number">1323</span> <span class="token punctuation">(</span>pacman<span class="token punctuation">)</span> Shell: <span class="token function">zsh</span> <span class="token number">5.8</span> Resolution: 1920x1080 DE: Plasma WM: KWin WM Theme: 微风 Theme: Breeze <span class="token punctuation">[</span>Plasma<span class="token punctuation">]</span>, Breeze <span class="token punctuation">[</span>GTK2/3<span class="token punctuation">]</span> Icons: breeze <span class="token punctuation">[</span>Plasma<span class="token punctuation">]</span>, breeze <span class="token punctuation">[</span>GTK2/3<span class="token punctuation">]</span> Terminal: konsole CPU: AMD Ryzen <span class="token number">7</span> 4800H with Radeon Graphics <span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> @ <span class="token number">2</span>.900GHz GPU: NVIDIA 01:00.0 NVIDIA Corporation Device 1f15 GPU: AMD ATI 06:00.0 Renoir Memory: 11425MiB / 63735MiB <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="准备工作">准备工作</h1><h2 id="启用虚拟化">启用虚拟化</h2><ol type="1"><li><p>首先在 BIOS 里面开启虚拟化支持，这个中文资料很多，也不难，这里不叙述了。</p></li><li><p>启用 Linux 系统的虚拟化参数</p></li><li><p>安装 qemu 及图形界面</p></li></ol><pre class="line-numbers language-none"><code class="language-none">yay -S qemu virt-manager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="参考资料">参考资料</h1><ol type="1"><li>[PCI pass-through via OVMF](<a href="https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF_(简体中文)">https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></li><li>[ArchWiki qemu](<a href="https://wiki.archlinux.org/index.php/QEMU_(简体中文)">https://wiki.archlinux.org/index.php/QEMU_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></li><li>https://git.deck.sh/shark/g14gpu/-/blob/master/win10.xml</li></ol>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AMD </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> KVM </tag>
            
            <tag> 显卡直通 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为 localhost 启用 https</title>
      <link href="2020/08/03/localhost_https/"/>
      <url>2020/08/03/localhost_https/</url>
      
        <content type="html"><![CDATA[<h1 id="引言">引言</h1><p>我一直使用 <a href="http://ariang.mayswind.net/latest/#!/settings/ariang">AriaNG</a> 作为 aria2 的图形界面，同时使用 <a href="http://yacd.haishan.me/">yacd</a> 作为 clash 的控制面板，但是这两个网站最近我都打不开了。因此想在我自己的服务器上部署这两个面板。但是我的服务器使用了 https, 不支持 http. 因而会无法连接到本地的 aria2 和clash. 后来查到可以使用 <code>mkcert</code> 为<code>localhost</code> 颁发证书从而启用本地 https。</p><h1 id="具体步骤">具体步骤</h1><ol type="1"><li>安装 <code>mkcert</code>： <code>sudo pacman -S mkcert</code></li><li>生成证书：<code>mkcert localhost</code></li><li>安装证书。在浏览器里面导入生成的证书。可以参见 <a href="https://jingyan.baidu.com/article/ce43664919d1383773afd39f.html">浏览器导入数字证书：[2]Chrome</a>.</li></ol><h1 id="结语">结语</h1><p>现在就可以使用 https 的 <a href="https://clash.razord.top/#/settings">clash-dashboard</a> 和 ariang 了.</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clash </tag>
            
            <tag> AriaNg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 系统安装 TeXLive 之后的事</title>
      <link href="2020/05/17/texlive_postinstallation/"/>
      <url>2020/05/17/texlive_postinstallation/</url>
      
        <content type="html"><![CDATA[<p>在回到学校隔离之后觉得十分无聊，又翻了翻刘海洋老师的 《LaTeX 入门》。发现我的 TeXLive 安装得并不完整，至少字体没有被系统用上。本文大部分内容摘自《LaTeX 入门》第8页至第9页。</p><p><strong>Windows 系统没有必要看本文！ </strong> 因为安装时应该已经配置好了。</p><h1 id="为-xetex-配置字体">为 XeTeX 配置字体</h1><p>为 XeTeX 配置字体目的是让操作系统的 fontconfig 库能够找到 TeXLive 附带的大量字体。下面是具体步骤：</p><ol type="1"><li><p>将 <code>TEXMFSYSVAR/fonts/conf/texlive-fontconfig.conf</code> 链接到 <code>/etc/fonts/conf.d/09-texlive.conf</code>。 其中 <code>TEXMFSYSVAR</code> 是一个变量，在安装时指定，我使用的是 TeXLive 2020, 安装于 <code>/opt/texlive</code>.我使用的命令为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ln</span> -s /opt/texlive/2020/texmf-var/fonts/conf/texlive-fontconfig.conf  /etc/fonts/conf.d/09-texlive.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>刷新字体缓存。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> fc-cache -fsv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h1 id="让-xetex-能按字体文件名找到系统字体">让 XeTeX 能按字体文件名找到系统字体</h1><p>有时候字体的名称和字体名并不相同，字体的名称并不容易看到。但是可以通过修改 TeXLive 安装目录下的 <code>texmf.cnf</code>, 在里面修改 <code>OSFONTDIR</code> 的值， 如</p><pre class="line-numbers language-none"><code class="language-none">OSFONTDIR &#x3D; &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TeXLive </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Oracle免费VPS 搭建Aria2+Caddy+Filebrowser 文件下载器</title>
      <link href="2020/05/07/ariaandcaddy/"/>
      <url>2020/05/07/ariaandcaddy/</url>
      
        <content type="html"><![CDATA[<p>本文介绍利用甲骨文的免费VPS 搭建 Aria2+Caddy+filebrowser 的下载平台。给自己留一个备份。等到<a href="https://github.com/helloxz/ccaa">ccaa2.0</a>版本支持caddy 也许本文就没有必要了。</p><h1 id="获取免费服务器">获取免费服务器</h1><p>甲骨文(Oracle) 公司提供免费服务器，需要外币卡（信用卡储蓄卡均可），如 Visa, MasterCard, JCB, AE 等，单标银联卡不行。具体见 <a href="https://51.ruyo.net/14138.html">申请Oracle Cloud永久免费服务+300美元试用额度</a>.</p><h1 id="绑定域名">绑定域名</h1><p>以下我们假定域名为 <strong>example.com</strong>, 用于 ariaNg面板的域名为 <strong>aria.example.com</strong>, 用于 filebrowser 的域名为 <strong>file.example.com</strong>. 假设服务器ip地址为 <strong>132.145.123.159</strong>。</p><p>首先在域名提供商处将域名解析到对应的ip 地址 （A记录）。</p><h1 id="搭建下载平台">搭建下载平台</h1><p>在获取到免费服务器后，用 ssh 登录上去，准备安装 Aria2 等。</p><p>这部分根据 https://github.com/helloxz/ccaa 改编。</p><p>由于2.0版本去除了caddy, 本文使用的是1.0版本的脚本。</p><p>注意：FileBrowser 2.1.0 版本有 Bug, 无法编辑文件，建议使用 2.0.16版本。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment">#####   一键安装Caddy + Aria2 + AriaNg      #####</span><span class="token comment">#####   作者：xiaoz.me                     #####</span><span class="token comment">#####   更新时间：2019-05-15             #####</span><span class="token comment">#导入环境变量</span><span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/bin:/sbin<span class="token builtin class-name">export</span> <span class="token environment constant">PATH</span><span class="token assign-left variable">aria_ver</span><span class="token operator">=</span><span class="token number">1.35</span>.0<span class="token assign-left variable">caddy_ver</span><span class="token operator">=</span><span class="token number">2.0</span>.0<span class="token assign-left variable">ariang_ver</span><span class="token operator">=</span><span class="token number">1.1</span>.6<span class="token comment">#安装之前的准备</span><span class="token keyword">function</span> <span class="token function-name function">setout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> -e <span class="token string">"/usr/bin/yum"</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        yum -y <span class="token function">install</span> <span class="token function">curl</span> gcc gcc+ <span class="token function">make</span> <span class="token function">bzip2</span>    <span class="token keyword">else</span>        <span class="token comment">#更新软件，否则可能make命令无法安装</span>        <span class="token function">sudo</span> <span class="token function">apt-get</span> update        <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> -y <span class="token function">curl</span> <span class="token function">make</span>    <span class="token keyword">fi</span><span class="token punctuation">&#125;</span><span class="token comment">#安装Aria2</span><span class="token keyword">function</span> <span class="token function-name function">install_aria2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">#yum -y update</span>    <span class="token comment">#安装aria2静态编译版本，来源于https://github.com/q3aql/aria2-static-builds/</span>    <span class="token function">wget</span> -c https://github.com/q3aql/aria2-static-builds/releases/download/v<span class="token variable">$&#123;aria_ver&#125;</span>/aria2-<span class="token variable">$&#123;aria_ver&#125;</span>-linux-gnu-64bit-build1.tar.bz2    <span class="token function">tar</span> jxvf aria2-<span class="token variable">$&#123;aria_ver&#125;</span>-linux-gnu-64bit-build1.tar.bz2    <span class="token builtin class-name">cd</span> aria2-<span class="token variable">$&#123;aria_ver&#125;</span>-linux-gnu-64bit-build1    <span class="token function">make</span> <span class="token function">install</span>    <span class="token builtin class-name">cd</span> <span class="token punctuation">..</span><span class="token punctuation">&#125;</span><span class="token comment">#安装caddy</span><span class="token keyword">function</span> <span class="token function-name function">install_caddy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">#一键安装https://caddyserver.com/download/linux/amd64?plugins=http.filemanager&amp;license=personal&amp;telemetry=off</span>    <span class="token comment">#curl https://getcaddy.com | bash -s personal http.filemanager</span>    <span class="token comment">#安装caddy</span>    <span class="token function">wget</span> https://github.com/caddyserver/caddy/releases/download/v<span class="token variable">$&#123;caddy_ver&#125;</span>/caddy_<span class="token variable">$&#123;caddy_ver&#125;</span>_linux_amd64.tar.gz -O caddy.tar.gz    <span class="token function">tar</span> -zxvf caddy.tar.gz    <span class="token function">mv</span> caddy /usr/sbin/    <span class="token function">chmod</span> +x /usr/sbin/caddy    <span class="token comment">#添加服务</span>    <span class="token comment">#mv init/linux-systemd/caddy.service /lib/systemd/system</span>    <span class="token comment">#chmod +x /lib/systemd/system/caddy.service</span>    <span class="token comment">#开机启动</span>    <span class="token comment">#systemctl enable caddy.service</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-name function">install_file_browser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">#下载File Browser</span>    <span class="token function">wget</span> https://github.com/filebrowser/filebrowser/releases/download/v2.0.16/linux-amd64-filebrowser.tar.gz    <span class="token comment">#解压</span>    <span class="token function">tar</span> -zxvf linux-amd64-filebrowser.tar.gz    <span class="token comment">#移动位置</span>    <span class="token function">mv</span> filebrowser /usr/sbin    <span class="token builtin class-name">cd</span><span class="token punctuation">&#125;</span><span class="token comment">#处理配置文件</span><span class="token keyword">function</span> <span class="token function-name function">dealconf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">#创建目录和文件</span>    <span class="token function">mkdir</span> -p /etc/ccaa/    <span class="token function">touch</span> /etc/ccaa/aria2.session    <span class="token function">touch</span> /etc/ccaa/aria2.log    <span class="token function">touch</span> /etc/ccaa/caddy.log    <span class="token function">cp</span> aria2.conf /etc/ccaa/    <span class="token function">cp</span> caddy.conf /etc/ccaa/    <span class="token function">cp</span> upbt.sh /etc/ccaa/    <span class="token function">chmod</span> +x /etc/ccaa/upbt.sh    <span class="token function">chmod</span> +x ccaa    <span class="token function">cp</span> ccaa /usr/sbin<span class="token punctuation">&#125;</span><span class="token comment">#自动放行端口</span><span class="token keyword">function</span> <span class="token function-name function">chk_firewall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> -e <span class="token string">"/etc/sysconfig/iptables"</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        iptables -I INPUT -p tcp --dport <span class="token number">6080</span> -j ACCEPT        iptables -I INPUT -p tcp --dport <span class="token number">6800</span> -j ACCEPT        iptables -I INPUT -p tcp --dport <span class="token number">6998</span> -j ACCEPT        iptables -I INPUT -p tcp --dport <span class="token number">51413</span> -j ACCEPT        <span class="token function">service</span> iptables save        <span class="token function">service</span> iptables restart    <span class="token keyword">elif</span> <span class="token punctuation">[</span> -e <span class="token string">"/etc/firewalld/zones/public.xml"</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">6080</span>/tcp --permanent        firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">6800</span>/tcp --permanent        firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">6998</span>/tcp --permanent        firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">51413</span>/tcp --permanent        firewall-cmd --reload    <span class="token keyword">elif</span> <span class="token punctuation">[</span> -e <span class="token string">"/etc/ufw/before.rules"</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        <span class="token function">sudo</span> ufw allow <span class="token number">6080</span>/tcp        <span class="token function">sudo</span> ufw allow <span class="token number">6800</span>/tcp        <span class="token function">sudo</span> ufw allow <span class="token number">6998</span>/tcp        <span class="token function">sudo</span> ufw allow <span class="token number">51413</span>/tcp    <span class="token keyword">fi</span><span class="token punctuation">&#125;</span><span class="token comment">#删除端口</span><span class="token keyword">function</span> <span class="token function-name function">del_post</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> -e <span class="token string">"/etc/sysconfig/iptables"</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        <span class="token function">sed</span> -i <span class="token string">'/^.*6080.*/'</span>d /etc/sysconfig/iptables        <span class="token function">sed</span> -i <span class="token string">'/^.*6800.*/'</span>d /etc/sysconfig/iptables        <span class="token function">sed</span> -i <span class="token string">'/^.*6998.*/'</span>d /etc/sysconfig/iptables        <span class="token function">sed</span> -i <span class="token string">'/^.*51413.*/'</span>d /etc/sysconfig/iptables        <span class="token function">service</span> iptables save        <span class="token function">service</span> iptables restart    <span class="token keyword">elif</span> <span class="token punctuation">[</span> -e <span class="token string">"/etc/firewalld/zones/public.xml"</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        firewall-cmd --zone<span class="token operator">=</span>public --remove-port<span class="token operator">=</span><span class="token number">6080</span>/tcp --permanent        firewall-cmd --zone<span class="token operator">=</span>public --remove-port<span class="token operator">=</span><span class="token number">6800</span>/tcp --permanent        firewall-cmd --zone<span class="token operator">=</span>public --remove-port<span class="token operator">=</span><span class="token number">6998</span>/tcp --permanent        firewall-cmd --zone<span class="token operator">=</span>public --remove-port<span class="token operator">=</span><span class="token number">51413</span>/tcp --permanent        firewall-cmd --reload    <span class="token keyword">elif</span> <span class="token punctuation">[</span> -e <span class="token string">"/etc/ufw/before.rules"</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        <span class="token function">sudo</span> ufw delete <span class="token number">6080</span>/tcp        <span class="token function">sudo</span> ufw delete <span class="token number">6800</span>/tcp        <span class="token function">sudo</span> ufw delete <span class="token number">6998</span>/tcp        <span class="token function">sudo</span> ufw delete <span class="token number">51413</span>/tcp    <span class="token keyword">fi</span><span class="token punctuation">&#125;</span><span class="token comment">#设置账号密码</span><span class="token keyword">function</span> <span class="token function-name function">setting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token builtin class-name">echo</span> <span class="token string">'-------------------------------------------------------------'</span>    <span class="token builtin class-name">read</span> -p <span class="token string">"设置下载路径（请填写绝对地址，默认/data/ccaaDown）:"</span> downpath    <span class="token builtin class-name">read</span> -p <span class="token string">"Aria2 RPC 密钥:(字母或数字组合，不要含有特殊字符):"</span> secret    <span class="token comment">#如果Aria2密钥为空</span>    <span class="token keyword">while</span> <span class="token punctuation">[</span> -z <span class="token string">"<span class="token variable">$&#123;secret&#125;</span>"</span> <span class="token punctuation">]</span>    <span class="token keyword">do</span>        <span class="token builtin class-name">read</span> -p <span class="token string">"Aria2 RPC 密钥:(字母或数字组合，不要含有特殊字符):"</span> secret    <span class="token keyword">done</span>    <span class="token comment">#   read -p "设置Caddy用户名:" caddyuser</span><span class="token comment">#   while [ -z "$&#123;caddyuser&#125;" ]</span><span class="token comment">#   do</span><span class="token comment">#       read -p "设置Caddy用户名:" caddyuser</span><span class="token comment">#   done</span><span class="token comment">#   </span><span class="token comment">#   read -p "设置Caddy密码:" caddypass</span><span class="token comment">#   while [ -z "$&#123;caddypass&#125;" ]</span><span class="token comment">#   do</span><span class="token comment">#       read -p "设置Caddy密码:" caddypass</span><span class="token comment">#   done</span>    <span class="token builtin class-name">read</span> -p <span class="token string">"Filebrowser 域名地址：(filebrowser.example.com):"</span> filebrowser_domain    <span class="token keyword">while</span> <span class="token punctuation">[</span> -z <span class="token string">"<span class="token variable">$&#123;filebrowser_domain&#125;</span>"</span> <span class="token punctuation">]</span>    <span class="token keyword">do</span>         <span class="token builtin class-name">read</span> -p <span class="token string">"Filebrowser 域名地址：(filebrowser.example.com):"</span> filebrowser_domain    <span class="token keyword">done</span>        <span class="token builtin class-name">read</span> -p <span class="token string">"AriaNg 面板域名地址：(aria.example.com):"</span> ariang_domain    <span class="token keyword">while</span> <span class="token punctuation">[</span> -z <span class="token string">"<span class="token variable">$&#123;ariang_domain&#125;</span>"</span> <span class="token punctuation">]</span>    <span class="token keyword">do</span>        <span class="token builtin class-name">read</span> -p <span class="token string">"AriaNg 面板域名地址：(aria.example.com):"</span> ariang_domain    <span class="token keyword">done</span>        <span class="token comment">#如果下载路径为空，设置默认下载路径</span>    <span class="token keyword">if</span> <span class="token punctuation">[</span> -z <span class="token string">"<span class="token variable">$&#123;downpath&#125;</span>"</span> <span class="token punctuation">]</span>    <span class="token keyword">then</span>        <span class="token assign-left variable">downpath</span><span class="token operator">=</span><span class="token string">'/data/ccaaDown'</span>    <span class="token keyword">fi</span>    <span class="token comment">#执行替换操作</span>    <span class="token function">mkdir</span> -p <span class="token variable">$&#123;downpath&#125;</span>    <span class="token function">sed</span> -i <span class="token string">"s%dir=%dir=<span class="token variable">$&#123;downpath&#125;</span>%g"</span> /etc/ccaa/aria2.conf    <span class="token function">sed</span> -i <span class="token string">"s/rpc-secret=/rpc-secret=<span class="token variable">$&#123;secret&#125;</span>/g"</span> /etc/ccaa/aria2.conf<span class="token comment">#   sed -i "s/username/$&#123;caddyuser&#125;/g" /etc/ccaa/caddy.conf</span><span class="token comment">#   sed -i "s/password/$&#123;caddypass&#125;/g" /etc/ccaa/caddy.conf</span><span class="token comment">#   sed -i "s%/home%$&#123;downpath&#125;%g" /etc/ccaa/caddy.conf</span><span class="token comment">#   sed -i "s%/admin%/admin $&#123;downpath&#125;%g" /etc/ccaa/caddy.conf</span>    <span class="token comment">#更新tracker</span>    <span class="token function">bash</span> ./upbt.sh    <span class="token comment">#安装AriaNg</span>    <span class="token function">wget</span> -O AriaNg.zip https://github.com/mayswind/AriaNg/releases/download/<span class="token variable">$&#123;ariang_ver&#125;</span>/AriaNg-<span class="token variable">$&#123;ariang_ver&#125;</span>.zip    <span class="token function">unzip</span> AriaNg.zip    <span class="token function">sed</span> -i <span class="token string">'s|&lt;/ul>&lt;/section>&lt;/aside>|&lt;li>&lt;a class="toolbar" title="文件管理" href="https://_filebrowser.example.com" target="_blank">&lt;i class="fa fa-folder-o">&lt;/i> 文件管理&lt;/a>&lt;/li>&amp;|'</span> AriaNg/index.html    <span class="token function">sed</span> -i <span class="token string">"s/_filebrowser.example.com/<span class="token variable">$&#123;filebrowser_domain&#125;</span>/g"</span>  AriaNg/index.html    <span class="token function">cp</span> -a AriaNg /etc/ccaa    <span class="token comment">#启动服务</span>    <span class="token function">nohup</span> aria2c --conf-path<span class="token operator">=</span>/etc/ccaa/aria2.conf <span class="token operator">></span> /etc/ccaa/aria2.log <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>    <span class="token function">nohup</span> caddy -conf<span class="token operator">=</span><span class="token string">"/etc/ccaa/caddy.conf"</span> <span class="token operator">></span> /etc/ccaa/caddy.log <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>    <span class="token comment">#获取ip</span>    <span class="token assign-left variable">osip</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -4s https://api.ip.sb/ip<span class="token variable">)</span></span>    <span class="token builtin class-name">echo</span> <span class="token string">'-------------------------------------------------------------'</span>    <span class="token builtin class-name">echo</span> <span class="token string">"大功告成，请访问: http://<span class="token variable">$&#123;osip&#125;</span>:6080/"</span>    <span class="token builtin class-name">echo</span> <span class="token string">'用户名:'</span> <span class="token variable">$&#123;caddyuser&#125;</span>    <span class="token builtin class-name">echo</span> <span class="token string">'密码:'</span> <span class="token variable">$&#123;caddypass&#125;</span>    <span class="token builtin class-name">echo</span> <span class="token string">'Aria2 RPC 密钥:'</span> <span class="token variable">$&#123;secret&#125;</span>    <span class="token builtin class-name">echo</span> <span class="token string">'帮助文档: https://dwz.ovh/ccaa （必看）'</span>     <span class="token builtin class-name">echo</span> <span class="token string">'-------------------------------------------------------------'</span><span class="token punctuation">&#125;</span><span class="token comment">#清理工作</span><span class="token keyword">function</span> <span class="token function-name function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">rm</span> -rf *.zip    <span class="token function">rm</span> -rf *.gz    <span class="token function">rm</span> -rf *.txt    <span class="token function">rm</span> -rf aria2-1.3*    <span class="token comment">#rm -rf *.conf</span>    <span class="token function">rm</span> -rf init<span class="token punctuation">&#125;</span><span class="token comment">#卸载</span><span class="token keyword">function</span> <span class="token function-name function">uninstall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">#停止所有服务</span>    <span class="token function">kill</span> -9 <span class="token variable"><span class="token variable">$(</span>pgrep <span class="token string">'aria2c'</span><span class="token variable">)</span></span>    <span class="token function">kill</span> -9 <span class="token variable"><span class="token variable">$(</span>pgrep <span class="token string">'caddy'</span><span class="token variable">)</span></span>    <span class="token comment">#删除服务</span>    <span class="token comment">#systemctl disable caddy.service</span>    <span class="token comment">#rm -rf /lib/systemd/system/caddy.service</span>    <span class="token comment">#删除文件</span>    <span class="token function">rm</span> -rf /etc/ccaa    <span class="token function">rm</span> -rf /usr/sbin/caddy    <span class="token function">rm</span> -rf /usr/sbin/ccaa    <span class="token function">rm</span> -rf /usr/bin/aria2c    <span class="token function">rm</span> -rf aria2-1.*    <span class="token function">rm</span> -rf AriaNg*        <span class="token function">rm</span> -rf /usr/share/man/man1/aria2c.1    <span class="token function">rm</span> -rf /etc/ssl/certs/ca-certificates.crt    <span class="token comment">#删除端口</span>    del_post    <span class="token builtin class-name">echo</span> <span class="token string">"------------------------------------------------"</span>    <span class="token builtin class-name">echo</span> <span class="token string">'卸载完成！'</span>    <span class="token builtin class-name">echo</span> <span class="token string">"------------------------------------------------"</span><span class="token punctuation">&#125;</span><span class="token comment">#选择安装方式</span><span class="token builtin class-name">echo</span> <span class="token string">"------------------------------------------------"</span><span class="token builtin class-name">echo</span> <span class="token string">"Linux + Caddy + Aria2 + AriaNg一键安装脚本(CCAA)"</span><span class="token builtin class-name">echo</span> <span class="token string">"1) 安装CCAA"</span><span class="token builtin class-name">echo</span> <span class="token string">"2) 卸载CCAA"</span><span class="token builtin class-name">echo</span> <span class="token string">"3) 更新bt-tracker"</span><span class="token builtin class-name">echo</span> <span class="token string">"q) 退出！"</span><span class="token builtin class-name">read</span> -p <span class="token string">":"</span> istype<span class="token keyword">case</span> <span class="token variable">$istype</span> <span class="token keyword">in</span>    <span class="token number">1</span><span class="token punctuation">)</span>         setout        install_aria2 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        install_caddy <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        dealconf <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        chk_firewall <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        setting <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        cleanup    <span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token number">2</span><span class="token punctuation">)</span>         uninstall    <span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token number">3</span><span class="token punctuation">)</span>         <span class="token function">bash</span> ./upbt.sh    <span class="token punctuation">;</span><span class="token punctuation">;</span>    q<span class="token punctuation">)</span>         <span class="token builtin class-name">exit</span>    <span class="token punctuation">;</span><span class="token punctuation">;</span>    *<span class="token punctuation">)</span> <span class="token builtin class-name">echo</span> <span class="token string">'参数错误！'</span><span class="token keyword">esac</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用方式">使用方式</h2><p>下载 https://github.com/helloxz/ccaa/archive/v1.0.zip 然后解压，将<code>ccaa.sh</code> 的内容修改为上述内容。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span> <span class="token comment"># 切换为root</span><span class="token function">wget</span> https://github.com/helloxz/ccaa/archive/v1.0.zip<span class="token function">unzip</span> v1.0.zip<span class="token comment"># 然后修改 ccaa.sh 的内容并加上执行权限。</span><span class="token comment"># 然后运行 ccaa.sh选择安装</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装完 ccaa 之后， 我们需要手动配置 <code>filebrowser</code></p><pre class="line-numbers language-none"><code class="language-none">touch &#x2F;etc&#x2F;ccaa&#x2F;filebrowser.dbchmod 0777 -R &#x2F;etc&#x2F;ccaa&#x2F; # 用于解决权限问题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="配置-filebrowser">配置 filebrowser</h3><pre class="line-numbers language-none"><code class="language-none">#创建并初始化数据库filebrowser -d &#x2F;etc&#x2F;ccaa&#x2F;filebrowser.db config init#设置filebrowser监听地址filebrowser -d &#x2F;etc&#x2F;ccaa&#x2F;filebrowser.db config set --address 0.0.0.0#设置filebrowser监听端口,自己改(8099)filebrowser -d &#x2F;etc&#x2F;ccaa&#x2F;filebrowser.db config set --port 8099#设置filebrowser语言环境filebrowser -d &#x2F;etc&#x2F;ccaa&#x2F;filebrowser.db config set --locale zh-cn#设置filebrowser日志文件位置filebrowser -d &#x2F;etc&#x2F;ccaa&#x2F;filebrowser.db config set --log &#x2F;var&#x2F;log&#x2F;filebrowser.log#设置filebrowser Web控制台界面账号和密码 (root, 123456)filebrowser -d &#x2F;etc&#x2F;ccaa&#x2F;filebrowser.db users add root 123456 --perm.admin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改网站配置">修改网站配置</h3><p>如果你有域名，可以配置 https 访问。</p><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;ccaa&#x2F;caddy.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">aria.example.com &#123; # 你的 ariaNg 控制面板的域名        root &#x2F;etc&#x2F;ccaa&#x2F;AriaNg        gzip        #超时时间        timeouts 0        #访问口令        tls your_email@example.com # 你的邮件地址&#125;filebrowser.example.com &#123; # filebrowser 管理界面域名        gzip        tls your_email@example.com # 你的邮件地址        proxy &#x2F; http:&#x2F;&#x2F;127.0.0.1:8099 # 注意端口号改成之前设置的 filebrowser 的端口号&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置好之后，输入</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;sbin&#x2F;caddy -log stdout -agree&#x3D;true -conf&#x3D;&#x2F;etc&#x2F;ccaa&#x2F;caddy.conf -root&#x3D;&#x2F;var&#x2F;tmp -quic<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看 输出，会给你一个类似于 <code>https://acme-v02.api.letsencrypt.org/acme/authz-v3/440733xxx</code>的地址。复制里面的 <code>token</code> 的内容（不含引号），添加到域名的txt 记录里面,如</p><p><img src="https://sukanka-figure-bed.oss-cn-chengdu.aliyuncs.com/blog/202020200507034356.png"></p><p>其中，我的ariang 面板域名是 <code>aria.mydomain.suffix</code></p><p>再次运行</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;sbin&#x2F;caddy -log stdout -agree&#x3D;true -conf&#x3D;&#x2F;etc&#x2F;ccaa&#x2F;caddy.conf -root&#x3D;&#x2F;var&#x2F;tmp -quic<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看是否正常运行。</p><h3 id="修改-ariang-面板">修改 AriaNg 面板</h3><pre class="line-numbers language-none"><code class="language-none">sed -i &#39;s|Aria2 Status&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;|&amp;&lt;li&gt;&lt;a class&#x3D;&quot;toolbar&quot; title&#x3D;&quot;文件管理&quot; href&#x3D;&quot;http:&#x2F;&#x2F;server_ip:6081&#x2F;&quot; target&#x3D;&quot;_blank&quot;&gt;      &lt;i class&#x3D;&quot;fa fa-folder-o&quot;&gt;&lt;&#x2F;i&gt; 文件管理    &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;|&#39; &#x2F;etc&#x2F;ccaa&#x2F;AriaNg&#x2F;index.htmlsed -i &#39;s|http:&#x2F;&#x2F;server_ip:6081&#x2F;|https:&#x2F;&#x2F;prefix.yourdomain.suffix|g&#39; &#x2F;etc&#x2F;ccaa&#x2F;AriaNg&#x2F;index.html # 注意修改域名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="filebrowser-自启动文件">filebrowser 自启动文件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/systemd/system/filebrowser.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入以下内容</p><pre class="line-numbers language-none"><code class="language-none">[Unit]Description&#x3D;FilebrowserAfter&#x3D;network.target[Service]ExecStart&#x3D;&#x2F;usr&#x2F;sbin&#x2F;filebrowser -d &#x2F;etc&#x2F;ccaa&#x2F;filebrowser.db[Install]WantedBy&#x3D;multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="caddy-自启动">caddy 自启动</h3><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;filebrowser.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">[Unit]Description&#x3D;Caddy HTTP&#x2F;2 web serverDocumentation&#x3D;https:&#x2F;&#x2F;caddyserver.com&#x2F;docsAfter&#x3D;network-online.targetWants&#x3D;network-online.target systemd-networkd-wait-online.service[Service]Restart&#x3D;on-abnormal; User and group the process will run as.User&#x3D;caddyGroup&#x3D;caddy; Letsencrypt-issued certificates will be written to this directory.Environment&#x3D;CADDYPATH&#x3D;&#x2F;etc&#x2F;ssl&#x2F;caddy; Always set &quot;-root&quot; to something safe in case it gets forgotten in the Caddyfile.ExecStart&#x3D;&#x2F;sbin&#x2F;caddy -log stdout -agree&#x3D;true -conf&#x3D;&#x2F;etc&#x2F;ccaa&#x2F;caddy.conf -root&#x3D;&#x2F;var&#x2F;tmp -quic; Use graceful shutdown with a reasonable timeoutKillMode&#x3D;mixedKillSignal&#x3D;SIGQUITTimeoutStopSec&#x3D;5s; Limit the number of file descriptors; see &#96;man systemd.exec&#96; for more limit settings.LimitNOFILE&#x3D;1048576; Unmodified caddy is not expected to use more than that.LimitNPROC&#x3D;512; Use private &#x2F;tmp and &#x2F;var&#x2F;tmp, which are discarded after caddy stops.PrivateTmp&#x3D;true; Use a minimal &#x2F;devPrivateDevices&#x3D;true; Hide &#x2F;home, &#x2F;root, and &#x2F;run&#x2F;user. Nobody will steal your SSH-keys.ProtectHome&#x3D;true; Make &#x2F;usr, &#x2F;boot, &#x2F;etc and possibly some more folders read-only.ProtectSystem&#x3D;full; … except &#x2F;etc&#x2F;ssl&#x2F;caddy, because we want Letsencrypt-certificates there.;   This merely retains r&#x2F;w access rights, it does not add any new. Must still be writable on the host!ReadWriteDirectories&#x3D;&#x2F;etc&#x2F;ssl&#x2F;caddy; The following additional security directives only work with systemd v229 or later.; They further retrict privileges that can be gained by caddy. Uncomment if you like.; Note that you may have to add capabilities required by any plugins in use.CapabilityBoundingSet&#x3D;CAP_NET_BIND_SERVICEAmbientCapabilities&#x3D;CAP_NET_BIND_SERVICENoNewPrivileges&#x3D;true[Install]WantedBy&#x3D;multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="aria2-自启动">aria2 自启动</h4><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;aria2.service <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Description&#x3D;aria2After&#x3D;network.target[Service]ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;aria2c --conf-path&#x3D;&#x2F;etc&#x2F;ccaa&#x2F;aria2.conf[Install]WantedBy&#x3D;multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="加载自启动文件">加载自启动文件</h3><pre class="line-numbers language-none"><code class="language-none">systemctl daemon-reload systemctl start aria2.servicesystemctl start caddy.servicesystemctl start filebrowser.servicesystemctl enable aria2.servicesystemctl enable caddy.servicesystemctl enable filebrowser.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以使用 <code>systemctl status aria2</code>来查看 aria2 的运行状态。</p><h1 id="附录">附录</h1><h2 id="我的aria2.conf">我的<code>aria2.conf</code></h2><pre class="line-numbers language-none"><code class="language-none">## Manjaro## &#39;#&#39;开头为注释内容, 选项都有相应的注释说明, 根据需要修改 #### 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  #### 文件保存相关 ### 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置dir&#x3D;&#x2F;Downloads# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16Mdisk-cache&#x3D;32M# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc# 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc# falloc和trunc则需要文件系统和内核支持# NTFS建议使用falloc, EXT3&#x2F;4建议trunc, MAC 下需要注释此项file-allocation&#x3D;trunc# 断点续传continue&#x3D;true#日志位置log&#x3D;stdoutlog-level&#x3D;warn## 下载连接相关 ### 最大同时下载任务数, 运行时可修改, 默认:5max-concurrent-downloads&#x3D;10# 同一服务器连接数, 添加时可指定, 默认:1max-connection-per-server&#x3D;16# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M# 假定size&#x3D;10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载min-split-size&#x3D;20M# 单个任务最大线程数, 添加时可指定, 默认:5split&#x3D;16# 整体下载速度限制, 运行时可修改, 默认:0#max-overall-download-limit&#x3D;0# 单个任务下载速度限制, 默认:0#max-download-limit&#x3D;0# 整体上传速度限制, 运行时可修改, 默认:0#max-overall-upload-limit&#x3D;1024K# 单个任务上传速度限制, 默认:0#max-upload-limit&#x3D;0# 禁用IPv6, 默认:false#disable-ipv6&#x3D;truecheck-certificate&#x3D;false#自动重命名#auto-file-renaming# 连接超时时间, 默认:60#timeout&#x3D;60# 最大重试次数, 设置为0表示不限制重试次数, 默认:5#max-tries&#x3D;5# 设置重试等待的秒数, 默认:0#retry-wait&#x3D;0#HTTP 代理服务器#http-proxy&#x3D;http:&#x2F;&#x2F;127.0.0.1:12333#HTTPS 代理服务器#https-proxy&#x3D;http:&#x2F;&#x2F;127.0.0.1:12333## 进度保存相关 ### 从会话文件中读取下载任务input-file&#x3D;&#x2F;etc&#x2F;ccaa&#x2F;aria2.sessionsave-session&#x3D;&#x2F;etc&#x2F;ccaa&#x2F;aria2.session# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0save-session-interval&#x3D;30## RPC相关设置 ### 启用RPC, 默认:falseenable-rpc&#x3D;true# 允许所有来源, 默认:falserpc-allow-origin-all&#x3D;true# 允许非外部访问, 默认:falserpc-listen-all&#x3D;true# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同#event-poll&#x3D;select# RPC监听端口, 端口被占用时可以修改, 默认:6800rpc-listen-port&#x3D;6800# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项rpc-secret&#x3D;mypassword# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项#rpc-user&#x3D;&lt;USER&gt;# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项#rpc-passwd&#x3D;&lt;PASSWD&gt;# 是否启用 RPC 服务的 SSL&#x2F;TLS 加密,# 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接rpc-secure&#x3D;true# 在 RPC 服务中启用 SSL&#x2F;TLS 加密时的证书文件,# 使用 PEM 格式时，您必须通过 --rpc-private-key 指定私钥rpc-certificate&#x3D;&#x2F;root&#x2F;.caddy&#x2F;acme&#x2F;acme-v02.api.letsencrypt.org&#x2F;sites&#x2F;aria.example.com&#x2F;aria.example.com.crt# 在 RPC 服务中启用 SSL&#x2F;TLS 加密时的私钥文件rpc-private-key&#x3D;&#x2F;root&#x2F;.caddy&#x2F;acme&#x2F;acme-v02.api.letsencrypt.org&#x2F;sites&#x2F;aria.example.com&#x2F;aria.example.com.key## BT&#x2F;PT下载相关 ### 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:truefollow-torrent&#x3D;true# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999listen-port&#x3D;51413#强制加密, 防迅雷必备bt-require-crypto&#x3D;true# 单个种子最大连接数, 默认:55bt-max-peers&#x3D;110# 打开DHT功能, PT需要禁用, 默认:trueenable-dht&#x3D;true# 打开IPv6 DHT功能, PT需要禁用enable-dht6&#x3D;true# DHT网络监听端口, 默认:6881-6999dht-listen-port&#x3D;6881-6999# 本地节点查找, PT需要禁用, 默认:falsebt-enable-lpd&#x3D;true# 种子交换, PT需要禁用, 默认:trueenable-peer-exchange&#x3D;true# 每个种子限速, 对少种的PT很有用, 默认:50K#bt-request-peer-speed-limit&#x3D;50K# 客户端伪装, PT需要peer-id-prefix&#x3D;-TR2770-user-agent&#x3D;Transmission&#x2F;2.77# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0seed-ratio&#x3D;0#分离做种，做种的时候不算在任务里bt-detach-seed-only&#x3D;true#下载完自动删除.aria2文件#on-download-complete&#x3D;&quot;rm -f &quot;$3.aria2&quot;# 强制保存会话, 即使任务已经完成, 默认:false# 较新的版本开启后会在任务完成后依然保留.aria2文件force-save&#x3D;false# BT校验相关, 默认:true#bt-hash-check-seed&#x3D;true# 继续之前的BT任务时, 无需再次校验, 默认:false#bt-seed-unverified&#x3D;true# 保存磁力链接元数据为种子文件(.torrent文件), 默认:falsebt-save-metadata&#x3D;true# trackersbt-tracker&#x3D;udp:&#x2F;&#x2F;93.158.213.92:1337&#x2F;announce,http:&#x2F;&#x2F;93.158.213.92:1337&#x2F;announce,udp:&#x2F;&#x2F;188.241.58.209:6969&#x2F;announce,udp:&#x2F;&#x2F;62.210.97.59:1337&#x2F;announce,http:&#x2F;&#x2F;62.210.97.59:1337&#x2F;announce,udp:&#x2F;&#x2F;151.80.120.114:2710&#x2F;announce,udp:&#x2F;&#x2F;151.80.120.115:2710&#x2F;announce,udp:&#x2F;&#x2F;208.83.20.20:6969&#x2F;announce,udp:&#x2F;&#x2F;185.181.60.67:80&#x2F;announce,udp:&#x2F;&#x2F;194.182.165.153:6969&#x2F;announce,udp:&#x2F;&#x2F;37.235.174.46:2710&#x2F;announce,udp:&#x2F;&#x2F;5.206.13.166:6969&#x2F;announce,udp:&#x2F;&#x2F;89.234.156.205:451&#x2F;announce,udp:&#x2F;&#x2F;92.223.105.178:6969&#x2F;announce,udp:&#x2F;&#x2F;176.113.71.60:6961&#x2F;announce,http:&#x2F;&#x2F;176.113.71.60:6961&#x2F;announce,udp:&#x2F;&#x2F;207.241.226.111:6969&#x2F;announce,udp:&#x2F;&#x2F;51.15.40.114:80&#x2F;announce,udp:&#x2F;&#x2F;207.241.231.226:6969&#x2F;announce,udp:&#x2F;&#x2F;184.105.151.164:6969&#x2F;announce,http:&#x2F;&#x2F;184.105.151.164:6969&#x2F;announce,udp:&#x2F;&#x2F;212.47.227.58:6969&#x2F;announce,udp:&#x2F;&#x2F;31.210.170.169:2710&#x2F;announce,udp:&#x2F;&#x2F;46.148.18.250:2710&#x2F;announce,udp:&#x2F;&#x2F;51.15.55.204:1337&#x2F;announce,udp:&#x2F;&#x2F;91.149.192.31:6969&#x2F;announce,udp:&#x2F;&#x2F;5.226.148.20:6969&#x2F;announce,udp:&#x2F;&#x2F;217.76.183.53:80&#x2F;announce,udp:&#x2F;&#x2F;51.81.46.170:6969&#x2F;announce,udp:&#x2F;&#x2F;46.148.18.254:2710&#x2F;announce,http:&#x2F;&#x2F;51.15.55.204:1337&#x2F;announce,http:&#x2F;&#x2F;51.81.46.170:6969&#x2F;announce,udp:&#x2F;&#x2F;207.246.121.172:2000&#x2F;announce,udp:&#x2F;&#x2F;62.171.179.41:80&#x2F;announce,udp:&#x2F;&#x2F;212.1.226.176:2710&#x2F;announce,udp:&#x2F;&#x2F;173.82.240.104:6969&#x2F;announce,http:&#x2F;&#x2F;95.107.48.115:80&#x2F;announce,udp:&#x2F;&#x2F;94.224.67.24:6969&#x2F;announce,udp:&#x2F;&#x2F;51.158.23.91:6969&#x2F;announce,udp:&#x2F;&#x2F;78.46.225.225:2710&#x2F;announce,udp:&#x2F;&#x2F;194.26.183.158:6969&#x2F;announce,udp:&#x2F;&#x2F;159.89.208.145:8866&#x2F;announce,http:&#x2F;&#x2F;78.46.225.225:2710&#x2F;announce,http:&#x2F;&#x2F;159.89.208.145:8866&#x2F;announce,udp:&#x2F;&#x2F;103.196.36.31:6969&#x2F;announce,udp:&#x2F;&#x2F;167.179.77.133:1&#x2F;announce,udp:&#x2F;&#x2F;165.227.0.51:6969&#x2F;announce,udp:&#x2F;&#x2F;222.84.65.27:6969&#x2F;announce,udp:&#x2F;&#x2F;49.12.75.231:6969&#x2F;announce,udp:&#x2F;&#x2F;78.30.254.12:2710&#x2F;announce,udp:&#x2F;&#x2F;218.5.41.129:2710&#x2F;announce,udp:&#x2F;&#x2F;80.211.26.119:9696&#x2F;announce,http:&#x2F;&#x2F;122.116.144.108:80&#x2F;announce,http:&#x2F;&#x2F;165.227.0.51:6969&#x2F;announce,http:&#x2F;&#x2F;149.129.63.70:6969&#x2F;announce,http:&#x2F;&#x2F;222.84.65.27:6969&#x2F;announce,http:&#x2F;&#x2F;116.203.120.203:6969&#x2F;announce,http:&#x2F;&#x2F;177.139.10.157:6969&#x2F;announce,http:&#x2F;&#x2F;51.38.230.101:80&#x2F;announce,http:&#x2F;&#x2F;54.39.179.91:6699&#x2F;announce,http:&#x2F;&#x2F;78.30.254.12:2710&#x2F;announce,http:&#x2F;&#x2F;51.79.71.167:80&#x2F;announce,udp:&#x2F;&#x2F;182.150.53.61:8080&#x2F;announce,udp:&#x2F;&#x2F;163.172.209.40:2710&#x2F;announce,udp:&#x2F;&#x2F;176.113.68.67:6961&#x2F;announce,udp:&#x2F;&#x2F;75.127.14.224:2710&#x2F;announce,udp:&#x2F;&#x2F;52.58.128.163:6969&#x2F;announce,udp:&#x2F;&#x2F;51.15.3.74:6969&#x2F;announce,udp:&#x2F;&#x2F;139.99.100.97:8080&#x2F;announce,http:&#x2F;&#x2F;182.150.53.61:8080&#x2F;announce,http:&#x2F;&#x2F;176.113.68.67:6961&#x2F;announce,http:&#x2F;&#x2F;54.37.106.164:80&#x2F;announce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用 https 时注意以下几行</p><pre class="line-numbers language-none"><code class="language-none"># 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接rpc-secure&#x3D;true# 在 RPC 服务中启用 SSL&#x2F;TLS 加密时的证书文件,# 使用 PEM 格式时，您必须通过 --rpc-private-key 指定私钥rpc-certificate&#x3D;&#x2F;root&#x2F;.caddy&#x2F;acme&#x2F;acme-v02.api.letsencrypt.org&#x2F;sites&#x2F;aria.example.com&#x2F;aria.example.com.crt# 在 RPC 服务中启用 SSL&#x2F;TLS 加密时的私钥文件rpc-private-key&#x3D;&#x2F;root&#x2F;.caddy&#x2F;acme&#x2F;acme-v02.api.letsencrypt.org&#x2F;sites&#x2F;aria.example.com&#x2F;aria.example.com.key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这几行是 aria2 的口令</p><pre class="line-numbers language-none"><code class="language-none"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项rpc-secret&#x3D;mypassword<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aria2 </tag>
            
            <tag> caddy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华硕天选R7-4800H+RTX2060 安装 ArchLinux</title>
      <link href="2020/04/28/archlinux_installation/"/>
      <url>2020/04/28/archlinux_installation/</url>
      
        <content type="html"><![CDATA[<h1 id="配置">配置</h1><p>我有幸以6599返100E卡抢到了一台4800H+2060的天选，之前想要安装 Manjaro, 但是LiveCD始终进入不了图形界面，因而放弃，转而选择了ArchLinux. 详细配置如下</p><pre class="line-numbers language-none"><code class="language-none">$ neofetch   --------------------------------------------------------------------------------------                   -&#96;                    sukanka@asustx                   .o+&#96;                   --------------                  &#96;ooo&#x2F;                   OS: Arch Linux x86_64                 &#96;+oooo:                  Host: TUF Gaming FA506IV_FA506IV 1.0                &#96;+oooooo:                 Kernel: 5.6.7-arch1-1                -+oooooo+:                Uptime: 2 hours, 10 mins              &#96;&#x2F;:-:++oooo+:               Packages: 970 (pacman)             &#96;&#x2F;++++&#x2F;+++++++:              Shell: zsh 5.8            &#96;&#x2F;++++++++++++++:             Resolution: 1920x1080           &#96;&#x2F;+++ooooooooooooo&#x2F;&#96;           DE: Plasma          .&#x2F;ooosssso++osssssso+&#96;          WM: KWin         .oossssso-&#96;&#96;&#96;&#96;&#x2F;ossssss+&#96;         WM Theme: 微风        -osssssso.      :ssssssso.        Theme: Breeze [Plasma], Breeze [GTK2&#x2F;3]       :osssssss&#x2F;        osssso+++.       Icons: breeze [Plasma], breeze [GTK2&#x2F;3]      &#x2F;ossssssss&#x2F;        +ssssooo&#x2F;-       Terminal: yakuake    &#96;&#x2F;ossssso+&#x2F;:-        -:&#x2F;+osssso+-     CPU: AMD Ryzen 7 4800H with Radeon Graphics (16) @ 2.900GHz   &#96;+sso+:-&#96;                 &#96;.-&#x2F;+oso:    GPU: AMD ATI 06:00.0 Renoir  &#96;++:.                           &#96;-&#x2F;+&#x2F;   GPU: NVIDIA 01:00.0 NVIDIA Corporation Device 1f15  .&#96;                                 &#96;&#x2F;   Memory: 2492MiB &#x2F; 31594MiB <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先我参考了<a href="https://www.viseator.com/2017/05/17/arch_install/">以官方Wiki的方式安装ArchLinux</a></p><p>安装上了 ArchLinux, 需要注意的是，天选是 nvme的固态硬盘，因而没有<code>/dev/sda</code> 之类的，而是 <code>/dev/nvme0n1</code></p><h1 id="图形界面">图形界面</h1><p>参照 <a href="https://www.viseator.com/2017/05/19/arch_setup/">ArchLinux安装后的必须配置与图形界面安装教程</a></p><h2 id="常用软件">常用软件</h2><p>这部分记录自己常用的软件。其中 <code>texlive</code> 实际安装的是从<a href="https://tug.org/">TeX Users Group</a> 下载的最新版本，之后安装<code>texlive-dummy</code>让 Arch 认为 <code>texlive</code> 已经安装。</p><pre class="line-numbers language-none"><code class="language-none">$ yay -Qeqt-----------------------------------------------------------------------------------acpiamd-ucodeanacondaandroid-sdk-build-toolsarchlinuxcn-keyringaria2arkautoconfautomakebasebisoncalibre-python3clashcudadeepin.com.qq.imdialogdolphinfakerootfcitx5-chinese-addonsfcitx5-configtoolfcitx5-gtkfcitx5-material-colorfcitx5-pinyin-moegirlfcitx5-pinyin-zhwikifilelightflameshotflexfluttergimpglfw-x11gogoogle-chromegrubgwenviewinetutilsinkscapeinxijuliakamosokatekcronkde-gtk-configkdenlivekdeplasma-addonskgamma5khotkeyskinfocenterkrdckrfbksystemlogkwallet-pamkwayland-integrationkwritedlatte-dockmathpix-snipping-toolmkcertmpvnamcapneofetchnetwork-manager-appletnvidiaoh-my-zsh-gitokularoptimus-manager-amd-gitoxygenpamac-aurperl-log-dispatchperl-log-log4perlperl-namespace-autocleanperl-params-validationcompilerperl-specioperl-tkperl-unicode-linebreakperl-yaml-tinypicgo-appimagepkgconfplasma-browser-integrationplasma-paplasma-sdkplasma-thunderboltplasma-vaultproxychains-ngpython-aiohttpqtcreatorrstudio-desktop-binscrcpysddm-kcmsimplescreenrecorderspectaclespotifystracesystemd-kcmtlp-rdwtyporauser-managervimvirt-managervisual-studio-code-binwgetwps-office-cnxdg-desktop-portal-kdexf86-video-atixf86-video-fbdevxf86-video-vesaxorg-bdftopcfxorg-docsxorg-font-utilxorg-fonts-100dpixorg-fonts-75dpixorg-iceauthxorg-luitxorg-server-xephyrxorg-server-xnestxorg-server-xvfbxorg-server-xwaylandxorg-sessregxorg-smproxyxorg-x11perfxorg-xbacklightxorg-xcmsdbxorg-xcursorgenxorg-xdriinfoxorg-xevxorg-xgammaxorg-xhostxorg-xinputxorg-xkbevdxorg-xkbutilsxorg-xkillxorg-xlsatomsxorg-xlsclientsxorg-xmodmapxorg-xprxorg-xrefreshxorg-xvinfoxorg-xwdxorg-xwudyakuakeyayzotero<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="双显卡方案">双显卡方案</h2><p>我以前用的 <code>Bumblebee</code> 但是听说性能不行，后来换了 <code>optimus-manager</code> 由于是 AMD处理器，应该使用 <code>optimus-manager-amd-git</code><span class="math inline">\(^{\text{AUR}}\)</span> ，同时该包依赖的 <code>bbswitch</code> 也需要换成 <code>bbswitch-ati-git</code><span class="math inline">\(^{\text{AUR}}\)</span></p><p>具体配置可以看 <a href="https://blog.edward-p.xyz/optimus-manager/">使用 optimus-manager 来管理显卡切换</a>。</p><h2 id="屏幕撕裂问题">屏幕撕裂问题</h2><p>我的各种驱动装好后，开机过了一会儿之后，屏幕左下角会出现闪屏，在设置里面将屏幕刷新率设置成60Hz 之后就好了。</p><h2 id="屏幕亮度无法调节问题">屏幕亮度无法调节问题</h2><p>我的 ArchLinux 一直无法调节屏幕亮度，按快捷键调节虽然屏幕亮度条在变，但是实际u亮度并没有改变，一直是最高亮度。昨天晚上觉得太亮了，决定搞定它。</p><p>参考了 ArchWiki 的 <a href="https://wiki.archlinux.org/index.php/backlight">Backlight</a> 部分，但是当我按照 ACPI 小节的指示输入时，居然有两个！</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ls</span> /sys/class/backlight/----------------------------------------------------------------------amdgpu_bl0 asus-nb-wmi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>而且当我尝试使用 root 修改 brightness 文件时，居然无法修改(改了之后还是原来的值)。</p><p>后来看到 Wiki 里面有一句</p><blockquote><p>If you find that changing the <code>acpi_video0</code> backlight does not actually change the brightness, you may need to use <code>acpi_backlight=none</code>.</p></blockquote><p>于是尝试修改内核参数为 <code>acpi_backlight=none</code>，关于如何修改内核参数可见 <a href="https://wiki.archlinux.org/index.php/Kernel_parameters_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">内核参数</a>.</p><p>改好后就一切正常了，我还突然有点不习惯了。</p>]]></content>
      
      
      <categories>
          
          <category> ArchLinux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AMD </tag>
            
            <tag> KDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word 论文写作小技巧</title>
      <link href="2020/04/18/my_word_academic_suite/"/>
      <url>2020/04/18/my_word_academic_suite/</url>
      
        <content type="html"><![CDATA[<p>本文主要介绍使用在 Windows 系统中 MS Word 配合 Citavi 进行论文写作和文献管理的小技巧。</p><h2 id="图表的交叉引用">图表的交叉引用</h2><p>对于 Word 中插入的图表，在正文写作时可能需要对图表进行交叉引用，比如“由图 1 知”、“由表 2 可得”。此时，我们可以运用 Word 主菜单栏「引用」中的「插入题注」功能。在写作完成后，我们只需要选中相应区域，点击更新域（或者按快捷键「F9」），图表的编号会自动更新。如果想要对所有域进行更新，可以先按「Ctrl + A」，再按「F9」。</p><p><img src="/2020/04/18/my_word_academic_suite/202020200418185109.gif"></p><h2 id="公式编号及交叉引用">公式编号及交叉引用</h2><p>除了图表，我们往往还需要对公式进行交叉引用。对于公式的编号及交叉引用，「MathType」或「AxMath」等插件非常好用，但如果你的合作者没有下载相应的软件，则对方可能无法编辑，并且有些情况下（比如部分学校的毕业论文）要求你必须使用 Word 自带公式编辑器，此时外部插件就不香了。因此，这里主要介绍如何使用 Word 自带公式编辑器进行公式编号及交叉引用。</p><p>网上有许多关于公式编号及交叉引用的方法，不过要同时实现<strong>编号右对齐</strong>、<strong>自动更新编号</strong>、<strong>方便交叉引用</strong>三种功能，个人更习惯使用以下方式。</p><p>Word 的公式编辑器可以选择「Unicode」和「LaTeX」两种方式，下面的例子使用后者进行公式编写，具体步骤如下：</p><ol type="1"><li><p>使用快捷键「Alt + =」，进入公式编辑状态；</p></li><li><p>输入公式后，在公示编辑框內输入「#()」，将光标停留在括号中，点击主菜单栏「插入」中「文档部件」下拉菜单的「域」，选择「AutoNum」，格式为「1,2,3,...」，点击「确定」，此时「#()」中自动生成了数字「1」，其他公式的编号自动更新（若未更新，可选中相应区域，按快捷键「F9」更新域）；</p><p><img src="/2020/04/18/my_word_academic_suite/202020200418185250.png"></p></li><li><p>选中生成的数字「1」，点击主菜单栏「插入」中的「书签」，在「书签名」中输入公式的标签（如 “Eq1”），点击「添加」；</p><p><img src="/2020/04/18/my_word_academic_suite/202020200418185329.png"></p></li><li><p>使用快捷键「Ctrl + =」，将线性公式转换为专业格式；</p></li><li><p>在正文需要引用公式的位置，点击主菜单栏「插入」中的「交叉引用」，在「引用类型」下拉菜单中选择「书签」，再选择对应的公式标签即可；</p></li><li><p>在写作完成后，类似地，选中相应区域，点击更新域（或者按快捷键「F9」），公式的编号会自动更新。</p></li></ol><p><img src="/2020/04/18/my_word_academic_suite/202020200418185403.gif"></p><h2 id="文献管理软件citavi-6">文献管理软件：Citavi 6</h2><p>市面上常用文献管理软件的对比可以参考<a href="https://www.softhead-citavi.com/blog/2314">此链接</a>。每个软件都有其自身的优点，每个用户都有自身的使用习惯，适合自己的才是最好的。本人亲身使用过 <strong>EndNote X9</strong> 和 <strong>Citavi 6</strong> 两款文献管理软件进行过论文写作，同时了解对比过若干个其他文献管理软件，不得不承认 <strong>Citavi 6</strong> 的确是文献管理软件中的战斗机，其<a href="https://www.softhead-citavi.com/features">主要特点</a>参见官网。个人最终选择了 <strong>Citavi 6</strong> 作为主要的文献管理工具，主要有以下几个原因：</p><ul><li>基础功能完善，拓展功能强大，兼具完备性和灵活性；</li><li>可以选择将项目保存在本地或云端（德国本地服务器，数据安全性有保障）；</li><li>社区用户活跃，<a href="http://forum.softhead-citavi.com/">官方论坛</a>能够解决 90% 以上的软件使用问题，并且能在客户服务 QQ 群向管理员提问，亲测服务态度贼棒。</li></ul><p>当然，<strong>Citavi 6</strong> 也有一些缺陷，个人认为主要有以下几点：</p><ul><li>初期学习成本较大（相对于其他文献管理软件而言），但学会之后显著提高科研效率；</li><li>启动程序较慢（成功启动之后运行流畅）；</li><li>个别情况下遇到云端服务器维护时，无法打开云端项目让人崩溃（鉴于教训，本人将最近正在写作的论文项目存放在了本地，已完成或者不紧急的项目放在云端，云端和本地项目可以相互转换）；</li><li>个别用户的在 Word 中不显示 Citavi 插件（可以在<a href="http://forum.softhead-citavi.com/t/159?ip=1">官方论坛</a>或者客服服务 QQ 群寻求帮助，但也存在用户的 Word 本身有问题的情况）。</li></ul><p>如果大家对 <strong>Citavi 6</strong> 比较陌生，可以参考 <a href="https://www.softhead-citavi.com/citavi6_user_guide"><strong>Citavi 6 入门指南</strong></a>进行学习，下面主要介绍几个常用的 <strong>Citavi 6</strong> 小技巧</p><h3 id="导入文献">导入文献</h3><p><strong>Citavi 6</strong> 提供了若干种导入文献的方法，根据个人使用经验，最常用的主要有以下三种：</p><ul><li><p>利用 <strong>Citavi Picker</strong> 插件：Citavi Picker 是 Chrome，Firefox 和 Internet Explorer 的免费扩展浏览器插件，它能在网页上标识 ISBN 和 DOI 号，并将参考信息发送到用户的项目，也可以发送网页和网页内容到用户项目，<a href="http://forum.softhead-citavi.com/t/205?ip=2">该链接以谷歌学术文献搜索为例</a>；</p></li><li><p>利用 <strong>ISBN, DOI, other ID</strong> 功能：点击菜单栏「ISBN, DOI, other ID」选项，输入文献的识别码（ISBN, DOI, or PubMed ID），在线搜索成功后，点击「Add to project」即可；</p><p><img src="/2020/04/18/my_word_academic_suite/202020200418185432.png"></p></li><li><p>利用<strong>多种格式文件</strong>导入：<strong>Citavi</strong> 具有良好的兼容性，能够以 RIS，BibTeX 和 ENW 等格式导入参考文献，当我们从谷歌学术或者百度学术下载相应格式的文件后，可以直接拖动该文件到 <strong>Citavi</strong> 相应区域。</p><p><img src="/2020/04/18/my_word_academic_suite/202020200418185454.gif"></p></li></ul><h3 id="文內引用">文內引用</h3><p>在理工科领域，文內引用（in-text citation）多使用数字编号，而在社科领域，文內引用（in-text citation）常常要求丰富的格式变换，比如“张三(2020)”、“(张三, 2020)”、“张三”等格式。该功能在 Word 中使用 Citavi 插件可以轻松实现。</p><p><img src="/2020/04/18/my_word_academic_suite/202020200418185521.gif"></p><h3 id="参考文献格式">参考文献格式</h3><p><strong>Citavi</strong> 目前提供几乎所有的英文期刊参考文献格式。如果搜索不到某些期刊要求的参考文献格式，可以给工作人员发邮件，工作人员会为你制作相应的期刊论文格式。</p><p>但由于 <strong>Citavi</strong> 开发人员目前只支持德语和英语，所以中文期刊只能自己制作或改编现有参考文献格式的 ccs 文件。比如，<strong>Citavi</strong> 提供了 GB/T 7714-2015 格式，绝大多数中文期刊格式可以在此基础上进行微小改动，这也体现了 <strong>Citavi</strong> 的灵活性，具体实现方法可以参照客服服务 QQ 群中的相关帮助文档。</p><p>据我所知，大多数文献管理软件并不能同时较好地管理中文和英文的参考文献：比如有时候要求中英文的参考文献格式相互独立；再如许多现有的文献格式英文在前，中文在后，而学位论文、中文期刊要求中文在前，英文在后。而 <strong>Citavi</strong> 可以完美地解决上述问题，下图展示了本人在 GB/T 7714-2015 的基础上进行参考文献格式修改，以满足本校本科生毕业论文的参考文献格式的全部要求。在修改时，各个修改成分的修改效果可以在最右边的方框中动态呈现。</p><p><img src="/2020/04/18/my_word_academic_suite/202020200418185541.png"></p><h3 id="word-导航窗格-citavi-pane-协同写作">Word 导航窗格 + Citavi Pane 协同写作</h3><p>在 <strong>Citavi</strong> 导入文献时，将文献进行分类，会为后续写作节省很多时间。在进行论文写作时，同时打开 Word 的导航窗格和 Citavi Pane，会使得写作思路更加清晰。尤其是在写作引言、文献综述和结论时，这些部分涉及的文献较多，如果没有事先的文献分类和清晰的写作框架，学者常常会因为在寻找合适的文内引用上耗费宝贵的时间，并且写作思路也容易被打乱。Word 导航窗格 + Citavi Pane 协同写作能够较好地解决这个问题，让我们更加专注于写作本身。</p><p><img src="/2020/04/18/my_word_academic_suite/202020200418185557.png"></p><h2 id="结语">结语</h2><p>本文到这里就结束了，如果大家对 Word 论文写作和文献管理有什么心得，欢迎一起讨论。</p>]]></content>
      
      
      <categories>
          
          <category> Office </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Word </tag>
            
            <tag> 论文写作 </tag>
            
            <tag> 文献管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的LaTeX学术套装</title>
      <link href="2020/04/07/my_academic_suite/"/>
      <url>2020/04/07/my_academic_suite/</url>
      
        <content type="html"><![CDATA[<p>在平时的论文写作中，如果能够事先将工具配置好能够节省非常多的精力。本文介绍 <span class="math inline">\(\LaTeX\)</span> 配合 VSCode 和 Zotero 进行论文写作和文献管理。</p><h1 id="tex-套装配置"><span class="math inline">\(\TeX\)</span> 套装配置</h1><h2 id="套装选择">套装选择</h2><p>Windows 和 Linux 推荐使用 TeXLive, 截至目前，最新的 TeXLive 2020版已于 4月10日发布。Mac 推荐使用MacTeX。 都推荐安装完整版，这样不用每次都去下载需要的包。安装教程可以看<a href="https://www.tug.org/texlive/doc/texlive-zh-cn/texlive-zh-cn.pdf"><span class="math inline">\(\TeX\)</span> <em>Live</em> 指南—2020</a>。</p><h2 id="vscode-latex-配置">VSCode LaTeX 配置</h2><h3 id="latexworkshop-插件">LaTeXWorkshop 插件</h3><p>编辑器个人推荐使用 VSCode, VSCode 是一款便捷强大的编辑器，界面也十分美观，它的 <a href="https://github.com/James-Yu/LaTeX-Workshop"><span class="math inline">\(\LaTeX\)</span>-WorkShop</a> 插件提供了 <span class="math inline">\(\LaTeX\)</span> 支持，它提供了代码高亮、自动补全、自定义代码片段、编译链、正向跳转、逆向跳转等功能。</p><p>VSCode 还可以为不同的工作区应用不同的设置，因此在写 <span class="math inline">\(\LaTeX\)</span> 时，我们可以为工作区禁用 Python、CodeRunner 等不需要的插件。</p><p><img src="/2020/04/07/my_academic_suite/202020200407234822.gif"></p><p>编译链配置可以参考 <a href="https://zhuanlan.zhihu.com/p/38178015">使用VSCode编写LaTeX</a>。</p><p>在实际中经常用到的编译工具主要有编译文档的pdflatex, xelatex 和编译bib文件的 bibtex 和bier。 如果把各种常用情形都考虑在内至少需要6种编译链。实际上，在tex 文档设置好了编译工具之后，可以通过快捷键编译而不需要手动选择编译链。</p><p>在你的 <span class="math inline">\(\TeX\)</span> 主文件的最开头设置好编译工具，如下面的命令指定了使用 xelatex 来编译文档，biber 来编译bib文件，然后在 tex 文档中使用 快捷键调起 <code>TeXMagicProgramWithArgs</code> 就可以编译。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token comment">%!TEX program = xelatex</span><span class="token comment">%!BIB program = biber</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/04/07/my_academic_suite/202020200408000033.png"></p><p>下面是我常用的一些快捷方式</p><ul><li>使用<code>TeXMagicProgramWithArgs</code>编译： Ctrl+Alt+B</li><li>正向跳转：Ctrl+Alt+J</li><li>逆向跳转（pdf 到 tex): Ctrl+Click</li></ul><p><span class="math inline">\(\LaTeX\)</span>-WorkShop 插件还提供了各种各样的代码片段，例如可以使用 <code>\equation</code> 产生</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">equation</span><span class="token punctuation">&#125;</span><span class="token equation string">    </span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">equation</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>此外还有 <code>\figure</code> 等代码片段用于插入图片。插入表格虽然有 <code>\table</code> 代码片段但是仍然比较麻烦，推荐先在 Excel 做好表格，然后使用 <a href="https://github.com/krlmlr/Excel2LaTeX">Excel2LaTeX</a> 或者 <a href="https://www.tablesgenerator.com/latex_tables">LaTeX Tables Generator 网站</a>将Excel 表格转换成 <span class="math inline">\(\LaTeX\)</span> 表格并粘贴。</p><p><img src="/2020/04/07/my_academic_suite/202020200408000432.gif"></p><h3 id="其他插件">其他插件</h3><ul><li><a href="https://github.com/tecosaur/LaTeX-Utilities">LaTeX Utilities</a>: 提供字数统计、zotero交互等功能</li><li><a href="https://github.com/valentjn/vscode-ltex">LTeX</a> : 为<span class="math inline">\(\LaTeX\)</span> 和 Markdown 提供拼写检查、语法检查等功能, 需要与 LTeX - Chinese support 、LTeX - English support 等语言扩展一起使用。</li></ul><h2 id="格式化代码">格式化代码</h2><p><strong>这部分仅适用于 ArchLinux!</strong> 其他系统仅作参考。</p><p>为了格式化代码，我们需要安装以下插件</p><pre class="line-numbers language-none"><code class="language-none">perl-log-log4perl perl-log-dispatch perl-namespace-autoclean \perl-specio perl-eval-closure perl-params-validationcompiler \perl-yaml-tiny perl-file-homedir perl-unicode-linebreak<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后才能成功格式化代码。</p><h1 id="zotero">Zotero</h1><p><strong>Zotero</strong> <a href="https://zh.wikipedia.org/wiki/Help:英語國際音標">/zoʊˈtɛroʊ/</a>是一款<a href="https://zh.wikipedia.org/wiki/自由及开放源代码软件">自由及开放源代码</a>的<a href="https://zh.wikipedia.org/wiki/文献管理软件">文献管理软件</a>，管理书目信息（如作者、标题、出版社、摘要、阅读笔记等）及相关材料（如<a href="https://zh.wikipedia.org/wiki/PDF">PDF</a>文件等)。其最著名的特性是作为浏览器插件、在线同步、与文档编辑软件如<a href="https://zh.wikipedia.org/wiki/Microsoft_Word">Microsoft Word</a>、<a href="https://zh.wikipedia.org/wiki/LibreOffice">LibreOffice</a>、<a href="https://zh.wikipedia.org/wiki/OpenOffice.org_Writer">OpenOffice.org Writer</a>、<a href="https://zh.wikipedia.org/wiki/NeoOffice">NeoOffice</a>等集成，可生成<a href="https://zh.wikipedia.org/w/index.php?title=文内引用&amp;action=edit&amp;redlink=1">文内引用</a>、生成页面脚注或文后的参考文献（bibliographies）。</p><figure><img src="/2020/04/07/my_academic_suite/202020200408002300.png" alt="Zotero"><figcaption aria-hidden="true">Zotero</figcaption></figure><p>Zotero 可以与浏览器集成实现自动抓取文献，如果你有下载权限还会自动下载pdf。</p><p><img src="/2020/04/07/my_academic_suite/202020200408004156.gif"></p><figure><img src="/2020/04/07/my_academic_suite/202020200408004255.png" alt="此处pdf 还未下载好"><figcaption aria-hidden="true">此处pdf 还未下载好</figcaption></figure><h2 id="zotero-插件">Zotero 插件</h2><p>zotero 最大的特点是可以使用各种各样的插件来满足你的需要，以下是我使用的一些插件。</p><p><img src="/2020/04/07/my_academic_suite/202020200408002518.png"></p><ul><li><a href="http://retorque.re/zotero-better-bibtex/">Better BibTeX</a> : 将 zotero 的文献导出为bib 文件。</li><li><a href="https://github.com/fei0810/markdownhere4zotero">Markdown Here</a>: 在 Zotero 中使用 Markdown 做笔记。</li><li><a href="https://github.com/bwiernik/zotero-shortdoi">Zotero DOI Manager</a> 为参考文献查找、检验doi。</li><li><a href="https://github.com/retorquere/zotero-report-customizer">Zotero Report Customizer</a> : 才装上，暂时没发现有什么用处</li><li><a href="https://github.com/ethanwillis/zotero-scihub">Zotero Scihub</a> 为有DOI 信息的文献自动从 Scihub下载pdf</li><li><a href="http://zotfile.com/">ZotFile</a> : zotero pdf文件管理器。</li></ul><p>zotero 也有 Word 插件，可以在Word 中插入参考文献，但是由于我不怎么使用word, 此处不再介绍。</p><h1 id="公式输入">公式输入</h1><p>如果需要将其他地方的公式输入到自己的 TeX 文件中，自己动手打一遍固然好，但是如果能够直接把别人的公式粘贴过来岂不美哉！ <a href="https://mathpix.com/">Mathpix</a> 就是这样一个工具，它可以将截图中的公式转换成 <span class="math inline">\(\LaTeX\)</span> 代码。省去手动敲代码的时间。下面是其官网的一个例子。</p><p><img src="/2020/04/07/my_academic_suite/snip_new_mac.png"></p><h1 id="用-git-进行版本管理">用 Git 进行版本管理</h1><p>由于 <span class="math inline">\(\LaTeX\)</span> 是纯文本文档，因此可以很方便的用git 进行版本管理。配合 git 还可以实现多人协作，批注修改等功能。在此不再赘述，git 教程可见 <a href="https://git-scm.com/book/zh/v2">Git Book</a> 。</p><p>但是，由于git 是以行为最小修改单位，而 <span class="math inline">\(\LaTeX\)</span> 的换行需要空一行，因此可以在写 tex文件时，每写一句话就换一行。这样通过git 可以很方便的看到每次修改了哪些地方。</p><p>当你需要给一个不会用git 的人看你相比于某次修改了什么内容时，可以使用 <a href="https://gitlab.com/git-latexdiff/git-latexdiff">git-latexdiff</a>, 它会产生一个包含修改的 <span class="math inline">\(\LaTeX\)</span> 文档，对其进行编译即可生成修改内容的pdf. 它本质上是对 git 和 <a href="https://github.com/ftilmann/latexdiff/">latexdiff</a> 的一个包装。</p><p>latexdiff 能够将两个文件进行比较，然后得到一个新的可编译的tex文件，编译之后可以在pdf中查看文章的改动。</p><p><img src="/2020/04/07/my_academic_suite/202020200408010014.png"></p><h1 id="latex-转-word"><span class="math inline">\(\LaTeX\)</span> 转 Word</h1><p>目前 <span class="math inline">\(\LaTeX\)</span> 转 word 主要有两种比较好的方式，但是都不完美，一种是使用 pandoc 转换，一个简单的教程见<a href="https://www.jianshu.com/p/dc62b915920e">怎么用Pandoc把Latex转换成MS Word文档</a> 优点是公式、表格都转换的比较好，缺点是参考文献部分会转换失败。也可以使用 Acrobat 将 生成的pdf 转换成 word, 这个各个方面都不错，就是公式转换的不好。两者可以互为补充。</p><h1 id="结语">结语</h1><p>本文到这里就结束了，如果你也有想要分享的技巧或者插件，可以在下方留言。后面预计会找一位使用Word写论文的大佬分享他的写作和管理参考文献的经验。</p><p>最后是私货时间，欢迎大家使用<a href="https://github.com/sukanka/LaTeX-SWUFE-Bachelor-Thesis">西财的 <span class="math inline">\(\LaTeX\)</span> 本科毕业论文模板</a>, 另外，我也想寻找几位同学接手模板的后续维护工作。</p>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文写作 </tag>
            
            <tag> 文献管理 </tag>
            
            <tag> LaTeX </tag>
            
            <tag> Zotero </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NFC刷公交、地铁、门禁</title>
      <link href="2018/11/06/nfc_shua_men_jin/"/>
      <url>2018/11/06/nfc_shua_men_jin/</url>
      
        <content type="html"><![CDATA[<p>前两天从锦江区坐公交回来,没有零钱,还是跟路人换零钱才回来的。之所以不办天府通是因为我之前掉过好几次公交卡了，不敢再办了，而且公交坐的不多，基本都是地铁，而地铁可以用微信。之后又在网上看到天府通开始支持NFC刷卡了。遂有了开卡的想法。还顺便搞了NFC模拟校园卡刷门禁，从此出宿舍不用带卡！ <a id="more"></a> # 前期准备</p><ol type="1"><li><p>一部有NFC功能的Android 手机；</p></li><li><p>电信卡或者移动卡。必须是NFC-sim 卡，不是的可以去营业厅换，有的收钱，有的不收，不超过20块。</p></li></ol><p>#电信用户 电信用户下载天府通手机app,根据提示注册应该就可以了。（PS:我不是电信用户，所以不太清楚，捂脸）</p><h1 id="移动用户">移动用户</h1><p>移动用户无法使用天府通app,需要使用移动的和包支付，没有注册过和包支付的新用户可以先参加充10元得20的活动</p><ol type="1"><li><p>微信搜索公众号 和包， 关注第一个， 中国移动和包<img src="/2018/11/06/nfc_shua_men_jin/5C1541517684715.png" alt="1541517684715"></p></li><li><p>选择“热门活动”， 点击“领10元话费”<img src="/2018/11/06/nfc_shua_men_jin/5C1541517667475.png" alt="1541517667475"></p></li><li><p>输入手机号和验证码领优惠</p><figure><img src="/2018/11/06/nfc_shua_men_jin/5C1541517629872.png" alt="1541517629872"><figcaption aria-hidden="true">1541517629872</figcaption></figure></li><li><p>下载和包支付，注册和包</p></li><li><p>绑定银行卡或者信用卡，</p></li></ol><figure><img src="/2018/11/06/nfc_shua_men_jin/5C1541517815595.png" alt="1541517815595"><figcaption aria-hidden="true">1541517815595</figcaption></figure><ol start="6" type="1"><li>点击首页的充话费，金额自定义输入20，如果领取成功的话就是10元充20话费。</li></ol><h2 id="nfc天府通">NFC天府通</h2><h3 id="android-7.1及之前">Android 7.1及之前</h3><p>如果你是Android 7.1及以前的操作系统（4.4~7.1），那么可以直接在<strong>“生活-我的卡券包-NFC卡”</strong>下面查看，app会提示空中开卡，确认就是，之后选择<strong>添加新卡</strong></p><figure><img src="/2018/11/06/nfc_shua_men_jin/5C1541518395813.png" alt="1541518395813"><figcaption aria-hidden="true">1541518395813</figcaption></figure><p>选择<strong>公交卡</strong> ，然后选择<strong>成都移动天府通</strong> 直接下载，然后开卡，开卡是不收开卡费的</p><figure><img src="/2018/11/06/nfc_shua_men_jin/5C1541518546855.png" alt="1541518546855"><figcaption aria-hidden="true">1541518546855</figcaption></figure><p>此后就可以用手机NFC刷公交地铁了，手机关机也可以刷（我还没试过）。</p><h3 id="android-8.0-及8.1">Android 8.0 及8.1</h3><p>最简单的方法，去移动营业厅找一个android 7.1及以前版本的带NFC的手机，插卡，开通天府通，取卡，把卡插回自己手机，修复天府通，一气呵成。</p><p>其实只需要找一个8.0以前的支持NFC的手机就可以了，把卡插上去，按照上面的步骤开卡，再把卡换回去，再在和包里面下载一次公交卡就可以了。</p><p>有的8.0手机还有个问题，比如和包获取不到NFC权限，那么我们需要<strong>手动授权和包</strong> (<strong>需要Root权限</strong>） ，我用的是<strong>OnePlus NFC</strong> (因为我用的op3)<img src="/2018/11/06/nfc_shua_men_jin/5C1541519313057.png" alt="1541519313057"></p><p>授权后发现和包支付的权限多了一个其他权限</p><figure><img src="/2018/11/06/nfc_shua_men_jin/5C1541519383919.png" alt="1541519383919"><figcaption aria-hidden="true">1541519383919</figcaption></figure><figure><img src="/2018/11/06/nfc_shua_men_jin/5C1541519397375.png" alt="1541519397375"><figcaption aria-hidden="true">1541519397375</figcaption></figure><p>之后进入和包正常操作就可以了。如果你没有Android8.0 以前的支持NFC的手机，可以看看https://www.coolapk.com/feed/8535898 。我根据那个教程没有成功，最后还是换手机搞定的。</p><h1 id="nfc-模拟校园卡刷门禁">NFC 模拟校园卡刷门禁</h1><p><strong>Warning： 不建议使用此功能来薅社会主义羊毛!</strong> 需要ROOT 权限</p><p>使用switch NFC 或者其他软件,读取校园卡,然后卡模拟</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日常生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Jupyterlab 上使用Julia</title>
      <link href="2018/08/20/about_julia/"/>
      <url>2018/08/20/about_julia/</url>
      
        <content type="html"><![CDATA[<p>昨天偶然看见了Julia 的一篇介绍,介绍中有一段话使我开始对Julia 感兴趣起来 &gt; 一群拥有各种语言丰富编程经验的Matlab高级用户，对现有的科学计算编程工具感到不满——这些软件对自己专长的领域表现得非常棒，但在其它领域却非常糟糕。他们想要的是一个开源的软件，它要像C语言一般快速而有拥有如同Ruby的动态性；要具有Lisp般真正的同像性而又有Matlab般熟悉的数学记号；要像Python般通用、像R般在统计分析上得心应手、像Perl般自然地处理字符串、像Matlab般具有强大的线性代数运算能力、像shell般胶水语言的能力，易于学习而又不让真正的黑客感到无聊；还有，它应该是交互式的，同时又是编译型的…… <a id="more"></a> 2018-11-10 更新: 增加Julia 安装PyCall而不自动装Miniconda. bilibili 有个讲julia 的<a href="https://www.bilibili.com/video/av28178443/">视频</a>讲得挺好的,可惜没出第二期.</p><p>Julia 的快速、通用、还有强大的线性代数运算能力，以及熟悉的数学符号 吸引了我. （<del>其实我以前只接触过 Matlab, Python, 还有C++, 每个还都只是半吊子</del>）</p><p>因此我马上就去下载了Julia 的安装软件(最新的1.0.0稳定版），安装完毕之后当然是要让我最常用的Jupyter 支持Julia了.于是谷歌之，还发现了Jupyter名字的来源: Julia, Python, R</p><blockquote><p>While Jupyter's roots are in Python (it evolved from IPython Notebooks), it is now multi-lingual. The name itself comes from three languages: Ju(lia) + Py(thon) + (e)R.</p></blockquote><p>然后找到了<a href="https://github.com/JuliaLang/IJulia.jl">IJulia</a>, 根据说明文档来一步步安装Ijulia. 由于我已经安装了Anaconda, 自然是不想再多装一个jupyter.因此我的步骤是:</p><ol type="1"><li>打开 anaconda prompt, 输入 <code>where jupyter</code> 查询下我的jupyter 安装在哪了，得到<code>C:\ProgramData\Anaconda3\Scripts\jupyter.exe</code></li><li>复制得到的路径，先粘贴到记事本备用，将<code>\</code>改为<code>\\</code>，得到`<code>C:\\ProgramData\\Anaconda3\\Scripts\\jupyter.exe</code>（<del>我用的是notepad++</del>）</li><li>打开 Julia,输入以下代码</li></ol><pre class="line-numbers language-Julia" data-language="Julia"><code class="language-Julia">import Pkg #Julia 下的包管理器，类似于python的pipENV[&quot;JUPYTER&quot;]&#x3D;&quot;C:\\ProgramData\\Anaconda3\\Scripts\\jupyter&quot; # 刚刚得到的jupyter 路径，注意是\\,注意没有.exe# 如果你将jupyter 加入到了系统路径，那么输入 ENV[&quot;JUPYTER&quot;]&#x3D;&quot;jupyter&quot; 也可以Pkg.add(&quot;IJulia&quot;)Pkg.build(&quot;IJulia&quot;)using IJulianotebook()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我按照上面的步骤弄好之后，进入到了jupyter 界面，新建一个Julia文档， 然后输入一个简单的计算<code>1+1</code> 结果一直没有反馈。当然，用jupyter lab 也不行，即使是kernel idle 状态也不能。</p><figure><img src="/2018/08/20/about_julia/ju.png" alt="jupyter notebook"><figcaption aria-hidden="true">jupyter notebook</figcaption></figure><p>本着不服输的精神，我又开始疯狂搜索相关的提问，终于在Ijulia 的 issue里面找到了解决方案，原链接在<a href="https://github.com/JuliaLang/IJulia.jl/issues/693">这里</a></p><p>具体的做法是：</p><pre class="line-numbers language-Julia" data-language="Julia"><code class="language-Julia">julia&gt; import Pkg(v1.0) pkg&gt; add IJuliajulia&gt; ENV[&quot;IJULIA_DEBUG&quot;] &#x3D; true (v1.0) pkg&gt; dev IJulia (v1.0) pkg&gt; build IJulia<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，在julia 的console 里面按<code>]</code>即可切换到 <code>(v1.0) pkg&gt;</code>,再按backspace 键即可切换回 <code>julia&gt;</code></p><p>最后输入</p><pre class="line-numbers language-Julia" data-language="Julia"><code class="language-Julia">using IJulianotebook()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>即可， 此后就可以通过powershell 直接输入 <code>jupyter lab</code> 打开jupyterlab 了, 并且可以正常使用julia 的功能。</p><figure><img src="/2018/08/20/about_julia/ju2.png" alt="julia in jupyterlab"><figcaption aria-hidden="true">julia in jupyterlab</figcaption></figure><p>Julia 还可以调用Python, 这可以通过PyCall 库来实现,如果直接</p><pre class="line-numbers language-Julia" data-language="Julia"><code class="language-Julia">using PkgPkg.add(&quot;PyCall&quot;)Pkg.build(&quot;PyCall&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>会安装一个MiniConda, 但是我已经有Anaconda 了,不需要miniconda</p><p>因此只需要事先指定python的路径就好了,查询python 路径得方法和查询jupyter 得方法是一样的.</p><pre class="line-numbers language-Julia" data-language="Julia"><code class="language-Julia">ENV[&quot;PYTHON&quot;]&#x3D;&quot;C:\\ProgramData\\Anaconda3\\python&quot;using PkgPkg.add(&quot;PyCall&quot;)Pkg.build(&quot;PyCall&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这样就不会安装miniconda了.</p><p>最后，希望我能 <del>学好Julia</del> 坚持学得久一点</p>]]></content>
      
      
      <categories>
          
          <category> Julia </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IJulia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fisher信息量学习笔记</title>
      <link href="2018/04/20/fisher_and_mle/"/>
      <url>2018/04/20/fisher_and_mle/</url>
      
        <content type="html"><![CDATA[<p>本文记录了Fisher 信息量的两种等价计算方式. <a id="more"></a></p><h1 id="说明">说明</h1><p>本文积分以<span class="math inline">\(\int\)</span>表示<span class="math inline">\(\int_{-\infty}^{+\infty}\)</span> (主要原因是懒,请谅解.)</p><h1 id="fisher-信息量">Fisher 信息量</h1><h2 id="定义">定义</h2><p>设总体概率密度函数<span class="math inline">\(p(x;\theta),\theta \in \mathbb{\Theta}\)</span>满足下列条件:</p><ol type="1"><li>参数空间<span class="math inline">\(\Theta\)</span>是直线上的一个开区间;</li><li>支撑<span class="math inline">\(S=\{x|p(x;\theta)\}\)</span>与<span class="math inline">\(\theta\)</span>无关;</li><li>导数<span class="math inline">\(\dfrac{\partial }{\partial \theta}p(x;\theta)\)</span>对一切<span class="math inline">\(\theta \in \Theta\)</span>都存在;</li><li>对<span class="math inline">\(p(x;\theta)\)</span>,积分与微分可以交换顺序,即:</li></ol><p><span class="math display">\[\dfrac{\partial}{\partial \theta}\int p(x;\theta)\,\mathrm{d}x=\int \dfrac{\partial}{\partial \theta}p(x;\theta)\,\mathrm{d}x\]</span></p><ol start="5" type="1"><li>期望<span class="math inline">\(E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]^2\)</span>存在.</li></ol><p>则称</p><p><span class="math display">\[I(\theta)=E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]^2\]</span></p><p>为总体分布的Fisher 信息量.</p><h2 id="另一种表示法">另一种表示法</h2><p>Fisher信息量<span class="math inline">\(I(\theta)\)</span>也可以表示为</p><p><span class="math display">\[I(\theta)=-E\left[\dfrac{\partial ^2}{\partial \theta ^2}\ln p(x;\theta)\right]\]</span></p><p>有时候这种计算方法更加方便</p><p><strong>证明</strong></p><p>首先,有: <span class="math display">\[\begin{equation}E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]=0\end{equation}\]</span></p><p>这是因为:</p><p><span class="math display">\[\begin{aligned}&amp;E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]\\ =&amp;\int \dfrac{\partial \ln p(x;\theta)}{\partial \theta} p(x;\theta)\, \mathrm{d}x \\=&amp;\int \dfrac{1}{p(x;\theta)}\dfrac{\partial p(x;\theta)}{\partial \theta} p(x;\theta)\, \mathrm{d}x\\=&amp;\int \dfrac{\partial p(x;\theta)}{\partial \theta} \, \mathrm{d}x\\=&amp;\dfrac{\partial }{\partial \theta}\int p(x;\theta)\, \mathrm{d}x\\=&amp;0\end{aligned}\]</span></p><p>然后,有 <span class="math display">\[\begin{equation}\dfrac{\partial }{\partial \theta}E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]=0\end{equation}\]</span> 又因为: <span class="math display">\[\dfrac{\partial \ln p(x;\theta)}{\partial \theta}=\frac{1}{p(x;\theta)}\frac{\partial p(x;\theta)}{\partial \theta}\]</span> 所以 <span class="math display">\[\begin{equation}\frac{\partial p(x;\theta)}{\partial \theta}=p(x;\theta) \dfrac{\partial \ln p(x;\theta)}{\partial \theta}\end{equation}\]</span> 故,有:</p><p><span class="math display">\[\begin{aligned}&amp;\dfrac{\partial }{\partial \theta}E\left[\dfrac{\partial}{\partial \theta}\ln p(x;\theta)\right]\\=&amp; \dfrac{\partial }{\partial \theta}\int \dfrac{\partial \ln p(x;\theta)}{\partial \theta} p(x;\theta) \, \mathrm{d}x\\=&amp; \int \dfrac{\partial }{\partial \theta}\left(\dfrac{\partial \ln p(x;\theta)}{\partial \theta} p(x;\theta)\right) \, \mathrm{d}x\\=&amp; \int \left(\dfrac{\partial p(x;\theta) }{\partial \theta}\dfrac{\partial \ln p(x;\theta)}{\partial \theta}+ p(x;\theta)\dfrac{\partial^2 \ln p(x;\theta)}{\partial \theta^2}\right)  \, \mathrm{d}x\\=&amp; \int p(x;\theta) \left(\dfrac{\partial \ln p(x;\theta)}{\partial \theta}\right)^2\, \mathrm{d}x %+ \int p(x;\theta) \dfrac{\partial^2 \ln p(x;\theta)}{\partial \theta^2}\,\mathrm{d}x\\=&amp;E\left[\left(\dfrac{\partial \ln p(x;\theta)}{\partial \theta}\right)^2\right]+E\left[\dfrac{\partial^2 \ln p(x;\theta)}{\partial \theta^2}\right]\\=&amp;0\end{aligned}\]</span> 所以 <span class="math display">\[E\left[\left(\dfrac{\partial \ln p(x;\theta)}{\partial \theta}\right)^2\right]=-E\left[\dfrac{\partial^2 \ln p(x;\theta)}{\partial \theta^2}\right]\]</span> 即: <span class="math display">\[I(\theta)=-E\left[\dfrac{\partial^2 \ln p(x;\theta)}{\partial \theta^2}\right]\]</span></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数理统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一个LINGO程序</title>
      <link href="2018/04/19/my_first_lingo_program/"/>
      <url>2018/04/19/my_first_lingo_program/</url>
      
        <content type="html"><![CDATA[<p>背景:班主任下周要开一个一对一见面会,要根据同学们的时间安排先后顺序. <a id="more"></a> # 收集数据</p><ul><li>首先建一个excel表格,将93个候选时间排成一行,38个同学按学号排成一列,得到一个38$$93的矩阵.</li><li>将表格共享,每个同学在自己有空的时间填1,无空的时间填0.</li><li>回收表格.将得到的38$$93矩阵在Excel中命名为<code>data</code></li></ul><h1 id="建立模型">建立模型</h1><p>本模型只有约束条件,无目标函数.最终的安排也为一个38$$93矩阵</p><ul><li>每个同学只去一次,也必须去一次.</li><li>每个时间最多只有一个同学去.</li><li>每个同学只在自己有空的时间去.</li><li>去或不去是0,1变量,1表示去,0表示不去.</li><li>(目标函数)期望同学们尽早去见面会.</li></ul><h1 id="数学化表达">数学化表达</h1><h2 id="符号约定">符号约定</h2><ul><li><span class="math inline">\(\mathbf{C}=(c\_{ij})\_{38\times93}\)</span> 表示收集到的数据,其中<span class="math inline">\(c\_{ij}\in \{0,1\}\)</span></li><li><span class="math inline">\(\mathbf{X}=(x\_{ij})\_{38\times93}\)</span> 表示最终的安排,其中<span class="math inline">\(x\_{ij}\in \{0,1\}\)</span></li></ul><h2 id="约束条件">约束条件</h2><ul><li><p>每个人只去一次,也必须去一次:</p><p><span class="math display">\[ \sum\_{j=1}^{93}x\_{ij}=1 \]</span></p></li><li><p>每个时间最多只有一个同学去: <span class="math display">\[ \sum\_{i=1}^{38}x\_{ij}\leqslant 1 \]</span></p></li><li><p>每个同学只在自己有空的时间去: <span class="math display">\[ x\_{ij}\leqslant c\_{ij} \]</span></p></li><li><p>目标函数,尽量早去 <span class="math display">\[ \min \sum\_{i,j}x\_{ij}*j \]</span></p></li></ul><h2 id="一些说明">一些说明</h2><ul><li>LINGO不区分大小写</li><li>LINGO 不区分&lt;和&lt;=,不区分&gt;和&gt;=,都视为包含等号.</li><li>我事前把矩阵<span class="math inline">\(\mathbf{C}\)</span>对应的区域在EXCEL中取名为<code>data</code></li><li>同时将另一个空白的38行,93列的区域命名为<code>data2</code> ,用于导出结果<span class="math inline">\(\mathbf{X}\)</span></li></ul><h2 id="lingo-代码">LINGO 代码</h2><pre class="line-numbers language-LINGO" data-language="LINGO"><code class="language-LINGO">!模型:见面会安排;sets:time&#x2F;1..93&#x2F;;student&#x2F;1..38&#x2F;;!Student 为行,time为列;timetable(student,time):c,x;endsetsdata:!导入数据将data的数据传输给C;c&#x3D;@ole(&#39;D:\Users\ASUS\Desktop\data.xlsx&#39;,&#39;data&#39;);!输出结果输出X到data2;@ole(&#39;D:\Users\ASUS\Desktop\data.xlsx&#39;,&#39;data2&#39;)&#x3D;x;enddata!期望尽早安排完;min&#x3D; @sum(timetable(i,j):j*x(i,j));!只在有空的时间去;@for(timetable(i,j):x(i,j)&lt;&#x3D; c(i,j));!每个人只去一次;@for(student(i):@sum(time(j):x(i,j))&#x3D;1);!每个时间最多有一个人;@for(time(j):@sum(student(i):x(i,j))&lt;&#x3D;1);!去或不去为0,1变量;@for(timetable(i,j):@bin(x(i,j)));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> LINGO学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LINGO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教育优惠</title>
      <link href="2018/03/07/students_resources/"/>
      <url>2018/03/07/students_resources/</url>
      
        <content type="html"><![CDATA[<p>当你成为大学生，拿到@edu.cn邮箱或者拿到学生证的时候，你就能享受到许多的教育优惠。当然高校老师也能享受很多优惠。 <a id="more"></a> <img src="/2018/03/07/students_resources/Student-resources-min.png" alt="cover"></p><h1 id="说明">说明</h1><p>本文转自 https://github.com/ivmm/Student-resources 并基于其进行了修改。 # 注意点 * 一切官方的助学资金等，请咨询学校领导、辅导员、班主任，请勿向陌生账户转账！ * 校园借贷风险极高，请谨慎尝试。 * 对需要出示身份证、手持身份证的资源请保持谨慎。 * 保管好自己的学生证、身份证，不要随意丢弃。</p><h1 id="前言">前言</h1><p>高考已经过去，你们也将迎来不同于以往的大学生活，大学或许对之前的12年管制式生活来说是解放了，不过你也知道的，解放后面是什么，脱离了父母和老师的管束以及适当的财务自主，你的生活并不会就无比精彩。</p><p>让自己的大学生活过得积极而精彩：</p><ol type="1"><li>多参加校级、省级、国家级的比赛，你的比较对象就不会是同班同学了而是同龄人，视野更大。</li><li>多上台讲讲，第一次第二次第三次可能会小心脏砰砰跳，后面真的就见怪不怪了，会自信很多。</li><li>不要再默默无闻了，让老师们注意到你，都大学了上课还不敢举个手？</li><li>做点义工，为社会做点贡献，工作了就真没时间了。</li><li>做人做事记得留个证据，留个发票，留个单子。</li><li>多向长辈们问候问候，偶尔放个长假了就去看看。</li></ol><p>那么就期待着9月开启你的上当受骗之旅吧，不过可能在6月买电脑买手机的时候就已经上当受骗。（逃～）</p><h1 id="学生包">学生包</h1><p>各类学生优惠项目经过许多年的发展，很多学生包已经不单单只通过 edu 邮箱验证身份了，而且使用 <span class="citation" data-cites="edu.cn">@edu.cn</span> 反而会降低申请成功率。 建议使用学生证、入学通知书等有学院官方标志和日期的工具来证明自己的身份。</p><ul><li><strong><a href="https://education.github.com/pack">Github 学生包</a></strong>，高质量的开发工具集合，并提供 DIgitalocean 的 50美元代金券，免费域名一枚。</li><li><strong><a href="https://azure.microsoft.com/zh-cn/free/students/">Microsoft Azure 学生包</a></strong>，免费使用微软的开发软件，包括 Windows Server 系统，以及 Azure 学生订阅。</li><li><strong><a href="https://aws.amazon.com/cn/education/awseducate/">AWS 学生包</a></strong>，亚马逊云计算的学生包，可以获得至少 $40 的优惠和教育培训。</li><li><strong><a href="http://www.autodesk.com.cn/education/home">Autodesk 学生包</a></strong>，旗下 AutoCAD , 3DMAX , Maya 等软件，其（教育版）免费试用期可延长至三年。此优惠不需要学生证或者@edu.cn邮箱。</li><li><strong><a href="https://www.jetbrains.com/student/">JetBrains 学生包</a></strong>，免费使用各类开发工具和集成工具。</li><li><strong><a href="https://edu.google.com/products/productivity-tools/">G Suite for Education</a></strong>，为教育用户提供的谷歌生产力工具套件（大陆不在申请区之内）。</li><li><strong><a href="http://www.lindo.com/index.php?option=com_content&amp;view=article&amp;id=120&amp;Itemid=45">LINGO Educational Research License</a></strong>, LINGO 教育授权，著名线性与非线性求解器，求解优化模型的最佳选择，数学建模必备。</li></ul><h1 id="教育优惠">教育优惠</h1><ul><li><strong><a href="http://shop.edu.cn/">赛尔校园先锋</a></strong>，以绝对优惠的价格获得 Adobe 软件、Win、Office 正版授权。</li><li><strong><a href="https://products.office.com/en-us/student?tab=students">Office in Education</a></strong>，微软家提供的免费 Office 365 教育优惠，中国大多数学校无缘申请。</li><li><strong><a href="https://promotion.aliyun.com/ntms/campus2017.html">阿里云 云翼计划</a></strong>，118元/年，阿里云ECS+OSS+域名+机器学习API+Clouder认证。</li><li><strong><a href="https://www.qcloud.com/act/campus">腾讯云+校园计划</a></strong>，10元一个月的云服务器租用，免费域名、云储存，需要抢购。</li><li><strong><a href="https://www.mtyun.com/activity-school">美团云 云帆校园</a></strong>，8.8元，1C1G1M + 50数据盘。 <del><ul><li><strong><a href="https://www.jcloud.com/activity/leapCloud">京东云 跃云计划</a></strong>，8.8元，1C2G1M + 30数据盘，年付送 com 域名。</li></ul></del></li><li><strong><a href="http://www.apple.com/cn-k12/shop">苹果教育商店</a></strong>，苹果设备优惠，Music和 Pro APP 优惠，暑假还会有学生优惠大促销。</li><li><strong><a href="https://www.microsoftstore.com.cn/student?Icid=StoreNavi_EDU">微软教育商店</a></strong>，9折购买微软旗下的各种硬件设备。</li><li><strong><a href="http://www.onthehub.com/">OnTheHub 教育商店</a></strong>，PD 和 VMware 的虚拟机优惠，以及更多软件优惠。</li><li><strong><a href="https://www.siteground.com/student-hosting.htm">SiteGroud 学生计划</a></strong>，WP 官方推荐的主机托管商提供 $1.99/月 高性能 CP 托管。</li><li><strong><a href="https://www.spotify.com/hk-zh/student/">Spotify 学生优惠</a></strong>，Spotify Premium学生订阅半价优惠。</li><li><strong><a href="https://pantheon.io/edu">Pantheon 学生版</a></strong>，专业高性能网站托管的学生优惠。</li><li><strong><a href="http://coupon.dji.com/cn/edu">大疆教育优惠</a></strong>，大疆产品的教育折扣。</li><li><strong><a href="http://cn.mikecrm.com/BrUWPMy">幕布笔记教育优惠</a></strong>，幕布面向学生、公益组织和教育机构推出的专属优惠措施，高级版八折优惠。</li><li><strong>[SPSS]，(https://www.ibm.com/us-en/marketplace/spss-statistics-gradpack/details)</strong>实用统计软件,最新版premium 99美元一年。</li></ul><h1 id="实用干货">实用干货</h1><ul><li><strong><a href="https://creativemarket.com/free-goods">CreativeMarket Free Goods</a></strong>，每周免费六款设计资源，电商、前端必备。</li><li><strong><a href="https://www.axure.com/edu">Axure</a></strong>， 原型设计工具，产品、运营必备，学生、教师免费。</li><li><strong><a href="http://education.minecraft.net/get-started">Minecraft</a></strong>， 我的世界教育免费版 ，仅支持邮箱。</li><li><strong><a href="http://www.wolfram.com/mathematica/pricing/students-individuals.php">Mathematica</a></strong>， 现代科学计算软件，3折优惠 50刀，添加购物车后显示。</li><li><strong><a href="https://www.tableau.com/zh-cn/academic">Tableau</a></strong>， 数据可视化分析软件，对学生、教室以及教育组织提供免费使用。（只能使用学生证申请）</li></ul><h1 id="推荐软件">推荐软件</h1><ul><li><strong><a href="https://cloudconvert.com/">CloudConvert</a></strong>，转码神器，格式齐全的在线转码利器。</li><li><strong><a href="https://smallpdf.com/">Smallpdf</a></strong>，专业文档转PDF，PDF转文档神器。</li></ul><h1 id="相关推荐">相关推荐</h1><p><strong>买电脑：</strong>《<a href="http://www.toutiao.com/i6430265970773721602/">或许是最详细的学生购买笔记本购买参考</a>》</p><p><strong>如何科学提问：</strong>《<a href="http://git.oschina.net/mifar/How-To-Ask-Questions-The-Smart-Way">提问的智慧</a>》</p><p><strong>搜索引擎：</strong> 为了你的身体健康、事业有成，请尽量<strong>减少使用百度</strong>的频率。</p><p><strong>PPT 制作：</strong>《<a href="https://www.mf8.biz/ppt-tips/">放 PPT 之前，请你注意这一些！</a>》 作者博客：https://www.mf8.biz/</p>]]></content>
      
      
      <categories>
          
          <category> 优惠信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学生 </tag>
            
            <tag> 教师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idm注册机</title>
      <link href="2018/02/28/idm/"/>
      <url>2018/02/28/idm/</url>
      
        <content type="html"><![CDATA[<p>Internet Download Manager（简称IDM）是一个用于Windows系统的下载管理器. <a id="more"></a> IDM 是共享软件，免费试用期为30天，但是每月均有一段时间优惠。IDM可以让用户自动下载某些类型的文件，它可将文件划分为多个下载点以更快下载，并列出最近的下载，方便访问文件。相对于其它下载管理器，它具有独特的动态档案分区技术。<br>它的出色之处在于，能分析下载地址中的实际地址，但若地址无效时则跳换成失效网页，当地址重新有效而无法恢复成原来的地址。<br>它的不足之处在于，必须设置分段的临时文件存放的磁盘位置，下载完成后再自动合并成一个完整的文件，同时删除临时文件（这种做法不同于其他下载软件预先分配一整块磁盘空间）。所以，下载的如果是机密文件，就容易被数据恢复软件恢复，造成安全隐患。</p><p>IDM可被调用于Internet Explorer、Safari、Google Chrome、Opera、Netscape Navigator以及Mozilla Firefox（火狐）浏览器中。 具体破解方法见落尘之木的<a href="https://www.luochenzhimu.com/archives/1476.html">博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 下载器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Winrar 去广告</title>
      <link href="2018/02/28/winrar/"/>
      <url>2018/02/28/winrar/</url>
      
        <content type="html"><![CDATA[<p>Winrar 注册码 <a id="more"></a> 18年7月更新: 现在国外官网下载的简体中文版也有广告了,最新版是5.6,现在可以去以下链接下载,注册后无广告. &gt; 简体中文64位：http://www.win-rar.com/fileadmin/winrar-versions/sc20170830/wrr/winrar-x64-550sc.exe 简体中文32位：http://www.win-rar.com/fileadmin/winrar-versions/sc20170830/wrr/wrar550sc.exe 这连接下的无广告，域名是官网，应该没问题。</p><p>作者：第92號元素 链接：https://www.zhihu.com/question/56160762/answer/376992753 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h1 id="软件下载">软件下载</h1><p>软件下载请去国外官网下载最新版的 Chinese Simplified (32 bit, 64 bit)。 64位电脑建议选择64位。 <a href="https://www.rarlab.com/">国外官网</a> 不要去下载国内的版本，国内版本即使激活了也会弹出广告。 # 软件注册 复制粘贴下列代码（建议不要使用Windows记事本），保存为 rarreg.key 文件，然后将该文件复制到 <code>C:\Users\你的用户\AppData\Roaming\WinRAR</code>，重启 WinRAR就可以了,以后WinRAR就没有广告了，并且<em>关于</em>里面显示<em>已注册</em>。 <pre class="line-numbers language-none"><code class="language-none">RAR registration dataVIPUnlimited Company LicenseUID&#x3D;5b717c9f9202afe6fcd06412212250fcd07556c26853de15f5fff458cf288d43270e566986274e45035896bc8be51860fce6cb5ffde62890079861be576387177131ced835ed65cc743d9777f2ea71a8e32c7e593cf66794343565b41bcf56929486b8bcdac33d50ecf7739960f2bf6c894e40fd71e8cda62bbe8ed82dfd9e211e40336def4143660924152fdfc9a485b231f8beb11acb6786bb22573c061826b15b9ccaf04398b3c8606c823c6f2fe22da60740bbd11552e796c007d8f4993e7f651735357995<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <img src="/2018/02/28/winrar/rar.png" alt="路径"> <img src="/2018/02/28/winrar/reg.png" alt="注册"></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注册码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MathType 注册码</title>
      <link href="2018/02/28/mathtype/"/>
      <url>2018/02/28/mathtype/</url>
      
        <content type="html"><![CDATA[<p>MathType 注册码 <a id="more"></a> 2018年11月10日更新: mathtype7.0及以后按年收费,不再推荐使用mathtype, 推荐国产软件<a href="http://www.amyxun.com/">axmath</a>免费版本和注册版本,免费版本仅仅是功能限制,注册版一次性付费,价格36元. 2018年7月17日更新:以下注册码仅适用于6.9及以下版本,不适用于最新的7.0版本 --- # 软件下载 下载软件建议去国外<a href="http://www.mathtype.com/en/">官网</a> 选择<code>Free Downloads</code> 下的 <code>MathType 30-day</code>,然后下载、安装，此处下载的是最新的版本，现在应该为6.9d. 不建议去国内网站下载中文版，原因主要有： - 版本落后，国内中文版最新版本为6.9b,其对office 2016的支持不好。 - 锁激活，安装完成后只能试用，没办法激活。 再补充一个国内汉化的版本，该版本基于6.9d版本仅进行了汉化。同时感谢<strong><a href="https://www.luochenzhimu.com/">落尘之木</a> </strong>的汉化工作！ 博客原文见<a href="https://www.luochenzhimu.com/archives/2277.html">此处</a> # 注册码 以下任意一个都可以使用，如果不能，换一个试试。 除了注册码之外的信息都可以随便输入。 <pre class="line-numbers language-none"><code class="language-none">MTWE697-002030-M5SKHMTWE697-002317-ET4R5MTWE697-006448-NDWFGMTWE697-008590-A2A9BMTWE697-001678-F7DIJMTWE697-006773-P7NJLMTWE697-006486-TW9FDMTWE697-003843-DRAPWMTWE697-001498-A8RLWMTWE697-000655-7KVCUMTWE697-007142-XVIX9MTWE697-011712-K6XCVMTWE697-010786-P9S03MTWE697-004319-A7UFLMTWE697-006238-A7MD6MTWE697-002912-7KPQ8MTWE697-010201-A5OFQMTWE697-001811-A6SVRMTWE697-004033-P8UTRMTWE697-003857-PDR95MTWE691-011016-c8xn5MTWE691-011772-stfe9MTWE691-011876-qf14dMTWE691-011704-e3fyrMTWE691-011152-33007<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注册码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mathematica 激活指北</title>
      <link href="2018/02/10/mma/"/>
      <url>2018/02/10/mma/</url>
      
        <content type="html"><![CDATA[<p>Wolfram Mathematica （简称：Mathematica）是一款符号计算软件，有时候也被称为计算机代数系统，广泛使用于科学、工程、数学、计算等领域。本文主要介绍如何获取正版和激活盗版 Mathematica. <a id="more"></a> # 简介 <strong>本文根据<a href="https://tiebamma.github.io/InstallTutorial/">Mathematica激活指南</a>修改而来</strong></p><p>Mathematica 是由英国科学家斯蒂芬·沃尔夫勒姆提出构想，并且由他所领导的沃尔夫勒姆研究公司（位于美国伊利诺伊州香槟市）开发的一款广泛使用的科学计算软件。它拥有强大的数值计算和符号运算能力，是目前为止使用最广泛的数学软件之一。 # 获取正版 Mathematica 用盗版是迫不得已，有能力的还是去支持一下正版吧，需要 VISA 或者 MasterCard 卡。购买链接在<a href="https://www.wolfram.com/mathematica/pricing/">这里</a> 根据自己所在的行业选择不同的版本。另外 Wolfram 公司为学生和老师提供教育版软件。其中学生版低至3折，售价 $50。 虽然点进 Students 栏，显示的是标准版 $155, 但是点击 BUY NOW 之后，你会发现售价已经变成 $50 了。 <img src="/2018/02/10/mma/mma1.png" alt="mma"> <img src="/2018/02/10/mma/mma2.png" alt="mma2"> 此处的 Mathematica 有中文版和英文版和日语版，日英文版有 Windows, Macintosh, Linux 3个版本，中文版仅有 Windows 和 Macintosh 版本。</p><h1 id="激活盗版-mathematica">激活盗版 Mathematica</h1><p>再次呼吁，用盗版只是迫不得已，有能力还是请支持正版！ ## 软件下载 本博客只提供最新版（11.2.0）下载。 ### 官方下载地址（需要科学上网） 此处只有仅提供中文版<br>中文 Windows 版地址: <a href="http://dl.wolframcdn.com/0036F4/Mathematica/11.2.0.0/Mathematica_11.2.0_Chinese_WIN.zip?4ae6ee529e4e0d5967853f9864b23dfec2504d5a385cf83e11359956ad95cb469f36b126eb76be9628d7f9c232f442a8b647e3794cceabc0473bcae71c7451a0f9d3cfc9886343cab97a766a6062b954a849dd790839034e6defe3fcc31a116cde8ef402f6728196ec9d4cecaced8a.zip">Mathematica</a><br>md5: 282fe2e587c7e48414cc8cdd79e8647d 中文 Mac 版地址: <a href="http://dl.wolframcdn.com/0036F4/Mathematica/11.2.0.0/Mathematica_11.2.0_Chinese_MAC.dmg?4ae6ee529e4e0d5967853f9864b23dfec2504d5a385cf83e11359956ad95cb441d92b9d94ba4820c0596a0eb6f43ddb278f28fea3385dbfb6d71d8084246ba8c6225f15588f8b3744cadb1e9c290f7146e3fe993981d7e2c41d63781f4f6fb18d2763ab3759c603487db69d60c2af0.dmg">Mathematica</a><br>md5: b55381e5eb58a81bcf8f5e5ddf991b69 <img src="/2018/02/10/mma/mmacn.png" alt="mmacn"> <img src="/2018/02/10/mma/mmamac.png" alt="mmamac"></p><h3 id="百度网盘">百度网盘</h3><p>英文 Mac, Linux, Win 版：<a href="https://pan.baidu.com/s/1eUfG6em">百度网盘</a><br>中文 Windows, Mac 版: <a href="https://pan.baidu.com/s/1o9DFSim">百度网盘</a><br><strong>注意，英文版也是可以调出中文提示的，但是它没有中文帮助，只有带了中文帮助的才叫中文版！） </strong>中文版来源是官网，不信可以对比MD5,我核对过，是一致的。 ## 软件注册 ### 下载安装软件和注册机 注册机可能会报毒，但是我用 Windows Defender 扫过，并没有报毒，可放心下载。<br><a href="https://pan.baidu.com/s/1o9g5T94">11.2注册机</a><br>安装 Mathematica 软件，安装完成会弹出激活对话窗口： <img src="/2018/02/10/mma/mma3.png" alt="mma3"> 这里要选择下方的<strong>其他方式激活</strong>，然后选择<strong>手动激活</strong> <img src="/2018/02/10/mma/mma4.png" alt="mma4"> 然后记下出现的** Math ID<strong> <img src="/2018/02/10/mma/mma5.png" alt="mma5"> </strong>注意，是把你电脑上那串数复制下来，不是上图里的数!**<br>此时不要关闭弹出的激活界面，打开注册机（注册机的扩展名是.exe，别去点那个again.nfo！），将MathID复制进注册机第一个输入框中，然后回车，或者点击注册机下方 Save mathpass得到Activation Key和Password。如图： <img src="/2018/02/10/mma/key.png" alt="key"> 注意：图中所示的是老版注册机的界面，它的Activation Key的格式是4位数字-4位数字-5位字母或者里面有::1。使用新版注册机算出来的Activation Key是4-4-6的形式。这里强烈不推荐使用新版注册机注册版本9和版本10，因为已经证实在许多计算机上，新版注册机无法完全注册版本9和版本10。老注册机在注册版本9时可能要多点步骤，下详。<br>还有，以上截图是版本8、9注册机的截图，版本10及以后的专属注册机只有那个黑乎乎的命令行界面，但使用方法和这个注册机没什么不同，不要大惊小怪！ ## 填写 Activation 和 Password 算出Activation Key和Password后，复制粘贴，填入Mathematica激活界面对应输入框即可。（注意：如果你使用了老版注册机或者版本10英文版的新注册机，那么，不要忘了把Password中的“ ::1 ”也给一起复制了！那也是密码的一部分·！）（如果你要手抄的话，注意这两个冒号都是英文冒号！）<br>注册完毕，享受盗版吧！最后再呼吁一句，有能力还是请尽量支持正版！</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教育邮箱获取正版 LINGO</title>
      <link href="2018/02/08/lingo/"/>
      <url>2018/02/08/lingo/</url>
      
        <content type="html"><![CDATA[<p>LINGO 是一款由美国 Lindo System 公司推出的"交互式的线性和通用优化求解器"，可以用来求解线性和非线性规划，也可以用于一些线性和非线性方程组的求解，功能十分强大，是数学建模必不可少的软件之一。 <a id="more"></a> 18年7月更新: 许可证一个账号只能申请一次</p><p>我在6月份的时候更换了固态硬盘,原本的许可证失效了,然后想重新申请一个许可证.但是今天接到lindo公司中国专员的店话,告知<strong>一个账号只能申请一次</strong>. 之后还收到一条短信,原文如下: &gt; XXX同学，请记下我的联系方式，因为总部系统已经默认您申请过，以后都会直接转给我处理。所以，与其您绕弯不如直接找我，而且关于lingo软件试用的政策，有可能还会改变，以后试用的时间和机会会越来短，但是一个账号只能申请一次是肯定的了，所以如果以后学校有采购计划，可以直接联系我。另外，可能下半年开始，我们会分析申请试用的数据，如果一个学校多人申请，但是总是不够买，这种情况有可能以后影响再次申请，即使您的账户从未申请过。祝使用愉快，我任何问题请随时联系我，薛钰，xueyu@lindochina.com</p><hr><h1 id="为什么不推荐使用破解版">为什么不推荐使用破解版</h1><p>由于全国大学生数学建模竞赛和美国大学生数学建模竞赛， LINGO 在国内高校的知名度并不算低。但是国内学生甚至教师，很多都在用过时的破解版或者绿化版 LINGO。比如 LINGO 11, 12, 当然也有 17.但是： 1. 破解版软件可能带有病毒； 2. 老版本软件可能功能受损；<br>例如目前流行比较广泛的 LINGO 11 在运算速度和运算结果上都存在误差。 # 获取正版 LINGO 其实 Lindo 公司免费为学校老师和学生提供教育版 LINGO 软件，官方说明可以看<a href="https://www.lindo.com/index.php?option=com_content&amp;view=article&amp;id=120&amp;Itemid=45">这里</a> &gt; We can supply <strong>six-month renewable educational research licenses</strong> for the unrestricted capacity version of LINGO with all options to qualifying <strong>students and professors free</strong> of charge. To request an educational research license, start by downloading and installing LINGO 17.</p><p>简单来说就是 Lindo 公司可以为学生和教师免费提供有效期半年、可重复申请的教育版 LINGO 许可证，而且这个版本没有任何限制。 下面我们来说说如何申请教育版许可证。<strong>需要 EDU 邮箱！！</strong> 如果你还不知道自己的 edu 邮箱账号，可以看<strong><a href="http://sukanka.xyz/2018/02/08/edu-email/">查看自己的 edu 邮箱</a> 首先去 LINGO 官网，下载自己想下载的版本,点击<a href="https://www.lindo.com/index.php/ls-downloads/try-lingo">这里</a> 跳转.推荐下载最新版，64位电脑推荐64 bit.</strong><br># 填写邮箱 <img src="/2018/02/08/lingo/l1.jpg" alt="email"> 选择了适合自己电脑版本的 LINGO 之后点击下载，会看到这样一个界面，大家按照规格用<strong>英文</strong>填写自己的基本信息。（First Name 是名， Last Name 是姓。）邮箱用学校分配的邮箱，一定要是带 <strong>edu</strong> 的邮箱。 然后选择提交。提交之后，有一个下载链接，下载后解压安装。</p><h1 id="生成-userinfo文件">生成 userinfo文件</h1><p>打开安装好的 LINGO 软件，先选择使用 Demo 版本，然后会提示是否生成 userinfo 文件，点击生成之后就可以在 LINGO 安装的文件夹下找到， 如果打开后没有提示可以通过 <strong>File --&gt; Lisense</strong>手动打开该界面。 下图是一个流程： <img src="/2018/02/08/lingo/Demo.png" alt="demo"> <img src="/2018/02/08/lingo/cr.png" alt="create"> <img src="/2018/02/08/lingo/userinfo.png" alt="userinfo"></p><h1 id="获取许可证">获取许可证</h1><p>通过自己学校分配的邮箱给 sales@lindo.com 发邮件，把 userinfo.txt 文件作为附件一起发送过去，标题一定要写，内容随便写点什么，但是最好不要留空，免得让人以为是垃圾邮件。 <img src="/2018/02/08/lingo/mail.png" alt="mail"> 然后发送即可。</p><h1 id="激活正版-lingo">激活正版 LINGO</h1><p>发送之后就是漫长的等待，一般是72小时答复，我等了3,4天的样子，第一封发了之后，过来两天又发了一封，最后可算是收到回信了，内容如下： &gt;Dear Sir/Madam, &gt; &gt; &gt; &gt;Thank you for your request. Below is a temporary educational research license key for LINGO 17.0. It is authorized for use exclusively for educational research and instruction on the machine from which you sent the user information. &gt; &gt; &gt; &gt;From the LINGO menu select File|License to display the LINGO password dialog box. Cut the license key below and paste it in the window of the dialog box and click OK. &gt; &gt; &gt; &gt;If at the end of the evaluation period you need to extend the period simply send the user information file (userinfo.txt) and we will issue a new license key. &gt; &gt; &gt; &gt;Please contact me if you have any questions or I can be of service. &gt; &gt; &gt; &gt;Kind Regards,</p><blockquote><p>Jane Rees</p><hr><p>Jane Rees</p><p>Lindo Systems Inc.</p><p>1415 N Dayton Street</p><p>Chicago, IL 60642 USA</p><p>312-988-7422 Tel | 312-988-9065 Fax</p><p>jrees@lindo.com</p><p>www.lindo.com</p><hr><p>LINGO Extended 17.00</p><p>Max Users: 1</p><p>Node Locked: Yes</p><p>Expiration Date: 07/21/2018</p><p>Enabled Solvers: Linear Nonlinear Global Barrier Mip Stochastic Conic</p><p>Usage: Educational</p><p>Machine Class: Win64 AMD/EMT</p></blockquote><blockquote><p>Serial#: 此处隐私，手动替换之</p></blockquote><blockquote><p>Dongle Required: No</p></blockquote><blockquote><p>License key:</p><pre class="line-numbers language-none"><code class="language-none">&gt;Ma%i-b*j9-*9f#-79Sk-WtuK-ZVVb-Who2-c8kY-9a7A-5p$%-&gt;*SrZ-XbES-iqeE-9reW-*b@K-9Tvm-6gfY-$jHB-gi6u-x9fg-&gt;6yy2-&amp;oQZ-PNan-T565-&amp;VgJ-K4Sk-FaUy-Zt8y-TG9&amp;-4A6P-&gt;t@b&amp;-*XuR-eoTs-C8ak-&amp;pBv-CYMo-ieJP-JZ8z-eDK8-kxdd-&gt;Esif-R6YT-iqHe-GEyr-ipUy-EJWi-fHjc-Why*-xFdf-@Ay5-&gt;d@Wr-gUcf-%na3-F?Pz-bQ89-uxF6-@Syj-7%jN-BsbF-yTRn-&gt;j89F-PBhd-Ju@L-D9ue-93cv-zV4P-qvuP-s&amp;Wi-kAGW-NLKS-&gt;3fkQ-iUUL-T5zR-ieeV-KV69-amxw-5RJj-BD6N-7CL%-aMsk-&gt;YpyR-nVzG-FPka-b5&amp;E-vQg9-GMS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是我收到的回复邮件，涉及隐私的地方已经手动处理了，另外，注意，获得的许可证有效期6个月，到期后可再次申请，许可证绑定机器，最多一人使用，因此，上述许可证大家可以不用尝试了,我修改了某个地方，所以它是无效的。另外我自己也试过，在其他机器上确实无法激活。 # 激活 LINGO 获得了许可证之后，我们激动地打开 LINGO ，通过 <strong>File --&gt; Lisense</strong> 找到之前的界面，输入许可证，然后选择<strong>OK</strong>即可激活 <img src="/2018/02/08/lingo/lic.png" alt="license"> <img src="/2018/02/08/lingo/edu.png" alt="ok"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux 折腾记之安装 Hexo</title>
      <link href="2018/01/30/termux/"/>
      <url>2018/01/30/termux/</url>
      
        <content type="html"><![CDATA[<p>我在 Windows 上成功部署了 Hexo, 并把本地文件也推送到了 GitHub ，突然想到通过 Termux, 在手机上也可以写博客。本文是我在手机上部署 Hexo 遇到的问题及解决办法。 <a id="more"></a></p><h1 id="安装-termux">安装 Termux</h1><h2 id="何为-termux">何为 Termux</h2><p>Termux 是一款开源且不需要 root，运行在 Android 终端的极其强大的 Linux 模拟器，支持 apt 和 pkg 管理软件包，完美支持 python,ruby,go,nodejs,git 等软件。 &gt; Termux is an Android terminal emulator and Linux environment app that works directly with no rooting or setup required. A minimal base system is installed automatically - additional packages are available using the APT package manager.</p><p><a href="https://github.com/termux">开源地址</a> <a href="https://termux.com/">Termux 官网</a> ## 安装 Termux 官方推荐使用 Google Play 和 F-Driod 两个下载地址, 我选择了 Google Play 的<a href="https://play.google.com/store/apps/details?id=com.termux">下载地址</a>(Google 大法好hhh),同时提供 F-Driod 的<a href="https://f-droid.org/packages/com.termux/">下载地址</a>. 下载完成之后正常安装打开，会进行初始化，下载一些必要组件。如果初始化不成功，请自行百度解决办法，本文暂不赘述(其实是我没有遇到过😉).安装成功之后我们会看到这样的界面：</p><figure><img src="/2018/01/30/termux/01.jpg" alt="init"><figcaption aria-hidden="true">init</figcaption></figure><p>现在 Termux 就已经安装好了 # 安装 Hexo ## 安装 ohmyzsh 主题 我们输入 <code>apt update &amp;&amp; apt upgrade</code> 来更新下软件列表。速度慢请自行魔法上网或者更换清华的软件源(不推荐).但是我们发现它好像有点单调啊，而且什么提示都没有，比如我们连目前在那个文件夹下都不知道！不高兴☹。于是我们打算安装 ohmyzsh 主题来美化一下。 首先输入 <code>apt install curl</code> 安装组件 <code>curl</code> ,然后输入<br><code>sh -c "$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)"</code><br>安装 <code>ohmyzsh</code>安装完成之后就会让我们选择彩色样式和字体颜色，彩色样式我选择的是 <code>33) tango.colors</code>,于是输入 <code>33</code>。字体颜色我选择的是 <code>12] Ubuntu Mono derivative Powerline.ttf</code> ,于是输入 <code>12</code>。然后重启一下 Termux 我们就能看到变化了，嗯，多了一个蓝色的箭头了，还不错。可以开始干正事了。</p><h2 id="node.js-安装-hexo">Node.js 安装 Hexo</h2><p>Node.js 是 Hexo 必不可少的依赖包。我们输入 <code>apt install nodejs</code> 来安装它，然后输入 <code>npm install hexo-cli -g</code> 来安装 Hexo. 如果安装成功了，你就可以看下一节了，可惜，由于 Android 8.0(Oreo)的缘故，我安装出错了。（吐血）错误信息显示如下:<br><pre class="line-numbers language-none"><code class="language-none">npm ERR! Cannot read property &#39;length&#39; of undefinednpm ERR! A complete log of this run can be found in:npm ERR!     &#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;home&#x2F;.npm&#x2F;_logs&#x2F;2018-01-30T14_19_17_572Z-debug.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre> 发现日志被写入到了 */data/data/com.termux/files/home/.npm/_logs/2018-01-30T14_19_17_572Z-debug.log* 文件（不同手机可能显示不一样，以实际显示的为准）</p><h3 id="解决错误">解决错误</h3><p><strong>注意：以下操作需要 root 权限！</strong> 我们进入到上述文件夹，打开log文件 <pre class="line-numbers language-none"><code class="language-none">0 info it worked if it ends with ok1 verbose cli [ &#39;&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;usr&#x2F;bin&#x2F;node&#39;,1 verbose cli   &#39;&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;usr&#x2F;bin&#x2F;npm&#39;,1 verbose cli   &#39;install&#39;,1 verbose cli   &#39;hexo-cli&#39;,1 verbose cli   &#39;-g&#39; ]2 info using npm@5.6.03 info using node@v8.9.44 verbose npm-session feefd70188bcf1ec5 verbose stack TypeError: Cannot read property &#39;length&#39; of undefined5 verbose stack     at Object.&lt;anonymous&gt; (&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;usr&#x2F;lib&#x2F;node_modules&#x2F;npm&#x2F;node_modules&#x2F;worker-farm&#x2F;lib&#x2F;farm.js:5:61)5 verbose stack     at Module._compile (module.js:643:30)5 verbose stack     at Object.Module._extensions..js (module.js:654:10)5 verbose stack     at Module.load (module.js:556:32)5 verbose stack     at tryModuleLoad (module.js:499:12)5 verbose stack     at Function.Module._load (module.js:491:3)5 verbose stack     at Module.require (module.js:587:17)5 verbose stack     at require (internal&#x2F;module.js:11:18)5 verbose stack     at Object.&lt;anonymous&gt; (&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;usr&#x2F;lib&#x2F;node_modules&#x2F;npm&#x2F;node_modules&#x2F;worker-farm&#x2F;lib&#x2F;index.js:3:14)5 verbose stack     at Module._compile (module.js:643:30)5 verbose stack     at Object.Module._extensions..js (module.js:654:10)5 verbose stack     at Module.load (module.js:556:32)5 verbose stack     at tryModuleLoad (module.js:499:12)5 verbose stack     at Function.Module._load (module.js:491:3)5 verbose stack     at Module.require (module.js:587:17)5 verbose stack     at require (internal&#x2F;module.js:11:18)6 verbose cwd &#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;home7 verbose Linux 3.18.66-blu_spark-OOS-OREO8 verbose argv &quot;&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;usr&#x2F;bin&#x2F;node&quot; &quot;&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;usr&#x2F;bin&#x2F;npm&quot; &quot;install&quot; &quot;hexo-cli&quot; &quot;-g&quot;9 verbose node v8.9.410 verbose npm  v5.6.011 error Cannot read property &#39;length&#39; of undefined12 verbose exit [ 1, true ]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 看到第一个出错的地方是位于<em>/data/data/com.termux/files/usr/lib/node_modules/npm/node_modules/worker-farm/lib</em> 的<em>farm.js</em> 文件。同时也知道了错误类型。我经过一番搜索后，发现了错误的原因是 nodejs中有一个函数 os.cpus() 返回值为 undefined 导致出现错误。 进一步研究后找到了解决办法：打开<em>/data/data/com.termux/files/usr/lib/node_modules/npm/node_modules/worker-farm/lib</em>文件夹 ，把farm.js文件的 <pre class="line-numbers language-none"><code class="language-none">use strict&#39;const DEFAULT_OPTIONS &#x3D; &#123;maxCallsPerWorker : Infinity, maxConcurrentWorkers : require(&#39;os&#39;).cpus().length<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre> 改成 <pre class="line-numbers language-none"><code class="language-none">use strict&#39;const DEFAULT_OPTIONS &#x3D; &#123;maxCallsPerWorker : Infinity, maxConcurrentWorkers : (require(&#39;os&#39;).cpus()||&#123; length:1&#125;).length<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre> 原理是让<em>maxConcurrentWokers</em>不会返回无效值，而是会返回1,注意<strong>括号</strong>。 返回 Termux 输入 <code>npm install -g hexo-cli</code><br>你就会发现 Hexo-cli 已经正常安装了。</p><p><strong>注意，我们添加的内容是<code>||&#123; length:1&#125;</code> (其实还有括号),最后就只能使用一个核心，你也可以把<em>1</em> 改成其他值，但是不要超过 CPU 核心的数量。</strong></p><h2 id="安装-hexo-的组件">安装 Hexo 的组件</h2><p>安装 Hexo 之后，我们开始安装一些杂七杂八的组件之所以说”杂七杂八“，是因为有的我也不知道他们有什么用。代码如下:<br><pre class="line-numbers language-none"><code class="language-none">npm install hexo --save            #安装 Hexo, 不知道和 Hexo-cli 有什么区别apt install git         #安装 gitnpm install hexo-deployer-git --save            #部署到 GitHub 的组件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre> 安装完 Hexo 之后就是连接到 GitHub 部署线上博客了，首先需要注册一个 GitHub 账号，可以点击<a href="https://github.com/">这里</a> 进行注册。注册完毕之后，我们打开 Termux, 输入 user.name 和 user.email信息： <pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> 然后生成 SSH 文件密钥: <pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> 默认不需要密码，直接三个回车。 如果出现 <pre class="line-numbers language-none"><code class="language-none">The program &#39;ssh-keygen&#39; is not installed. Install it by executing: pkg install openssh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> 则说明我们没有安装 openssh, 输入 <code>pkg install openssh</code> 来进行安装，安装好了再次输入 <code>ssh-keygen -t rsa -C "你的GitHub注册邮箱"</code>之后看到这样一段文字: <pre class="line-numbers language-none"><code class="language-none">Generating public&#x2F;private rsa key pair.Enter file in which to save the key (&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;home&#x2F;.ssh&#x2F;id_rsa):<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> 进入 <code>/data/data/com.termux/files/home/.ssh</code> 文件夹(需要 root)，下面有三个文件,其中 <code>id_rsa.pub</code>是公钥文件，我们以文本方式打开它，复制内容（不用复制最后的邮箱）。然后进入 GitHub 点击自己的头像，选择 Settings, 再选择 SSH and GPG keys. 点击 new SSH key. 其中 Title 栏随便输（不要留空），Key 栏把刚刚复制的内容粘贴进去，然后点击 Add SSH key 保存。 <img src="/2018/01/30/termux/set.jpg" alt="set"> 暂时更新到这里。以后有时间再更新。</p>]]></content>
      
      
      <categories>
          
          <category> Andriod </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Termux </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决PC百度云限速</title>
      <link href="2018/01/29/crack_baiduyun/"/>
      <url>2018/01/29/crack_baiduyun/</url>
      
        <content type="html"><![CDATA[<p>百度网盘很早就开始限速了，虽然有百度云转外链的方法，但是，如果下载时间过长，可能会还没下完外链就失效了。本文提供了一个解决百度云PC5.7.1及以前版本客户端限速的办法。</p><a id="more"></a><p><strong>2018.11.10 更新:</strong> 方法已无法使用,推荐使用<a href="https://pandownload.com/">pandownload</a>或者其他工具 <strong>2018.3.4更新：</strong>好像没用了，虽然显示剩余时间还很长，但是下载速度很慢，和未加速一样。 # 安装百度云 此方法仅对百度网盘<strong>5.7.1及以前的版本有效</strong>，对最新的5.7.2无效！如果您已经安装了之后版本的百度云，请先卸载。查看百度云的版本方式如下：</p><figure><img src="/2018/01/29/crack_baiduyun/查看版本.png" alt="check_version"><figcaption aria-hidden="true">check_version</figcaption></figure><p>首先，我们要找到一个5.7.1版本的百度云网盘，按照我的想法，我是<em>尽量去官网下载软件</em>，第三方下载的可能被修改过。百度云的官方网站只提供最新版本5.7.2，不提供历史版本下载。但是我还是找到了<strong>官方的下载链接</strong>：点击<a href="http://issuecdn.baidupcs.com/issue/netdisk/yunguanjia/BaiduNetdisk_5.7.1.exe">这里</a>进行下载。注：本文对<strong>百度云</strong>和<strong>百度网盘</strong>不加区分。</p><p>正常下载之后进行安装，把安装的文件夹记下来。</p><figure><img src="/2018/01/29/crack_baiduyun/安装.png" alt="安装文件夹"><figcaption aria-hidden="true">安装文件夹</figcaption></figure><p>安装完成之后，我们进入百度网盘安装的文件夹，<strong>删除掉AutoUpdate文件夹</strong>(我的是*D:).之后打开百度云网盘，登陆账号，并<strong>关闭自动升级</strong>。</p><figure><img src="/2018/01/29/crack_baiduyun/取消升级.png" alt="关闭升级"><figcaption aria-hidden="true">关闭升级</figcaption></figure><p>注：<strong>删除AutoUpdate文件夹步骤不可省略，否则即使关闭了自动升级，百度云还是会自动升级。</strong></p><p>到这里百度云我们就设置好了。</p><h1 id="安装cheat-engine">安装Cheat Engine</h1><p>Cheat Engine 是一个修改本地内存数据来达到作弊的效果的软件。我们可以用它来把百度云本来只有300秒的加速时间修改成很长的时间，从而一直使用加速。可以点击<strong><a href="http://www.cheatengine.org/">这里</a></strong>去官网下载安装.</p><h1 id="无限试用加速">无限试用加速</h1><p>安装完成后，先打开百度云，下载你要下载的文件，等到出现<em>免费试用</em>的提示的时候，(要下载一个超过200MB的文件才会出现试用加速) 打开Cheat Engine, 点击那个颜色渐变的一闪一闪的按钮</p><figure><img src="/2018/01/29/crack_baiduyun/ch1.png" alt="button"><figcaption aria-hidden="true">button</figcaption></figure><p>选择<strong>百度云</strong>，并点击<strong>OPEN</strong></p><figure><img src="/2018/01/29/crack_baiduyun/ch2.png" alt="click"><figcaption aria-hidden="true">click</figcaption></figure><p>应该会看见这样一个界面(290是我输入的)</p><figure><img src="/2018/01/29/crack_baiduyun/ch3.png" alt="screen"><figcaption aria-hidden="true">screen</figcaption></figure><p>然后在我输入的那个地方输入290（其实可以是0-300之间的任意整数），然后切到百度云，点击<strong>免费试用</strong>并迅速切换到Cheat Engine，看到剩余时间还有290秒的时候，点下Cheat Engine上的<strong>First Scan</strong>, <img src="/2018/01/29/crack_baiduyun/ch4.png" alt="first"></p><p>再把290改成<strong>280</strong>，等到试用时间还剩280秒的时候点击<strong>Next Scan</strong> ，(由于要写博客，我改的是250）</p><figure><img src="/2018/01/29/crack_baiduyun/ch5.png" alt="sec"><figcaption aria-hidden="true">sec</figcaption></figure><p>应该就能确定唯一一个值，并且它每秒钟减少1，我们先双击一下左边找出来的那条数据，在下面会添加一条记录出来.然后我们点击一下<strong>Active下面的方框</strong>，发现数值已经不再减少了。（其实到这里就可以了）</p><figure><img src="/2018/01/29/crack_baiduyun/ch6.png" alt="stop"><figcaption aria-hidden="true">stop</figcaption></figure><p>但是我们仍然不放心，于是我们双击Value下面的那个数值，把它改成一个很大的数值，比如999999999（建议不要超过10位）。</p><figure><img src="/2018/01/29/crack_baiduyun/ch7.png" alt="改数值"><figcaption aria-hidden="true">改数值</figcaption></figure><p>最后我们发现百度云的超级会员加速试用也变成999999999了。(实际可能会相差1，原因不明）</p><figure><img src="/2018/01/29/crack_baiduyun/ch8.png" alt="result"><figcaption aria-hidden="true">result</figcaption></figure><p>百度云会员加速<strong>一天可以试用两次</strong>，如果你第一次失败了，可以关掉取消下载，并关掉百度云和Cheat Engine 再试一次。</p><p>我们的教程到这里就结束了。本博客暂未开通评论功能，如有任何问题，可以给我发邮件。</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度云 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
